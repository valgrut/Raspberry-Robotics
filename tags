!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asciidoc	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Asciidoc	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Asciidoc	a,anchor	/anchors/
!_TAG_KIND_DESCRIPTION!Asciidoc	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Asciidoc	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Asciidoc	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Asciidoc	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CSS	c,class	/classes/
!_TAG_KIND_DESCRIPTION!CSS	i,id	/identities/
!_TAG_KIND_DESCRIPTION!CSS	s,selector	/selectors/
!_TAG_KIND_DESCRIPTION!HTML	C,stylesheet	/stylesheets/
!_TAG_KIND_DESCRIPTION!HTML	I,id	/identifiers/
!_TAG_KIND_DESCRIPTION!HTML	J,script	/scripts/
!_TAG_KIND_DESCRIPTION!HTML	a,anchor	/named anchors/
!_TAG_KIND_DESCRIPTION!HTML	c,class	/classes/
!_TAG_KIND_DESCRIPTION!HTML	h,heading1	/H1 headings/
!_TAG_KIND_DESCRIPTION!HTML	i,heading2	/H2 headings/
!_TAG_KIND_DESCRIPTION!HTML	j,heading3	/H3 headings/
!_TAG_KIND_DESCRIPTION!HTML	t,title	/titles/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!JavaProperties	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asciidoc	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!CSS	0.0	/current.age/
!_TAG_PARSER_VERSION!HTML	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaProperties	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jpeska/Repositories/Raspberry-Robotics/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!HTML!class	attribute	/assigned as attributes/
!_TAG_ROLE_DESCRIPTION!HTML!script	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!HTML!stylesheet	extFile	/referenced as external files/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
.img-container	Hexapod-markwtech/src/static/style.css	/^.img-container{$/;"	c
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["BatchingExample.ino"]$/;"	s	array:examples.1.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ModuleInfo.ino"]$/;"	s	array:examples.5.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["MultiDeviceProxyExample.ino"]$/;"	s	array:examples.2.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ServoEvaluatorExample.ino"]$/;"	s	array:examples.3.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SimpleExample.ino"]$/;"	s	array:examples.0.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SoftwareI2CExample.ino"]$/;"	s	array:examples.4.files
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
0	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["BatchingExample.ino"]$/;"	s	array:examples.1.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ModuleInfo.ino"]$/;"	s	array:examples.5.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["MultiDeviceProxyExample.ino"]$/;"	s	array:examples.2.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ServoEvaluatorExample.ino"]$/;"	s	array:examples.3.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SimpleExample.ino"]$/;"	s	array:examples.0.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SoftwareI2CExample.ino"]$/;"	s	array:examples.4.files
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
0	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
0	experiments/ESP_Async_WebServer/library.json	/^    {$/;"	o	array:dependencies
0	experiments/ESP_Async_WebServer/library.json	/^  "platforms": ["espressif8266", "espressif32"],$/;"	s	array:platforms
1	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
1	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
1	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
1	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
1	experiments/ESP_Async_WebServer/library.json	/^    {$/;"	o	array:dependencies
1	experiments/ESP_Async_WebServer/library.json	/^  "platforms": ["espressif8266", "espressif32"],$/;"	s	array:platforms
1. STL, videa, project pages	Kame-Quadpod/README.md	/^## 1. STL, videa, project pages$/;"	s	chapter:Kame quadpod
1.1. Examples	Kame-Quadpod/README.md	/^### 1.1. Examples$/;"	S	section:Kame quadpod""1. STL, videa, project pages
1.2. Project pages	Kame-Quadpod/README.md	/^### 1.2. Project pages$/;"	S	section:Kame quadpod""1. STL, videa, project pages
2	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
2	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
2	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:authors
2	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
2	experiments/ESP_Async_WebServer/library.json	/^    {$/;"	o	array:dependencies
2. Seznam materialu a soucastek k tisku	Kame-Quadpod/README.md	/^## 2. Seznam materialu a soucastek k tisku$/;"	s	chapter:Kame quadpod
2.1. STL list	Kame-Quadpod/README.md	/^### 2.1. STL list$/;"	S	section:Kame quadpod""2. Seznam materialu a soucastek k tisku
2.2. Dily	Kame-Quadpod/README.md	/^### 2.2. Dily$/;"	S	section:Kame quadpod""2. Seznam materialu a soucastek k tisku
3	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
3	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
3. Zapojeni a sestaveni	Kame-Quadpod/README.md	/^## 3. Zapojeni a sestaveni$/;"	s	chapter:Kame quadpod
3.1. Zapojeni a sestaveni	Kame-Quadpod/README.md	/^### 3.1. Zapojeni a sestaveni$/;"	S	section:Kame quadpod""3. Zapojeni a sestaveni
3.1.1. Zapojeni Arduino - PCA9685	Kame-Quadpod/README.md	/^#### 3.1.1. Zapojeni Arduino - PCA9685$/;"	t	subsection:Kame quadpod""3. Zapojeni a sestaveni""3.1. Zapojeni a sestaveni
3.1.2. Zapojeni ESP8266 - PCA9685	Kame-Quadpod/README.md	/^#### 3.1.2. Zapojeni ESP8266 - PCA9685$/;"	t	subsection:Kame quadpod""3. Zapojeni a sestaveni""3.1. Zapojeni a sestaveni
3.2. Programovani	Kame-Quadpod/README.md	/^### 3.2. Programovani$/;"	S	section:Kame quadpod""3. Zapojeni a sestaveni
3.2.1. Arduino IDE required libraries	Kame-Quadpod/README.md	/^#### 3.2.1. Arduino IDE required libraries$/;"	t	subsection:Kame quadpod""3. Zapojeni a sestaveni""3.2. Programovani
4	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
4	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
5	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
5	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        {$/;"	o	array:examples
A	Turrets/angle-calc.py	/^A = ((pow(v,2)*(pow(v,2)-2*g*dy))\/(pow(g,2)*pow(dx,2)))$/;"	v
ACErrorTracker	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^ACErrorTracker::ACErrorTracker(AsyncClient *c):$/;"	f	class:ACErrorTracker
ACErrorTracker	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^class ACErrorTracker {$/;"	c
AD8_HIGH_TOREAD_AD7_HIGH_TOINC	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  AD8_HIGH_TOREAD_AD7_HIGH_TOINC = 1,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
AD8_HIGH_TOREAD_AD7_HIGH_TOINC	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  AD8_HIGH_TOREAD_AD7_HIGH_TOINC = 1,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOREAD	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOREAD = 0,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOREAD	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOREAD = 0,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOWRITE	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOWRITE = 2,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRBIT8_HIGH_TOWRITE	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRBIT8_HIGH_TOWRITE = 2,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE = 3,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE = 3,$/;"	e	enum:_Adafruit_BusIO_SPIRegType
ANGLE_TO_US	experiments/Servo/src/stm32f4/Servo.cpp	/^#define ANGLE_TO_US(/;"	d	file:
ARDUINOJSON_5_COMPATIBILITY	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  #define ARDUINOJSON_5_COMPATIBILITY$/;"	d
ASSERT_GENERIC	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define ASSERT_GENERIC(/;"	d
ASSERT_GENERIC_P	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define ASSERT_GENERIC_P(/;"	d
ASYNCEVENTSOURCE_H_	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^#define ASYNCEVENTSOURCE_H_$/;"	d
ASYNCPRINTER_H_	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^#define ASYNCPRINTER_H_$/;"	d
ASYNCTCP_H_	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^#define ASYNCTCP_H_$/;"	d
ASYNCWEBSERVERHANDLERIMPL_H_	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^#define ASYNCWEBSERVERHANDLERIMPL_H_$/;"	d
ASYNCWEBSERVERRESPONSEIMPL_H_	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^#define ASYNCWEBSERVERRESPONSEIMPL_H_$/;"	d
ASYNCWEBSERVER_REGEX_ATTRIBUTE	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^#define ASYNCWEBSERVER_REGEX_ATTRIBUTE /;"	d
ASYNCWEBSERVER_REGEX_ATTRIBUTE	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^#define ASYNCWEBSERVER_REGEX_ATTRIBUTE$/;"	d
ASYNCWEBSOCKET_H_	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^#define ASYNCWEBSOCKET_H_$/;"	d
ASYNCWEBSYNCHRONIZATION_H_	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^#define ASYNCWEBSYNCHRONIZATION_H_$/;"	d
ASYNC_JSON_H_	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^#define ASYNC_JSON_H_$/;"	d
ASYNC_MAX_ACK_TIME	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^#define ASYNC_MAX_ACK_TIME /;"	d
ASYNC_TCP_ASSERT	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define ASYNC_TCP_ASSERT(/;"	d
ASYNC_TCP_ASSERT	experiments/ESP_AsyncTCP/src/async_config.h	/^#define ASYNC_TCP_ASSERT(/;"	d
ASYNC_TCP_DEBUG	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define ASYNC_TCP_DEBUG(/;"	d
ASYNC_TCP_DEBUG	experiments/ESP_AsyncTCP/src/async_config.h	/^#define ASYNC_TCP_DEBUG(/;"	d
ASYNC_TCP_SSL_ENABLED	experiments/ESP_AsyncTCP/src/async_config.h	/^#define ASYNC_TCP_SSL_ENABLED /;"	d
ASYNC_WRITE_FLAG_COPY	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^#define ASYNC_WRITE_FLAG_COPY /;"	d
ASYNC_WRITE_FLAG_MORE	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^#define ASYNC_WRITE_FLAG_MORE /;"	d
ATB_RX_MODE_FREE	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^    ATB_RX_MODE_FREE,$/;"	e	enum:__anona68996970103
ATB_RX_MODE_NONE	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^    ATB_RX_MODE_NONE,$/;"	e	enum:__anona68996970103
ATB_RX_MODE_READ_BYTES	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^    ATB_RX_MODE_READ_BYTES,$/;"	e	enum:__anona68996970103
ATB_RX_MODE_TERMINATOR	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^    ATB_RX_MODE_TERMINATOR,$/;"	e	enum:__anona68996970103
ATB_RX_MODE_TERMINATOR_STRING	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^    ATB_RX_MODE_TERMINATOR_STRING$/;"	e	enum:__anona68996970103
AWSC_PING_PAYLOAD	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ const char * AWSC_PING_PAYLOAD = "ESPAsyncWebServer-PING";$/;"	v	typeref:typename:const char *
AWSC_PING_PAYLOAD_LEN	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ const size_t AWSC_PING_PAYLOAD_LEN = 22;$/;"	v	typeref:typename:const size_t
AcAckHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*, size_t len, uint32_t time)> AcAckHandler;$/;"	t
AcConnectHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*)> AcConnectHandler;$/;"	t
AcDataHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*, void *data, size_t len)> AcDataHandler;$/;"	t
AcErrorHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*, err_t error)> AcErrorHandler;$/;"	t
AcPacketHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*, struct pbuf *pb)> AcPacketHandler;$/;"	t
AcSSlFileHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<int(void* arg, const char *filename, uint8_t **buf)> AcSSlFileHandler;$/;"	t
AcTimeoutHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, AsyncClient*, uint32_t time)> AcTimeoutHandler;$/;"	t
Adafruit Bus IO Library [![Build Status](https://github.com/adafruit/Adafruit_BusIO/workflows/Arduino%20Library%20CI/badge.svg)](https://github.com/adafruit/Adafruit_BusIO/actions)	InMoove-Arm/libraries/Adafruit_BusIO/README.md	/^# Adafruit Bus IO Library [![Build Status](https:\/\/github.com\/adafruit\/Adafruit_BusIO\/workf/;"	c
Adafruit Bus IO Library [![Build Status](https://github.com/adafruit/Adafruit_BusIO/workflows/Arduino%20Library%20CI/badge.svg)](https://github.com/adafruit/Adafruit_BusIO/actions)	Kame-Quadpod/libraries/Adafruit_BusIO/README.md	/^# Adafruit Bus IO Library [![Build Status](https:\/\/github.com\/adafruit\/Adafruit_BusIO\/workf/;"	c
Adafruit PCA9685 PWM Servo Driver Library ![Build Status](https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library/workflows/Arduino%20Library%20CI/badge.svg)	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/README.md	/^# Adafruit PCA9685 PWM Servo Driver Library ![Build Status](https:\/\/github.com\/adafruit\/Adaf/;"	c
Adafruit PCA9685 PWM Servo Driver Library ![Build Status](https://github.com/adafruit/Adafruit-PWM-Servo-Driver-Library/workflows/Arduino%20Library%20CI/badge.svg)	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/README.md	/^# Adafruit PCA9685 PWM Servo Driver Library ![Build Status](https:\/\/github.com\/adafruit\/Adaf/;"	c
Adafruit_BusIO	InMoove-Arm/libraries/Adafruit_BusIO/CMakeLists.txt	/^project(Adafruit_BusIO)$/;"	p
Adafruit_BusIO	Kame-Quadpod/libraries/Adafruit_BusIO/CMakeLists.txt	/^project(Adafruit_BusIO)$/;"	p
Adafruit_BusIO_Register	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register($/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice *i2cdevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_SPIDevice *spidevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_Register {$/;"	c
Adafruit_BusIO_Register	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register($/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_I2CDevice *i2cdevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_Register::Adafruit_BusIO_Register(Adafruit_SPIDevice *spidevice,$/;"	f	class:Adafruit_BusIO_Register
Adafruit_BusIO_Register	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_Register {$/;"	c
Adafruit_BusIO_RegisterBits	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits($/;"	f	class:Adafruit_BusIO_RegisterBits
Adafruit_BusIO_RegisterBits	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_RegisterBits {$/;"	c
Adafruit_BusIO_RegisterBits	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits($/;"	f	class:Adafruit_BusIO_RegisterBits
Adafruit_BusIO_RegisterBits	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^class Adafruit_BusIO_RegisterBits {$/;"	c
Adafruit_BusIO_Register_h	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^#define Adafruit_BusIO_Register_h$/;"	d
Adafruit_BusIO_Register_h	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^#define Adafruit_BusIO_Register_h$/;"	d
Adafruit_BusIO_SPIRegType	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^} Adafruit_BusIO_SPIRegType;$/;"	t	typeref:enum:_Adafruit_BusIO_SPIRegType
Adafruit_BusIO_SPIRegType	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^} Adafruit_BusIO_SPIRegType;$/;"	t	typeref:enum:_Adafruit_BusIO_SPIRegType
Adafruit_I2CDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^Adafruit_I2CDevice::Adafruit_I2CDevice(uint8_t addr, TwoWire *theWire) {$/;"	f	class:Adafruit_I2CDevice
Adafruit_I2CDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^class Adafruit_I2CDevice {$/;"	c
Adafruit_I2CDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^Adafruit_I2CDevice::Adafruit_I2CDevice(uint8_t addr, TwoWire *theWire) {$/;"	f	class:Adafruit_I2CDevice
Adafruit_I2CDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^class Adafruit_I2CDevice {$/;"	c
Adafruit_I2CDevice_h	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^#define Adafruit_I2CDevice_h$/;"	d
Adafruit_I2CDevice_h	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^#define Adafruit_I2CDevice_h$/;"	d
Adafruit_I2CRegister	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_Register Adafruit_I2CRegister;$/;"	t	typeref:typename:Adafruit_BusIO_Register
Adafruit_I2CRegister	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_Register Adafruit_I2CRegister;$/;"	t	typeref:typename:Adafruit_BusIO_Register
Adafruit_I2CRegisterBits	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_RegisterBits Adafruit_I2CRegisterBits;$/;"	t	typeref:typename:Adafruit_BusIO_RegisterBits
Adafruit_I2CRegisterBits	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^typedef Adafruit_BusIO_RegisterBits Adafruit_I2CRegisterBits;$/;"	t	typeref:typename:Adafruit_BusIO_RegisterBits
Adafruit_PWMServoDriver	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver()$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr)$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr,$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^class Adafruit_PWMServoDriver {$/;"	c
Adafruit_PWMServoDriver	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver()$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr)$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^Adafruit_PWMServoDriver::Adafruit_PWMServoDriver(const uint8_t addr,$/;"	f	class:Adafruit_PWMServoDriver
Adafruit_PWMServoDriver	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^class Adafruit_PWMServoDriver {$/;"	c
Adafruit_SPIDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, int8_t sckpin,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, uint32_t freq,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^class Adafruit_SPIDevice {$/;"	c
Adafruit_SPIDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, int8_t sckpin,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::Adafruit_SPIDevice(int8_t cspin, uint32_t freq,$/;"	f	class:Adafruit_SPIDevice
Adafruit_SPIDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^class Adafruit_SPIDevice {$/;"	c
Adafruit_SPIDevice_h	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define Adafruit_SPIDevice_h$/;"	d
Adafruit_SPIDevice_h	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define Adafruit_SPIDevice_h$/;"	d
Adding Default Headers	experiments/ESP_Async_WebServer/README.md	/^### Adding Default Headers$/;"	S	section:ESPAsyncWebServer""Setting up the server
ApCloseHandler	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^typedef std::function<void(void*, AsyncPrinter*)> ApCloseHandler;$/;"	t
ApDataHandler	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^typedef std::function<void(void*, AsyncPrinter*, uint8_t*, size_t)> ApDataHandler;$/;"	t
ArBodyHandlerFunction	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<void(AsyncWebServerRequest *request, uint8_t *data, size_t len, size_t ind/;"	t
ArDisconnectHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<void(void)> ArDisconnectHandler;$/;"	t
ArEventHandlerFunction	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^typedef std::function<void(AsyncEventSourceClient *client)> ArEventHandlerFunction;$/;"	t
ArJsonRequestHandlerFunction	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^typedef std::function<void(AsyncWebServerRequest *request, JsonVariant &json)> ArJsonRequestHand/;"	t
ArRequestFilterFunction	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<bool(AsyncWebServerRequest *request)> ArRequestFilterFunction;$/;"	t
ArRequestHandlerFunction	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<void(AsyncWebServerRequest *request)> ArRequestHandlerFunction;$/;"	t
ArUploadHandlerFunction	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<void(AsyncWebServerRequest *request, const String& filename, size_t index,/;"	t
ArduinoJson Advanced Response	experiments/ESP_Async_WebServer/README.md	/^### ArduinoJson Advanced Response$/;"	S	section:ESPAsyncWebServer""Responses
ArduinoJson Basic Response	experiments/ESP_Async_WebServer/README.md	/^### ArduinoJson Basic Response$/;"	S	section:ESPAsyncWebServer""Responses
AsNotifyHandler	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef std::function<void(void*, size_t event)> AsNotifyHandler;$/;"	t
Async Event Source Plugin	experiments/ESP_Async_WebServer/README.md	/^## Async Event Source Plugin$/;"	s	chapter:ESPAsyncWebServer
Async TCP Library for ESP8266 Arduino	experiments/ESP_AsyncTCP/README.md	/^### Async TCP Library for ESP8266 Arduino$/;"	S	chapter:ESPAsyncTCP
Async WebSocket Event	experiments/ESP_Async_WebServer/README.md	/^### Async WebSocket Event$/;"	S	section:ESPAsyncWebServer""Async WebSocket Plugin
Async WebSocket Plugin	experiments/ESP_Async_WebServer/README.md	/^## Async WebSocket Plugin$/;"	s	chapter:ESPAsyncWebServer
AsyncAbstractResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncAbstractResponse: public AsyncWebServerResponse {$/;"	c
AsyncAbstractResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncAbstractResponse::AsyncAbstractResponse(AwsTemplateProcessor callback): _callback(callback)$/;"	f	class:AsyncAbstractResponse
AsyncBasicResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncBasicResponse: public AsyncWebServerResponse {$/;"	c
AsyncBasicResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncBasicResponse::AsyncBasicResponse(int code, const String& contentType, const String& conten/;"	f	class:AsyncBasicResponse
AsyncCallbackJsonWebHandler	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  AsyncCallbackJsonWebHandler(const String& uri, ArJsonRequestHandlerFunction onRequest) $/;"	f	class:AsyncCallbackJsonWebHandler
AsyncCallbackJsonWebHandler	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^class AsyncCallbackJsonWebHandler: public AsyncWebHandler {$/;"	c
AsyncCallbackResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncCallbackResponse: public AsyncAbstractResponse {$/;"	c
AsyncCallbackResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncCallbackResponse::AsyncCallbackResponse(const String& contentType, size_t len, AwsResponseF/;"	f	class:AsyncCallbackResponse
AsyncCallbackWebHandler	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    AsyncCallbackWebHandler() : _uri(), _method(HTTP_ANY), _onRequest(NULL), _onUpload(NULL), _o/;"	f	class:AsyncCallbackWebHandler
AsyncCallbackWebHandler	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^class AsyncCallbackWebHandler: public AsyncWebHandler {$/;"	c
AsyncChunkedResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncChunkedResponse: public AsyncAbstractResponse {$/;"	c
AsyncChunkedResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncChunkedResponse::AsyncChunkedResponse(const String& contentType, AwsResponseFiller callback/;"	f	class:AsyncChunkedResponse
AsyncClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncClient::AsyncClient(tcp_pcb* pcb, SSL_CTX * ssl_ctx):$/;"	f	class:AsyncClient
AsyncClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^class AsyncClient {$/;"	c
AsyncClient and AsyncServer	experiments/ESP_AsyncTCP/README.md	/^## AsyncClient and AsyncServer$/;"	s	chapter:ESPAsyncTCP
AsyncEventSource	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSource::AsyncEventSource(const String& url)$/;"	f	class:AsyncEventSource
AsyncEventSource	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^class AsyncEventSource: public AsyncWebHandler {$/;"	c
AsyncEventSourceClient	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSourceClient::AsyncEventSourceClient(AsyncWebServerRequest *request, AsyncEventSource /;"	f	class:AsyncEventSourceClient
AsyncEventSourceClient	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^class AsyncEventSourceClient {$/;"	c
AsyncEventSourceMessage	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSourceMessage::AsyncEventSourceMessage(const char * data, size_t len)$/;"	f	class:AsyncEventSourceMessage
AsyncEventSourceMessage	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^class AsyncEventSourceMessage {$/;"	c
AsyncEventSourceResponse	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSourceResponse::AsyncEventSourceResponse(AsyncEventSource *server){$/;"	f	class:AsyncEventSourceResponse
AsyncEventSourceResponse	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^class AsyncEventSourceResponse: public AsyncWebServerResponse {$/;"	c
AsyncFileResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncFileResponse: public AsyncAbstractResponse {$/;"	c
AsyncFileResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncFileResponse::AsyncFileResponse(FS &fs, const String& path, const String& contentType, bool/;"	f	class:AsyncFileResponse
AsyncFileResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncFileResponse::AsyncFileResponse(File content, const String& path, const String& contentType/;"	f	class:AsyncFileResponse
AsyncJsonResponse	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    AsyncJsonResponse(bool isArray=false): _isValid{false} {$/;"	f	class:AsyncJsonResponse
AsyncJsonResponse	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^class AsyncJsonResponse: public AsyncAbstractResponse {$/;"	c
AsyncPrinter	experiments/ESP_AsyncTCP/README.md	/^## AsyncPrinter$/;"	s	chapter:ESPAsyncTCP
AsyncPrinter	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^AsyncPrinter::AsyncPrinter()$/;"	f	class:AsyncPrinter
AsyncPrinter	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^AsyncPrinter::AsyncPrinter(AsyncClient *client, size_t txBufLen)$/;"	f	class:AsyncPrinter
AsyncPrinter	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^class AsyncPrinter: public Print {$/;"	c
AsyncProgmemResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncProgmemResponse: public AsyncAbstractResponse {$/;"	c
AsyncProgmemResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncProgmemResponse::AsyncProgmemResponse(int code, const String& contentType, const uint8_t * /;"	f	class:AsyncProgmemResponse
AsyncResponseStream	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncResponseStream: public AsyncAbstractResponse, public Print {$/;"	c
AsyncResponseStream	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncResponseStream::AsyncResponseStream(const String& contentType, size_t bufferSize){$/;"	f	class:AsyncResponseStream
AsyncServer	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncServer::AsyncServer(IPAddress addr, uint16_t port)$/;"	f	class:AsyncServer
AsyncServer	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncServer::AsyncServer(uint16_t port)$/;"	f	class:AsyncServer
AsyncServer	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^class AsyncServer {$/;"	c
AsyncStaticWebHandler	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^class AsyncStaticWebHandler: public AsyncWebHandler {$/;"	c
AsyncStaticWebHandler	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler::AsyncStaticWebHandler(const char* uri, FS& fs, const char* path, const ch/;"	f	class:AsyncStaticWebHandler
AsyncStreamResponse	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^class AsyncStreamResponse: public AsyncAbstractResponse {$/;"	c
AsyncStreamResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncStreamResponse::AsyncStreamResponse(Stream &stream, const String& contentType, size_t len, /;"	f	class:AsyncStreamResponse
AsyncTCPbuffer	experiments/ESP_AsyncTCP/README.md	/^## AsyncTCPbuffer$/;"	s	chapter:ESPAsyncTCP
AsyncTCPbuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^AsyncTCPbuffer::AsyncTCPbuffer(AsyncClient* client) {$/;"	f	class:AsyncTCPbuffer
AsyncTCPbuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^class AsyncTCPbuffer: public Print {$/;"	c
AsyncTCPbufferDataCb	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        typedef std::function<size_t(uint8_t * payload, size_t length)> AsyncTCPbufferDataCb;$/;"	t	class:AsyncTCPbuffer
AsyncTCPbufferDisconnectCb	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        typedef std::function<bool(AsyncTCPbuffer * obj)> AsyncTCPbufferDisconnectCb;$/;"	t	class:AsyncTCPbuffer
AsyncTCPbufferDoneCb	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        typedef std::function<void(bool ok, void * ret)> AsyncTCPbufferDoneCb;$/;"	t	class:AsyncTCPbuffer
AsyncWebHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHandler():_username(""), _password(""){}$/;"	f	class:AsyncWebHandler
AsyncWebHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebHandler {$/;"	c
AsyncWebHeader	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHeader(const String& data): _name(), _value(){$/;"	f	class:AsyncWebHeader
AsyncWebHeader	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHeader(const String& name, const String& value): _name(name), _value(value){}$/;"	f	class:AsyncWebHeader
AsyncWebHeader	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebHeader {$/;"	c
AsyncWebLock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  AsyncWebLock() {$/;"	f	class:AsyncWebLock
AsyncWebLock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^class AsyncWebLock$/;"	c
AsyncWebLockGuard	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  AsyncWebLockGuard(const AsyncWebLock &l) {$/;"	f	class:AsyncWebLockGuard
AsyncWebLockGuard	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^class AsyncWebLockGuard$/;"	c
AsyncWebParameter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebParameter(const String& name, const String& value, bool form=false, bool file=false,/;"	f	class:AsyncWebParameter
AsyncWebParameter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebParameter {$/;"	c
AsyncWebRewrite	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebRewrite(const char* from, const char* to): _from(from), _toUrl(to), _params(String()/;"	f	class:AsyncWebRewrite
AsyncWebRewrite	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebRewrite {$/;"	c
AsyncWebServer	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebServer {$/;"	c
AsyncWebServer	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncWebServer::AsyncWebServer(uint16_t port)$/;"	f	class:AsyncWebServer
AsyncWebServerRequest	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebServerRequest {$/;"	c
AsyncWebServerRequest	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerRequest::AsyncWebServerRequest(AsyncWebServer* s, AsyncClient* c)$/;"	f	class:AsyncWebServerRequest
AsyncWebServerResponse	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class AsyncWebServerResponse {$/;"	c
AsyncWebServerResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncWebServerResponse::AsyncWebServerResponse()$/;"	f	class:AsyncWebServerResponse
AsyncWebSocket	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocket::AsyncWebSocket(const String& url)$/;"	f	class:AsyncWebSocket
AsyncWebSocket	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocket: public AsyncWebHandler {$/;"	c
AsyncWebSocketBasicMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketBasicMessage::AsyncWebSocketBasicMessage(const char * data, size_t len, uint8_t op/;"	f	class:AsyncWebSocketBasicMessage
AsyncWebSocketBasicMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketBasicMessage::AsyncWebSocketBasicMessage(uint8_t opcode, bool mask)$/;"	f	class:AsyncWebSocketBasicMessage
AsyncWebSocketBasicMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketBasicMessage: public AsyncWebSocketMessage {$/;"	c
AsyncWebSocketClient	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketClient::AsyncWebSocketClient(AsyncWebServerRequest *request, AsyncWebSocket *serve/;"	f	class:AsyncWebSocketClient
AsyncWebSocketClient	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketClient {$/;"	c
AsyncWebSocketClientLinkedList	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    typedef LinkedList<AsyncWebSocketClient *> AsyncWebSocketClientLinkedList;$/;"	t	class:AsyncWebSocket	typeref:typename:LinkedList<AsyncWebSocketClient * >
AsyncWebSocketControl	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    AsyncWebSocketControl(uint8_t opcode, uint8_t *data=NULL, size_t len=0, bool mask=false)$/;"	f	class:AsyncWebSocketControl	file:
AsyncWebSocketControl	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^class AsyncWebSocketControl {$/;"	c	file:
AsyncWebSocketMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocketMessage():_opcode(WS_TEXT),_mask(false),_status(WS_MSG_ERROR){}$/;"	f	class:AsyncWebSocketMessage
AsyncWebSocketMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketMessage {$/;"	c
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::AsyncWebSocketMessageBuffer()$/;"	f	class:AsyncWebSocketMessageBuffer
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::AsyncWebSocketMessageBuffer(AsyncWebSocketMessageBuffer && copy)$/;"	f	class:AsyncWebSocketMessageBuffer
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::AsyncWebSocketMessageBuffer(const AsyncWebSocketMessageBuffer & cop/;"	f	class:AsyncWebSocketMessageBuffer
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::AsyncWebSocketMessageBuffer(size_t size)$/;"	f	class:AsyncWebSocketMessageBuffer
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::AsyncWebSocketMessageBuffer(uint8_t * data, size_t size) $/;"	f	class:AsyncWebSocketMessageBuffer
AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketMessageBuffer {$/;"	c
AsyncWebSocketMultiMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMultiMessage::AsyncWebSocketMultiMessage(AsyncWebSocketMessageBuffer * buffer, uin/;"	f	class:AsyncWebSocketMultiMessage
AsyncWebSocketMultiMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketMultiMessage: public AsyncWebSocketMessage {$/;"	c
AsyncWebSocketResponse	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketResponse::AsyncWebSocketResponse(const String& key, AsyncWebSocket *server){$/;"	f	class:AsyncWebSocketResponse
AsyncWebSocketResponse	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^class AsyncWebSocketResponse: public AsyncWebServerResponse {$/;"	c
AwsClientStatus	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_DISCONNECTED, WS_CONNECTED, WS_DISCONNECTING } AwsClientStatus;$/;"	t	typeref:enum:__anon203386220203
AwsEventHandler	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef std::function<void(AsyncWebSocket * server, AsyncWebSocketClient * client, AwsEventType /;"	t
AwsEventType	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	t	typeref:enum:__anon203386220503
AwsFrameInfo	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^} AwsFrameInfo;$/;"	t	typeref:struct:__anon203386220108
AwsFrameType	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	t	typeref:enum:__anon203386220303
AwsMessageStatus	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_MSG_SENDING, WS_MSG_SENT, WS_MSG_ERROR } AwsMessageStatus;$/;"	t	typeref:enum:__anon203386220403
AwsResponseFiller	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<size_t(uint8_t*, size_t, size_t)> AwsResponseFiller;$/;"	t
AwsTemplateProcessor	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef std::function<String(const String&)> AwsTemplateProcessor;$/;"	t
BASE_SERVO_ID	Hexapod-markwtech/src/hexapod.py	/^BASE_SERVO_ID = 2$/;"	v
BLACK	pygame_plot.py	/^BLACK = (0, 0, 0)$/;"	v
BLACK	pygame_plot2.py	/^BLACK = (0, 0, 0)$/;"	v
BOUNDARY_OR_DATA	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  BOUNDARY_OR_DATA,$/;"	e	enum:__anon7471535f0b03	file:
BUSIO_HAS_HW_SPI	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define BUSIO_HAS_HW_SPI$/;"	d
BUSIO_HAS_HW_SPI	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define BUSIO_HAS_HW_SPI$/;"	d
BUSIO_USE_FAST_PINIO	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define BUSIO_USE_FAST_PINIO$/;"	d
BUSIO_USE_FAST_PINIO	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define BUSIO_USE_FAST_PINIO$/;"	d
Bad Responses	experiments/ESP_Async_WebServer/README.md	/^## Bad Responses$/;"	s	chapter:ESPAsyncWebServer
Basic info	Xpider-cute-robot/README.md	/^### Basic info$/;"	S	chapter:Kame
Basic response with HTTP Code	experiments/ESP_Async_WebServer/README.md	/^### Basic response with HTTP Code$/;"	S	section:ESPAsyncWebServer""Responses
Basic response with HTTP Code and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Basic response with HTTP Code and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Basic response with string content	experiments/ESP_Async_WebServer/README.md	/^### Basic response with string content$/;"	S	section:ESPAsyncWebServer""Responses
Basic response with string content and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Basic response with string content and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Batching Example	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Batching Example$/;"	S	section:PCA9685-Arduino""Example Usage
Batching Example	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Batching Example$/;"	S	section:PCA9685-Arduino""Example Usage
Body data handling	experiments/ESP_Async_WebServer/README.md	/^### Body data handling$/;"	S	section:ESPAsyncWebServer""Request Variables
Body parts	Hexapod-markwtech/README.md	/^### Body parts$/;"	S	section:Hexapod - Markwtech (PhantomX clone)""STL parts (Nektere nahradit upravenymi, mnou vyrobenymi a pod.)
BusIOBitOrder	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef BitOrder BusIOBitOrder;$/;"	t	typeref:typename:BitOrder
BusIOBitOrder	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^} BusIOBitOrder;$/;"	t	typeref:enum:_BitOrder
BusIOBitOrder	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef BitOrder BusIOBitOrder;$/;"	t	typeref:typename:BitOrder
BusIOBitOrder	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^} BusIOBitOrder;$/;"	t	typeref:enum:_BitOrder
BusIO_PortMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint32_t BusIO_PortMask;$/;"	t	typeref:typename:uint32_t
BusIO_PortMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t BusIO_PortMask;$/;"	t	typeref:typename:uint8_t
BusIO_PortMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint32_t BusIO_PortMask;$/;"	t	typeref:typename:uint32_t
BusIO_PortMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t BusIO_PortMask;$/;"	t	typeref:typename:uint8_t
BusIO_PortReg	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint32_t BusIO_PortReg;$/;"	t	typeref:typename:volatile uint32_t
BusIO_PortReg	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint8_t BusIO_PortReg;$/;"	t	typeref:typename:volatile uint8_t
BusIO_PortReg	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint32_t BusIO_PortReg;$/;"	t	typeref:typename:volatile uint32_t
BusIO_PortReg	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef volatile uint8_t BusIO_PortReg;$/;"	t	typeref:typename:volatile uint8_t
CHANNEL_FOR_TIMER1	experiments/Servo/src/sam/ServoTimers.h	/^#define CHANNEL_FOR_TIMER1 /;"	d
CHANNEL_FOR_TIMER1	experiments/Servo/src/samd/ServoTimers.h	/^#define CHANNEL_FOR_TIMER1 /;"	d
CHANNEL_FOR_TIMER2	experiments/Servo/src/sam/ServoTimers.h	/^#define CHANNEL_FOR_TIMER2 /;"	d
CHANNEL_FOR_TIMER2	experiments/Servo/src/samd/ServoTimers.h	/^#define CHANNEL_FOR_TIMER2 /;"	d
CHANNEL_FOR_TIMER3	experiments/Servo/src/sam/ServoTimers.h	/^#define CHANNEL_FOR_TIMER3 /;"	d
CHANNEL_FOR_TIMER4	experiments/Servo/src/sam/ServoTimers.h	/^#define CHANNEL_FOR_TIMER4 /;"	d
CHANNEL_FOR_TIMER5	experiments/Servo/src/sam/ServoTimers.h	/^#define CHANNEL_FOR_TIMER5 /;"	d
COMPARE_TO_US	experiments/Servo/src/stm32f4/Servo.cpp	/^#define COMPARE_TO_US(/;"	d	file:
COMPONENT_ADD_INCLUDEDIRS	InMoove-Arm/libraries/Adafruit_BusIO/component.mk	/^COMPONENT_ADD_INCLUDEDIRS = .$/;"	m
COMPONENT_ADD_INCLUDEDIRS	Kame-Quadpod/libraries/Adafruit_BusIO/component.mk	/^COMPONENT_ADD_INCLUDEDIRS = .$/;"	m
COMPONENT_ADD_INCLUDEDIRS	experiments/ESP_Async_WebServer/CMakeLists.txt	/^set(COMPONENT_ADD_INCLUDEDIRS$/;"	v
COMPONENT_ADD_INCLUDEDIRS	experiments/ESP_Async_WebServer/component.mk	/^COMPONENT_ADD_INCLUDEDIRS := src$/;"	m
COMPONENT_REQUIRES	experiments/ESP_Async_WebServer/CMakeLists.txt	/^set(COMPONENT_REQUIRES$/;"	v
COMPONENT_SRCDIRS	experiments/ESP_Async_WebServer/CMakeLists.txt	/^set(COMPONENT_SRCDIRS$/;"	v
COMPONENT_SRCDIRS	experiments/ESP_Async_WebServer/component.mk	/^COMPONENT_SRCDIRS := src$/;"	m
CONFIG_H	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define CONFIG_H$/;"	d
CONFIG_H	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define CONFIG_H$/;"	d
CONST	experiments/ESP_AsyncTCP/src/SyncClient.h	/^#define CONST$/;"	d
CYC_MSEC	experiments/Servo/src/stm32f4/Servo.cpp	/^#define CYC_MSEC /;"	d	file:
Channel	experiments/Servo/src/avr/Servo.cpp	/^static volatile int8_t Channel[_Nbr_16timers ];             \/\/ counter for the servo being pul/;"	v	typeref:typename:volatile int8_t[]	file:
Channel	experiments/Servo/src/sam/Servo.cpp	/^static volatile int8_t Channel[_Nbr_16timers ];             \/\/ counter for the servo being pul/;"	v	typeref:typename:volatile int8_t[]	file:
ChunkPrint	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    ChunkPrint(uint8_t* destination, size_t from, size_t len)$/;"	f	class:ChunkPrint
ChunkPrint	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^class ChunkPrint : public Print {$/;"	c
Chunked Response	experiments/ESP_Async_WebServer/README.md	/^### Chunked Response$/;"	S	section:ESPAsyncWebServer""Responses
Chunked Response containing templates	experiments/ESP_Async_WebServer/README.md	/^### Chunked Response containing templates$/;"	S	section:ESPAsyncWebServer""Responses
Circuit	experiments/Servo/docs/readme.md	/^## Circuit$/;"	s	chapter:Servo library
Circuit	experiments/Servo/examples/Knob/readme.md	/^## Circuit$/;"	s	chapter:Knob
Circuit	experiments/Servo/examples/Sweep/readme.md	/^## Circuit$/;"	s	chapter:Sweep
Class Instantiation	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Class Instantiation$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Class Instantiation	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Class Instantiation$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Common Variables	experiments/ESP_Async_WebServer/README.md	/^### Common Variables$/;"	S	section:ESPAsyncWebServer""Request Variables
ConstIterator	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  using ConstIterator = headers_t::ConstIterator;$/;"	t	class:DefaultHeaders	typeref:typename:headers_t::ConstIterator
ConstIterator	experiments/ESP_Async_WebServer/src/StringArray.h	/^    typedef const Iterator ConstIterator;$/;"	t	class:LinkedList	typeref:typename:const Iterator
Coords	Hexapod-markwtech/src/coords.py	/^class Coords:$/;"	c
DASH3_OR_RETURN2	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  DASH3_OR_RETURN2,$/;"	e	enum:__anon7471535f0b03	file:
DEBUGF	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^#define DEBUGF(/;"	d
DEBUG_ASYNC_TCP	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^#define DEBUG_ASYNC_TCP(/;"	d
DEBUG_ESP_PRINTF	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define DEBUG_ESP_PRINTF(/;"	d
DEBUG_ESP_SYNC_CLIENT	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^#define DEBUG_ESP_SYNC_CLIENT$/;"	d	file:
DEBUG_GENERIC	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^  #define DEBUG_GENERIC(/;"	d
DEBUG_GENERIC	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define DEBUG_GENERIC(/;"	d
DEBUG_GENERIC_P	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^  #define DEBUG_GENERIC_P(/;"	d
DEBUG_GENERIC_P	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define DEBUG_GENERIC_P(/;"	d
DEBUG_TIME_STAMP_FMT	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define DEBUG_TIME_STAMP_FMT /;"	d
DEFAULT_MAX_SSE_CLIENTS	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^#define DEFAULT_MAX_SSE_CLIENTS /;"	d
DEFAULT_MAX_WS_CLIENTS	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^#define DEFAULT_MAX_WS_CLIENTS /;"	d
DEFAULT_PULSE_WIDTH	experiments/Servo/src/Servo.h	/^#define DEFAULT_PULSE_WIDTH /;"	d
DNS_PORT	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define DNS_PORT /;"	d
DNS_PORT	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define DNS_PORT /;"	d
DYNAMIC_JSON_DOCUMENT_SIZE	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    #define DYNAMIC_JSON_DOCUMENT_SIZE /;"	d
DefaultHeaders	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  DefaultHeaders()$/;"	f	class:DefaultHeaders
DefaultHeaders	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^class DefaultHeaders {$/;"	c
Determine interface inside callbacks	experiments/ESP_Async_WebServer/README.md	/^### Determine interface inside callbacks$/;"	S	section:ESPAsyncWebServer""Using filters
Device Initialization	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Device Initialization$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Device Initialization	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Device Initialization$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Device Reset	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Device Reset$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Device Reset	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^#### Device Reset$/;"	t	subsection:PCA9685-Arduino""Library Setup""Library Initialization
Direct access to web socket message buffer	experiments/ESP_Async_WebServer/README.md	/^### Direct access to web socket message buffer$/;"	S	section:ESPAsyncWebServer""Async WebSocket Plugin
EE_ABORTED	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_ABORTED,       \/\/ Callback or foreground aborted connections$/;"	e	enum:error_events
EE_ACCEPT_CB	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_ACCEPT_CB,$/;"	e	enum:error_events
EE_CONNECTED_CB	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_CONNECTED_CB,$/;"	e	enum:error_events
EE_ERROR_CB	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_ERROR_CB,      \/\/ Stack initiated aborts via error Callbacks.$/;"	e	enum:error_events
EE_MAX	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_MAX$/;"	e	enum:error_events
EE_OK	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_OK = 0,$/;"	e	enum:error_events
EE_RECV_CB	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^  EE_RECV_CB,$/;"	e	enum:error_events
ELBOW_SERVO_ID	Hexapod-markwtech/src/hexapod.py	/^ELBOW_SERVO_ID = 0$/;"	v
EOF	experiments/ESP_AsyncTCP/ssl/gen_server_cert.sh	/^cat > ca_cert.conf << EOF  $/;"	h
EOF	experiments/ESP_AsyncTCP/ssl/gen_server_cert.sh	/^cat > certs.conf << EOF  $/;"	h
ERR_TCP_SSL_INVALID_CLIENTFD	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define ERR_TCP_SSL_INVALID_CLIENTFD /;"	d
ERR_TCP_SSL_INVALID_CLIENTFD_DATA	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define ERR_TCP_SSL_INVALID_CLIENTFD_DATA /;"	d
ERR_TCP_SSL_INVALID_DATA	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define ERR_TCP_SSL_INVALID_DATA /;"	d
ERR_TCP_SSL_INVALID_SSL	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define ERR_TCP_SSL_INVALID_SSL /;"	d
ERR_TCP_SSL_INVALID_TCP	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define ERR_TCP_SSL_INVALID_TCP /;"	d
ESP Editor	experiments/ESP_Async_WebServer/src/edit.htm	/^<title>ESP Editor<\/title>$/;"	j
ESPASYNCTCPBUFFER_H_	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^#define ESPASYNCTCPBUFFER_H_$/;"	d
ESPAsyncTCP	experiments/ESP_AsyncTCP/README.md	/^# ESPAsyncTCP $/;"	c
ESPAsyncWebServer	experiments/ESP_Async_WebServer/README.md	/^# ESPAsyncWebServer $/;"	c
EXPECT_BOUNDARY	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  EXPECT_BOUNDARY,$/;"	e	enum:__anon7471535f0b03	file:
EXPECT_DASH1	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  EXPECT_DASH1,$/;"	e	enum:__anon7471535f0b03	file:
EXPECT_DASH2	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  EXPECT_DASH2,$/;"	e	enum:__anon7471535f0b03	file:
EXPECT_FEED1	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  EXPECT_FEED1,$/;"	e	enum:__anon7471535f0b03	file:
EXPECT_FEED2	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  EXPECT_FEED2,$/;"	e	enum:__anon7471535f0b03	file:
Example	experiments/Servo/docs/api.md	/^#### Example$/;"	t	subsection:Servo library""Methods""`attach()`
Example	experiments/Servo/docs/api.md	/^#### Example$/;"	t	subsection:Servo library""Methods""`write()`
Example	experiments/Servo/docs/api.md	/^#### Example$/;"	t	subsection:Servo library""Methods""`writeMicroseconds()`
Example Usage	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Example Usage$/;"	s	chapter:PCA9685-Arduino
Example Usage	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Example Usage$/;"	s	chapter:PCA9685-Arduino
Examples	Xpider-cute-robot/README.md	/^### Examples$/;"	S	chapter:Kame
Examples	experiments/Servo/docs/readme.md	/^## Examples$/;"	s	chapter:Servo library
ExcludeList	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^} ExcludeList;$/;"	t	typeref:struct:ExcludeListS	file:
ExcludeListS	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^typedef struct ExcludeListS {$/;"	s	file:
FILE Upload handling	experiments/ESP_Async_WebServer/README.md	/^### FILE Upload handling$/;"	S	section:ESPAsyncWebServer""Request Variables
FILE_IS_REAL	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^#define FILE_IS_REAL(/;"	d	file:
FOV	pygame_plot.py	/^FOV = 1000$/;"	v
FOV	pygame_plot2.py	/^FOV = 1000$/;"	v
FPS	pygame_plot.py	/^FPS = 60$/;"	v
FPS	pygame_plot2.py	/^FPS = 60$/;"	v
FREQUENCY_OSCILLATOR	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define FREQUENCY_OSCILLATOR /;"	d
FREQUENCY_OSCILLATOR	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define FREQUENCY_OSCILLATOR /;"	d
FS	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  using FS = fs::FS;$/;"	t	class:AsyncWebServerRequest	typeref:typename:fs::FS
FS	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^   using FS = fs::FS;$/;"	t	class:AsyncStaticWebHandler	typeref:typename:fs::FS
FS	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^  using FS = fs::FS;$/;"	t	class:AsyncFileResponse	typeref:typename:fs::FS
File	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  using File = fs::File;$/;"	t	class:AsyncWebServerRequest	typeref:typename:fs::File
File	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^   using File = fs::File;$/;"	t	class:AsyncStaticWebHandler	typeref:typename:fs::File
File	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^  using File = fs::File;$/;"	t	class:AsyncFileResponse	typeref:typename:fs::File
GCM_FOR_TIMER_1	experiments/Servo/src/samd/ServoTimers.h	/^#define GCM_FOR_TIMER_1 /;"	d
GCM_FOR_TIMER_2	experiments/Servo/src/samd/ServoTimers.h	/^#define GCM_FOR_TIMER_2 /;"	d
GET, POST and FILE parameters	experiments/ESP_Async_WebServer/README.md	/^### GET, POST and FILE parameters$/;"	S	section:ESPAsyncWebServer""Request Variables
GateEngine	Hexapod-markwtech/src/gate_engine.py	/^class GateEngine:$/;"	c
HANDLER_FOR_TIMER1	experiments/Servo/src/sam/Servo.cpp	/^void HANDLER_FOR_TIMER1(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER1	experiments/Servo/src/sam/ServoTimers.h	/^#define HANDLER_FOR_TIMER1 /;"	d
HANDLER_FOR_TIMER1	experiments/Servo/src/samd/Servo.cpp	/^void HANDLER_FOR_TIMER1(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER1	experiments/Servo/src/samd/ServoTimers.h	/^#define HANDLER_FOR_TIMER1 /;"	d
HANDLER_FOR_TIMER2	experiments/Servo/src/sam/Servo.cpp	/^void HANDLER_FOR_TIMER2(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER2	experiments/Servo/src/sam/ServoTimers.h	/^#define HANDLER_FOR_TIMER2 /;"	d
HANDLER_FOR_TIMER2	experiments/Servo/src/samd/Servo.cpp	/^void HANDLER_FOR_TIMER2(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER2	experiments/Servo/src/samd/ServoTimers.h	/^#define HANDLER_FOR_TIMER2 /;"	d
HANDLER_FOR_TIMER3	experiments/Servo/src/sam/Servo.cpp	/^void HANDLER_FOR_TIMER3(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER3	experiments/Servo/src/sam/ServoTimers.h	/^#define HANDLER_FOR_TIMER3 /;"	d
HANDLER_FOR_TIMER4	experiments/Servo/src/sam/Servo.cpp	/^void HANDLER_FOR_TIMER4(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER4	experiments/Servo/src/sam/ServoTimers.h	/^#define HANDLER_FOR_TIMER4 /;"	d
HANDLER_FOR_TIMER5	experiments/Servo/src/sam/Servo.cpp	/^void HANDLER_FOR_TIMER5(void) {$/;"	f	typeref:typename:void
HANDLER_FOR_TIMER5	experiments/Servo/src/sam/ServoTimers.h	/^#define HANDLER_FOR_TIMER5 /;"	d
HEIGHT	pygame_plot.py	/^WIDTH, HEIGHT = 800, 600$/;"	v
HEIGHT	pygame_plot2.py	/^WIDTH, HEIGHT = 800, 600$/;"	v
HTTP_ANY	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_ANY     = 0b01111111,$/;"	e	enum:__anon185fb8380103
HTTP_DELETE	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_DELETE  = 0b00000100,$/;"	e	enum:__anon185fb8380103
HTTP_GET	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_GET     = 0b00000001,$/;"	e	enum:__anon185fb8380103
HTTP_HEAD	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_HEAD    = 0b00100000,$/;"	e	enum:__anon185fb8380103
HTTP_OPTIONS	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_OPTIONS = 0b01000000,$/;"	e	enum:__anon185fb8380103
HTTP_PATCH	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_PATCH   = 0b00010000,$/;"	e	enum:__anon185fb8380103
HTTP_POST	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_POST    = 0b00000010,$/;"	e	enum:__anon185fb8380103
HTTP_PUT	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  HTTP_PUT     = 0b00001000,$/;"	e	enum:__anon185fb8380103
Handlers and how do they work	experiments/ESP_Async_WebServer/README.md	/^### Handlers and how do they work$/;"	S	section:ESPAsyncWebServer""Principles of operation
Hardware Required	experiments/Servo/examples/Knob/readme.md	/^## Hardware Required$/;"	s	chapter:Knob
Hardware Required	experiments/Servo/examples/Sweep/readme.md	/^## Hardware Required$/;"	s	chapter:Sweep
Header Defines	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Header Defines$/;"	S	section:PCA9685-Arduino""Library Setup
Header Defines	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Header Defines$/;"	S	section:PCA9685-Arduino""Library Setup
Headers	experiments/ESP_Async_WebServer/README.md	/^### Headers$/;"	S	section:ESPAsyncWebServer""Request Variables
Hexapod	Hexapod-markwtech/src/hexapod.py	/^class Hexapod:$/;"	c
Hexapod - Markwtech (PhantomX clone)	Hexapod-markwtech/README.md	/^# Hexapod - Markwtech (PhantomX clone)$/;"	c
HexapodLeg	Hexapod-markwtech/src/hexapod.py	/^class HexapodLeg:$/;"	c
Hookup Callouts	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Hookup Callouts$/;"	s	chapter:PCA9685-Arduino
Hookup Callouts	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Hookup Callouts$/;"	s	chapter:PCA9685-Arduino
ID_TC_FOR_TIMER1	experiments/Servo/src/sam/ServoTimers.h	/^#define ID_TC_FOR_TIMER1 /;"	d
ID_TC_FOR_TIMER1	experiments/Servo/src/samd/ServoTimers.h	/^#define ID_TC_FOR_TIMER1 /;"	d
ID_TC_FOR_TIMER2	experiments/Servo/src/sam/ServoTimers.h	/^#define ID_TC_FOR_TIMER2 /;"	d
ID_TC_FOR_TIMER2	experiments/Servo/src/samd/ServoTimers.h	/^#define ID_TC_FOR_TIMER2 /;"	d
ID_TC_FOR_TIMER3	experiments/Servo/src/sam/ServoTimers.h	/^#define ID_TC_FOR_TIMER3 /;"	d
ID_TC_FOR_TIMER4	experiments/Servo/src/sam/ServoTimers.h	/^#define ID_TC_FOR_TIMER4 /;"	d
ID_TC_FOR_TIMER5	experiments/Servo/src/sam/ServoTimers.h	/^#define ID_TC_FOR_TIMER5 /;"	d
INTENCLR_BIT_FOR_TIMER_1	experiments/Servo/src/samd/ServoTimers.h	/^#define INTENCLR_BIT_FOR_TIMER_1 /;"	d
INTENCLR_BIT_FOR_TIMER_2	experiments/Servo/src/samd/ServoTimers.h	/^#define INTENCLR_BIT_FOR_TIMER_2 /;"	d
INTENSET_BIT_FOR_TIMER_1	experiments/Servo/src/samd/ServoTimers.h	/^#define INTENSET_BIT_FOR_TIMER_1 /;"	d
INTENSET_BIT_FOR_TIMER_2	experiments/Servo/src/samd/ServoTimers.h	/^#define INTENSET_BIT_FOR_TIMER_2 /;"	d
INTFLAG_BIT_FOR_TIMER_1	experiments/Servo/src/samd/ServoTimers.h	/^#define INTFLAG_BIT_FOR_TIMER_1 /;"	d
INVALID_SERVO	experiments/Servo/src/Servo.h	/^#define INVALID_SERVO /;"	d
IRQn_FOR_TIMER1	experiments/Servo/src/sam/ServoTimers.h	/^#define IRQn_FOR_TIMER1 /;"	d
IRQn_FOR_TIMER1	experiments/Servo/src/samd/ServoTimers.h	/^#define IRQn_FOR_TIMER1 /;"	d
IRQn_FOR_TIMER2	experiments/Servo/src/sam/ServoTimers.h	/^#define IRQn_FOR_TIMER2 /;"	d
IRQn_FOR_TIMER2	experiments/Servo/src/samd/ServoTimers.h	/^#define IRQn_FOR_TIMER2 /;"	d
IRQn_FOR_TIMER3	experiments/Servo/src/sam/ServoTimers.h	/^#define IRQn_FOR_TIMER3 /;"	d
IRQn_FOR_TIMER4	experiments/Servo/src/sam/ServoTimers.h	/^#define IRQn_FOR_TIMER4 /;"	d
IRQn_FOR_TIMER5	experiments/Servo/src/sam/ServoTimers.h	/^#define IRQn_FOR_TIMER5 /;"	d
ISR	experiments/Servo/src/megaavr/Servo.cpp	/^ISR(TCB0_INT_vect)$/;"	f
Important things to remember	experiments/ESP_Async_WebServer/README.md	/^## Important things to remember$/;"	s	chapter:ESPAsyncWebServer
Installation	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Installation$/;"	S	section:PCA9685-Arduino""Library Setup
Installation	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Installation$/;"	S	section:PCA9685-Arduino""Library Setup
Installation	experiments/ESP_Async_WebServer/README.md	/^## Installation$/;"	s	chapter:ESPAsyncWebServer
Instance	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  static DefaultHeaders &Instance() {$/;"	f	class:DefaultHeaders	typeref:typename:DefaultHeaders &
ItemType	experiments/ESP_Async_WebServer/src/StringArray.h	/^    typedef Item<T> ItemType;$/;"	t	class:LinkedList	typeref:typename:Item<T>
Iterator	experiments/ESP_Async_WebServer/src/StringArray.h	/^      Iterator(ItemType* current = nullptr) : _node(current) {}$/;"	f	class:LinkedList::Iterator
Iterator	experiments/ESP_Async_WebServer/src/StringArray.h	/^      Iterator(const Iterator& i) : _node(i._node) {}$/;"	f	class:LinkedList::Iterator
Iterator	experiments/ESP_Async_WebServer/src/StringArray.h	/^    class Iterator {$/;"	c	class:LinkedList
JSON body handling with ArduinoJson	experiments/ESP_Async_WebServer/README.md	/^### JSON body handling with ArduinoJson$/;"	S	section:ESPAsyncWebServer""Request Variables
JSON_MIMETYPE	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^constexpr const char* JSON_MIMETYPE = "application\/json";$/;"	v	typeref:typename:const char *
Kame	Xpider-cute-robot/README.md	/^# Kame$/;"	c
Kame quadpod	Kame-Quadpod/README.md	/^# Kame quadpod$/;"	c
Kinematics	Hexapod-markwtech/src/kinematics.py	/^class Kinematics:$/;"	c
Knob	experiments/Servo/examples/Knob/readme.md	/^# Knob$/;"	c
LIBRARIES_ESPASYNCTCP_SRC_ASYNC_CONFIG_H_	experiments/ESP_AsyncTCP/src/async_config.h	/^#define LIBRARIES_ESPASYNCTCP_SRC_ASYNC_CONFIG_H_$/;"	d
LWIPR_COMPAT_H	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define LWIPR_COMPAT_H$/;"	d
Libraries and projects that use AsyncTCP	experiments/ESP_AsyncTCP/README.md	/^## Libraries and projects that use AsyncTCP$/;"	s	chapter:ESPAsyncTCP
Libraries and projects that use AsyncWebServer	experiments/ESP_Async_WebServer/README.md	/^## Libraries and projects that use AsyncWebServer$/;"	s	chapter:ESPAsyncWebServer
Library Initialization	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Library Initialization$/;"	S	section:PCA9685-Arduino""Library Setup
Library Initialization	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Library Initialization$/;"	S	section:PCA9685-Arduino""Library Setup
Library Setup	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Library Setup$/;"	s	chapter:PCA9685-Arduino
Library Setup	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Library Setup$/;"	s	chapter:PCA9685-Arduino
Limiting the number of web socket clients	experiments/ESP_Async_WebServer/README.md	/^### Limiting the number of web socket clients$/;"	S	section:ESPAsyncWebServer""Async WebSocket Plugin
LinkedList	experiments/ESP_Async_WebServer/src/StringArray.h	/^    LinkedList(OnRemove onRemove) : _root(nullptr), _onRemove(onRemove) {}$/;"	f	class:LinkedList
LinkedList	experiments/ESP_Async_WebServer/src/StringArray.h	/^class LinkedList {$/;"	c
LinkedListNode	experiments/ESP_Async_WebServer/src/StringArray.h	/^    LinkedListNode(const T val): _value(val), next(nullptr) {}$/;"	f	class:LinkedListNode
LinkedListNode	experiments/ESP_Async_WebServer/src/StringArray.h	/^class LinkedListNode {$/;"	c
MAX_ANGLE	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define MAX_ANGLE /;"	d
MAX_OVERFLOW	experiments/Servo/src/stm32f4/Servo.cpp	/^#define MAX_OVERFLOW /;"	d	file:
MAX_PRINTF_LEN	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^#define MAX_PRINTF_LEN /;"	d	file:
MAX_PULSE	experiments/Servo/src/nrf52/ServoTimers.h	/^#define MAX_PULSE /;"	d
MAX_PULSE_WIDTH	experiments/Servo/src/Servo.h	/^#define MAX_PULSE_WIDTH /;"	d
MAX_PULSE_WIDTH	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define MAX_PULSE_WIDTH /;"	d
MAX_SERVOS	experiments/Servo/src/Servo.h	/^#define MAX_SERVOS /;"	d
MIN_ANGLE	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define MIN_ANGLE /;"	d
MIN_PULSE	experiments/Servo/src/nrf52/ServoTimers.h	/^#define MIN_PULSE /;"	d
MIN_PULSE_WIDTH	experiments/Servo/src/Servo.h	/^#define MIN_PULSE_WIDTH /;"	d
MIN_PULSE_WIDTH	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define MIN_PULSE_WIDTH /;"	d
MODE1_AI	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_AI /;"	d
MODE1_AI	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_AI /;"	d
MODE1_ALLCAL	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_ALLCAL /;"	d
MODE1_ALLCAL	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_ALLCAL /;"	d
MODE1_EXTCLK	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_EXTCLK /;"	d
MODE1_EXTCLK	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_EXTCLK /;"	d
MODE1_RESTART	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_RESTART /;"	d
MODE1_RESTART	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_RESTART /;"	d
MODE1_SLEEP	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SLEEP /;"	d
MODE1_SLEEP	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SLEEP /;"	d
MODE1_SUB1	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB1 /;"	d
MODE1_SUB1	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB1 /;"	d
MODE1_SUB2	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB2 /;"	d
MODE1_SUB2	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB2 /;"	d
MODE1_SUB3	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB3 /;"	d
MODE1_SUB3	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE1_SUB3 /;"	d
MODE2_INVRT	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_INVRT /;"	d
MODE2_INVRT	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_INVRT /;"	d
MODE2_OCH	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OCH /;"	d
MODE2_OCH	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OCH /;"	d
MODE2_OUTDRV	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTDRV /;"	d
MODE2_OUTDRV	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTDRV /;"	d
MODE2_OUTNE_0	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTNE_0 /;"	d
MODE2_OUTNE_0	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTNE_0 /;"	d
MODE2_OUTNE_1	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTNE_1 /;"	d
MODE2_OUTNE_1	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define MODE2_OUTNE_1 /;"	d
Methods	experiments/Servo/docs/api.md	/^## Methods$/;"	s	chapter:Servo library
Methods for controlling websocket connections	experiments/ESP_Async_WebServer/README.md	/^### Methods for controlling websocket connections$/;"	S	section:ESPAsyncWebServer""Setting up the server
Methods for sending data to a socket client	experiments/ESP_Async_WebServer/README.md	/^### Methods for sending data to a socket client$/;"	S	section:ESPAsyncWebServer""Async WebSocket Plugin
Module Info	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Module Info$/;"	s	chapter:PCA9685-Arduino
Module Info	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^## Module Info$/;"	s	chapter:PCA9685-Arduino
Motivation videos, inspiration	Hexapod-markwtech/README.md	/^## Motivation videos, inspiration$/;"	s	chapter:Hexapod - Markwtech (PhantomX clone)
Multi-Device Proxy Example	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Multi-Device Proxy Example$/;"	S	section:PCA9685-Arduino""Example Usage
Multi-Device Proxy Example	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Multi-Device Proxy Example$/;"	S	section:PCA9685-Arduino""Example Usage
NOT_ATTACHED	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define NOT_ATTACHED /;"	d
Napajeni	Hexapod-markwtech/README.md	/^### Napajeni$/;"	S	section:Hexapod - Markwtech (PhantomX clone)""Sestaveni
ON_AP_FILTER	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^bool ON_AP_FILTER(AsyncWebServerRequest *request) {$/;"	f	typeref:typename:bool
ON_STA_FILTER	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^bool ON_STA_FILTER(AsyncWebServerRequest *request) {$/;"	f	typeref:typename:bool
OnRemove	experiments/ESP_Async_WebServer/src/StringArray.h	/^    typedef std::function<void(const T&)> OnRemove;$/;"	t	class:LinkedList
PARSE_ERROR	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  PARSE_ERROR$/;"	e	enum:__anon7471535f0b03	file:
PARSE_HEADERS	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  PARSE_HEADERS,$/;"	e	enum:__anon7471535f0b03	file:
PARSE_REQ_BODY	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	e	enum:__anon7471535f0103	file:
PARSE_REQ_END	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	e	enum:__anon7471535f0103	file:
PARSE_REQ_FAIL	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	e	enum:__anon7471535f0103	file:
PARSE_REQ_HEADERS	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	e	enum:__anon7471535f0103	file:
PARSE_REQ_START	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	e	enum:__anon7471535f0103	file:
PARSING_FINISHED	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  PARSING_FINISHED,$/;"	e	enum:__anon7471535f0b03	file:
PASSWORD	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define PASSWORD /;"	d
PASSWORD	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define PASSWORD /;"	d
PCA9685	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(TwoWire& i2cWire, uint32_t i2cSpeed, byte i2cAddress)$/;"	f	class:PCA9685
PCA9685	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(byte i2cAddress)$/;"	f	class:PCA9685
PCA9685	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(byte i2cAddress, TwoWire& i2cWire, uint32_t i2cSpeed)$/;"	f	class:PCA9685
PCA9685	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^class PCA9685 {$/;"	c
PCA9685	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(TwoWire& i2cWire, uint32_t i2cSpeed, byte i2cAddress)$/;"	f	class:PCA9685
PCA9685	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(byte i2cAddress)$/;"	f	class:PCA9685
PCA9685	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685::PCA9685(byte i2cAddress, TwoWire& i2cWire, uint32_t i2cSpeed)$/;"	f	class:PCA9685
PCA9685	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^class PCA9685 {$/;"	c
PCA9685-Arduino	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^# PCA9685-Arduino$/;"	c
PCA9685-Arduino	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^# PCA9685-Arduino$/;"	c
PCA9685_ALLCALLADR	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLCALLADR /;"	d
PCA9685_ALLCALLADR	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLCALLADR /;"	d
PCA9685_ALLCALL_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLCALL_REG /;"	d	file:
PCA9685_ALLCALL_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLCALL_REG /;"	d	file:
PCA9685_ALLLED_CHANNEL	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLLED_CHANNEL /;"	d	file:
PCA9685_ALLLED_CHANNEL	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLLED_CHANNEL /;"	d	file:
PCA9685_ALLLED_OFF_H	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_OFF_H /;"	d
PCA9685_ALLLED_OFF_H	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_OFF_H /;"	d
PCA9685_ALLLED_OFF_L	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_OFF_L /;"	d
PCA9685_ALLLED_OFF_L	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_OFF_L /;"	d
PCA9685_ALLLED_ON_H	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_ON_H /;"	d
PCA9685_ALLLED_ON_H	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_ON_H /;"	d
PCA9685_ALLLED_ON_L	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_ON_L /;"	d
PCA9685_ALLLED_ON_L	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_ALLLED_ON_L /;"	d
PCA9685_ALLLED_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLLED_REG /;"	d	file:
PCA9685_ALLLED_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_ALLLED_REG /;"	d	file:
PCA9685_CHANNEL_COUNT	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_CHANNEL_COUNT /;"	d	file:
PCA9685_CHANNEL_COUNT	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_CHANNEL_COUNT /;"	d	file:
PCA9685_ChannelUpdateMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_ChannelUpdateMode {$/;"	g
PCA9685_ChannelUpdateMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_ChannelUpdateMode {$/;"	g
PCA9685_ChannelUpdateMode_AfterAck	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_AfterAck,         \/\/ Channel updates commit after individual cha/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_AfterAck	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_AfterAck,         \/\/ Channel updates commit after individual cha/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_AfterStop	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_AfterStop,        \/\/ Channel updates commit after full-transmiss/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_AfterStop	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_AfterStop,        \/\/ Channel updates commit after full-transmiss/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_Count	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_Count,            \/\/ Internal use only$/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_Count	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_Count,            \/\/ Internal use only$/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_Undefined	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_Undefined = -1    \/\/ Internal use only$/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_ChannelUpdateMode_Undefined	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode_Undefined = -1    \/\/ Internal use only$/;"	e	enum:PCA9685_ChannelUpdateMode
PCA9685_H	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_H$/;"	d
PCA9685_H	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_H$/;"	d
PCA9685_I2C_ADDRESS	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_I2C_ADDRESS /;"	d
PCA9685_I2C_ADDRESS	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_I2C_ADDRESS /;"	d
PCA9685_I2C_BASE_MODULE_ADDRESS	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_MODULE_ADDRESS /;"	d	file:
PCA9685_I2C_BASE_MODULE_ADDRESS	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_MODULE_ADDRESS /;"	d	file:
PCA9685_I2C_BASE_MODULE_ADRMASK	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_MODULE_ADRMASK /;"	d	file:
PCA9685_I2C_BASE_MODULE_ADRMASK	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_MODULE_ADRMASK /;"	d	file:
PCA9685_I2C_BASE_PROXY_ADDRESS	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_PROXY_ADDRESS /;"	d	file:
PCA9685_I2C_BASE_PROXY_ADDRESS	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_PROXY_ADDRESS /;"	d	file:
PCA9685_I2C_BASE_PROXY_ADRMASK	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_PROXY_ADRMASK /;"	d	file:
PCA9685_I2C_BASE_PROXY_ADRMASK	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_I2C_BASE_PROXY_ADRMASK /;"	d	file:
PCA9685_I2C_BUFFER_LENGTH	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_BUFFER_LENGTH /;"	d
PCA9685_I2C_BUFFER_LENGTH	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_BUFFER_LENGTH /;"	d
PCA9685_I2C_DEF_ALLCALL_PROXYADR	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_ALLCALL_PROXYADR /;"	d
PCA9685_I2C_DEF_ALLCALL_PROXYADR	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_ALLCALL_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB1_PROXYADR	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB1_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB1_PROXYADR	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB1_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB2_PROXYADR	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB2_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB2_PROXYADR	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB2_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB3_PROXYADR	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB3_PROXYADR /;"	d
PCA9685_I2C_DEF_SUB3_PROXYADR	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_I2C_DEF_SUB3_PROXYADR /;"	d
PCA9685_LED0_OFF_H	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_OFF_H /;"	d
PCA9685_LED0_OFF_H	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_OFF_H /;"	d
PCA9685_LED0_OFF_L	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_OFF_L /;"	d
PCA9685_LED0_OFF_L	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_OFF_L /;"	d
PCA9685_LED0_ON_H	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_ON_H /;"	d
PCA9685_LED0_ON_H	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_ON_H /;"	d
PCA9685_LED0_ON_L	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_ON_L /;"	d
PCA9685_LED0_ON_L	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_LED0_ON_L /;"	d
PCA9685_LED0_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_LED0_REG /;"	d	file:
PCA9685_LED0_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_LED0_REG /;"	d	file:
PCA9685_MAX_CHANNEL	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MAX_CHANNEL /;"	d	file:
PCA9685_MAX_CHANNEL	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MAX_CHANNEL /;"	d	file:
PCA9685_MIN_CHANNEL	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MIN_CHANNEL /;"	d	file:
PCA9685_MIN_CHANNEL	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MIN_CHANNEL /;"	d	file:
PCA9685_MODE1	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_MODE1 /;"	d
PCA9685_MODE1	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_MODE1 /;"	d
PCA9685_MODE1_ALLCALL	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_ALLCALL /;"	d	file:
PCA9685_MODE1_ALLCALL	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_ALLCALL /;"	d	file:
PCA9685_MODE1_AUTOINC	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_AUTOINC /;"	d	file:
PCA9685_MODE1_AUTOINC	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_AUTOINC /;"	d	file:
PCA9685_MODE1_EXTCLK	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_EXTCLK /;"	d	file:
PCA9685_MODE1_EXTCLK	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_EXTCLK /;"	d	file:
PCA9685_MODE1_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_REG /;"	d	file:
PCA9685_MODE1_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_REG /;"	d	file:
PCA9685_MODE1_RESTART	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_RESTART /;"	d	file:
PCA9685_MODE1_RESTART	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_RESTART /;"	d	file:
PCA9685_MODE1_SLEEP	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SLEEP /;"	d	file:
PCA9685_MODE1_SLEEP	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SLEEP /;"	d	file:
PCA9685_MODE1_SUBADR1	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR1 /;"	d	file:
PCA9685_MODE1_SUBADR1	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR1 /;"	d	file:
PCA9685_MODE1_SUBADR2	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR2 /;"	d	file:
PCA9685_MODE1_SUBADR2	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR2 /;"	d	file:
PCA9685_MODE1_SUBADR3	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR3 /;"	d	file:
PCA9685_MODE1_SUBADR3	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE1_SUBADR3 /;"	d	file:
PCA9685_MODE2	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_MODE2 /;"	d
PCA9685_MODE2	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_MODE2 /;"	d
PCA9685_MODE2_INVRT	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_INVRT /;"	d	file:
PCA9685_MODE2_INVRT	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_INVRT /;"	d	file:
PCA9685_MODE2_OCH_ONACK	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OCH_ONACK /;"	d	file:
PCA9685_MODE2_OCH_ONACK	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OCH_ONACK /;"	d	file:
PCA9685_MODE2_OUTDRV_TPOLE	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTDRV_TPOLE /;"	d	file:
PCA9685_MODE2_OUTDRV_TPOLE	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTDRV_TPOLE /;"	d	file:
PCA9685_MODE2_OUTNE_HIGHZ	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTNE_HIGHZ /;"	d	file:
PCA9685_MODE2_OUTNE_HIGHZ	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTNE_HIGHZ /;"	d	file:
PCA9685_MODE2_OUTNE_TPHIGH	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTNE_TPHIGH /;"	d	file:
PCA9685_MODE2_OUTNE_TPHIGH	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_OUTNE_TPHIGH /;"	d	file:
PCA9685_MODE2_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_REG /;"	d	file:
PCA9685_MODE2_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_MODE2_REG /;"	d	file:
PCA9685_OutputDisabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputDisabledMode {$/;"	g
PCA9685_OutputDisabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputDisabledMode {$/;"	g
PCA9685_OutputDisabledMode_Count	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Count,           \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Count	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Count,           \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Floating	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Floating,        \/\/ When OE is disabled\/HIGH, channel outputs /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Floating	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Floating,        \/\/ When OE is disabled\/HIGH, channel outputs /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_High	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_High,            \/\/ When OE is disabled\/HIGH, channels output /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_High	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_High,            \/\/ When OE is disabled\/HIGH, channels output /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Low	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Low,             \/\/ When OE is disabled\/HIGH, channels output /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Low	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Low,             \/\/ When OE is disabled\/HIGH, channels output /;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Undefined	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Undefined = -1   \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDisabledMode_Undefined	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode_Undefined = -1   \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDisabledMode
PCA9685_OutputDriverMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputDriverMode {$/;"	g
PCA9685_OutputDriverMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputDriverMode {$/;"	g
PCA9685_OutputDriverMode_Count	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_Count,             \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_Count	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_Count,             \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_OpenDrain	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_OpenDrain,         \/\/ Module outputs in an open-drain (aka direct/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_OpenDrain	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_OpenDrain,         \/\/ Module outputs in an open-drain (aka direct/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_TotemPole	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_TotemPole,         \/\/ Module outputs in a totem-pole (aka push-pu/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_TotemPole	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_TotemPole,         \/\/ Module outputs in a totem-pole (aka push-pu/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_Undefined	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_Undefined = -1     \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputDriverMode_Undefined	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode_Undefined = -1     \/\/ Internal use only$/;"	e	enum:PCA9685_OutputDriverMode
PCA9685_OutputEnabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputEnabledMode {$/;"	g
PCA9685_OutputEnabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_OutputEnabledMode {$/;"	g
PCA9685_OutputEnabledMode_Count	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Count,            \/\/ Internal use only$/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Count	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Count,            \/\/ Internal use only$/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Inverted	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Inverted,         \/\/ When OE is enabled\/LOW, channels output an/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Inverted	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Inverted,         \/\/ When OE is enabled\/LOW, channels output an/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Normal	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Normal,           \/\/ When OE is enabled\/LOW, channels output a /;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Normal	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Normal,           \/\/ When OE is enabled\/LOW, channels output a /;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Undefined	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Undefined = -1    \/\/ Internal use only$/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_OutputEnabledMode_Undefined	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode_Undefined = -1    \/\/ Internal use only$/;"	e	enum:PCA9685_OutputEnabledMode
PCA9685_PRESCALE	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE /;"	d
PCA9685_PRESCALE	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE /;"	d
PCA9685_PRESCALE_MAX	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE_MAX /;"	d
PCA9685_PRESCALE_MAX	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE_MAX /;"	d
PCA9685_PRESCALE_MIN	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE_MIN /;"	d
PCA9685_PRESCALE_MIN	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_PRESCALE_MIN /;"	d
PCA9685_PRESCALE_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PRESCALE_REG /;"	d	file:
PCA9685_PRESCALE_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PRESCALE_REG /;"	d	file:
PCA9685_PWM_FULL	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PWM_FULL /;"	d	file:
PCA9685_PWM_FULL	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PWM_FULL /;"	d	file:
PCA9685_PWM_MASK	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PWM_MASK /;"	d	file:
PCA9685_PWM_MASK	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_PWM_MASK /;"	d	file:
PCA9685_PhaseBalancer	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_PhaseBalancer {$/;"	g
PCA9685_PhaseBalancer	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^enum PCA9685_PhaseBalancer {$/;"	g
PCA9685_PhaseBalancer_Count	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Count,                \/\/ Internal use only$/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_Count	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Count,                \/\/ Internal use only$/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_Linear	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Linear,               \/\/ Uses linear software-based phase balancing,/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_Linear	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Linear,               \/\/ Uses linear software-based phase balancing,/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_None	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_None,                 \/\/ Disables software-based phase balancing, re/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_None	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_None,                 \/\/ Disables software-based phase balancing, re/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_Undefined	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Undefined = -1        \/\/ Internal use only$/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_PhaseBalancer_Undefined	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer_Undefined = -1        \/\/ Internal use only$/;"	e	enum:PCA9685_PhaseBalancer
PCA9685_SUBADR1	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR1 /;"	d
PCA9685_SUBADR1	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR1 /;"	d
PCA9685_SUBADR1_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR1_REG /;"	d	file:
PCA9685_SUBADR1_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR1_REG /;"	d	file:
PCA9685_SUBADR2	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR2 /;"	d
PCA9685_SUBADR2	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR2 /;"	d
PCA9685_SUBADR2_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR2_REG /;"	d	file:
PCA9685_SUBADR2_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR2_REG /;"	d	file:
PCA9685_SUBADR3	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR3 /;"	d
PCA9685_SUBADR3	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_SUBADR3 /;"	d
PCA9685_SUBADR3_REG	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR3_REG /;"	d	file:
PCA9685_SUBADR3_REG	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SUBADR3_REG /;"	d	file:
PCA9685_SW_RESET	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SW_RESET /;"	d	file:
PCA9685_SW_RESET	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^#define PCA9685_SW_RESET /;"	d	file:
PCA9685_ServoEval	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::PCA9685_ServoEval(uint16_t minPWMAmount, uint16_t maxPWMAmount)$/;"	f	class:PCA9685_ServoEval
PCA9685_ServoEval	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::PCA9685_ServoEval(uint16_t minPWMAmount, uint16_t midPWMAmount, uint16_t maxP/;"	f	class:PCA9685_ServoEval
PCA9685_ServoEval	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^class PCA9685_ServoEval {$/;"	c
PCA9685_ServoEval	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::PCA9685_ServoEval(uint16_t minPWMAmount, uint16_t maxPWMAmount)$/;"	f	class:PCA9685_ServoEval
PCA9685_ServoEval	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::PCA9685_ServoEval(uint16_t minPWMAmount, uint16_t midPWMAmount, uint16_t maxP/;"	f	class:PCA9685_ServoEval
PCA9685_ServoEval	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^class PCA9685_ServoEval {$/;"	c
PCA9685_TESTMODE	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_TESTMODE /;"	d
PCA9685_TESTMODE	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define PCA9685_TESTMODE /;"	d
PCA9685_USE_SOFTWARE_I2C	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_USE_SOFTWARE_I2C$/;"	d
PCA9685_USE_SOFTWARE_I2C	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^#define PCA9685_USE_SOFTWARE_I2C$/;"	d
Param Rewrite With Matching	experiments/ESP_Async_WebServer/README.md	/^## Param Rewrite With Matching$/;"	s	chapter:ESPAsyncWebServer
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`attach()`
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`attached()`
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`detach()`
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`read()`
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`write()`
Parameters	experiments/Servo/docs/api.md	/^#### Parameters$/;"	t	subsection:Servo library""Methods""`writeMicroseconds()`
Parts list	Hexapod-markwtech/README.md	/^## Parts list$/;"	s	chapter:Hexapod - Markwtech (PhantomX clone)
Path variable	experiments/ESP_Async_WebServer/README.md	/^### Path variable$/;"	S	section:ESPAsyncWebServer""Setting up the server
PiCam Live Streaming	Hexapod-markwtech/src/templates/index.html	/^    <h1>PiCam Live Streaming<\/h1>$/;"	h
PiCam Server	Hexapod-markwtech/src/templates/index.html	/^    <title>PiCam Server<\/title>$/;"	j
Pin	experiments/Servo/src/Servo.h	/^  ServoPin_t Pin;$/;"	m	struct:__anonc3bc0c620208	typeref:typename:ServoPin_t
Plotter	Hexapod-markwtech/src/plot.py	/^class Plotter:$/;"	c
Predicate	experiments/ESP_Async_WebServer/src/StringArray.h	/^    typedef std::function<bool(const T&)> Predicate;$/;"	t	class:LinkedList
PrettyAsyncJsonResponse	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^	PrettyAsyncJsonResponse (bool isArray=false) : AsyncJsonResponse{isArray} {}$/;"	f	class:PrettyAsyncJsonResponse
PrettyAsyncJsonResponse	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^class PrettyAsyncJsonResponse: public AsyncJsonResponse {	$/;"	c
Principles of operation	experiments/ESP_Async_WebServer/README.md	/^## Principles of operation$/;"	s	chapter:ESPAsyncWebServer
Print to response	experiments/ESP_Async_WebServer/README.md	/^### Print to response$/;"	S	section:ESPAsyncWebServer""Responses
Project pages and resources	Xpider-cute-robot/README.md	/^### Project pages and resources$/;"	S	chapter:Kame
Projects	README.md	/^### Projects$/;"	S	chapter:Raspberry-Robotics
RCT_DEFAULT	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
RCT_EVENT	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
RCT_HTTP	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
RCT_MAX	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
RCT_NOT_USED	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
RCT_WS	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	e	enum:__anon185fb8380203
REFRESH_INTERVAL	experiments/Servo/src/Servo.h	/^#define REFRESH_INTERVAL /;"	d
REFRESH_INTERVAL	experiments/Servo/src/megaavr/Servo.cpp	/^#define REFRESH_INTERVAL /;"	d	file:
RESPONSE_CONTENT	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
RESPONSE_END	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
RESPONSE_FAILED	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
RESPONSE_HEADERS	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
RESPONSE_SETUP	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
RESPONSE_TRY_AGAIN	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^#define RESPONSE_TRY_AGAIN /;"	d
RESPONSE_WAIT_ACK	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  RESPONSE_SETUP, RESPONSE_HEADERS, RESPONSE_CONTENT, RESPONSE_WAIT_ACK, RESPONSE_END, RESPONSE_/;"	e	enum:__anon185fb8380303
Raspberry-Robotics	README.md	/^# Raspberry-Robotics$/;"	c
Redirect to another URL	experiments/ESP_Async_WebServer/README.md	/^### Redirect to another URL$/;"	S	section:ESPAsyncWebServer""Responses
Remove handlers and rewrites	experiments/ESP_Async_WebServer/README.md	/^## Remove handlers and rewrites$/;"	s	chapter:ESPAsyncWebServer
Request Life Cycle	experiments/ESP_Async_WebServer/README.md	/^### Request Life Cycle$/;"	S	section:ESPAsyncWebServer""Principles of operation
Request Variables	experiments/ESP_Async_WebServer/README.md	/^## Request Variables$/;"	s	chapter:ESPAsyncWebServer
RequestedConnectionType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	t	typeref:enum:__anon185fb8380203
Resources, tutorial, parts	Hexapod-markwtech/README.md	/^## Resources, tutorial, parts$/;"	s	chapter:Hexapod - Markwtech (PhantomX clone)
Respond with content coming from a File	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a File$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a File and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a File and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a File containing templates	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a File containing templates$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a Stream	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a Stream$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a Stream and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a Stream and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a Stream containing templates	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a Stream containing templates$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content coming from a Stream containing templates and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Respond with content coming from a Stream containing templates and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content using a callback	experiments/ESP_Async_WebServer/README.md	/^### Respond with content using a callback$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content using a callback and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Respond with content using a callback and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content using a callback containing templates	experiments/ESP_Async_WebServer/README.md	/^### Respond with content using a callback containing templates$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content using a callback containing templates and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Respond with content using a callback containing templates and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Respond with content using a callback without content length to HTTP/1.0 clients	experiments/ESP_Async_WebServer/README.md	/^### Respond with content using a callback without content length to HTTP\/1.0 clients$/;"	S	section:ESPAsyncWebServer""Bad Responses
Responses	experiments/ESP_Async_WebServer/README.md	/^## Responses$/;"	s	chapter:ESPAsyncWebServer
Responses and how do they work	experiments/ESP_Async_WebServer/README.md	/^### Responses and how do they work$/;"	S	section:ESPAsyncWebServer""Principles of operation
Returns	experiments/Servo/docs/api.md	/^#### Returns$/;"	t	subsection:Servo library""Methods""`attached()`
Returns	experiments/Servo/docs/api.md	/^#### Returns$/;"	t	subsection:Servo library""Methods""`read()`
Rewrite to different index on AP	experiments/ESP_Async_WebServer/README.md	/^### Rewrite to different index on AP$/;"	S	section:ESPAsyncWebServer""Using filters
Rewrites and how do they work	experiments/ESP_Async_WebServer/README.md	/^### Rewrites and how do they work$/;"	S	section:ESPAsyncWebServer""Principles of operation
SERVER_HOST_NAME	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define SERVER_HOST_NAME /;"	d
SERVER_HOST_NAME	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define SERVER_HOST_NAME /;"	d
SERVO	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO(_timer,_channel)  (servos[SERVO_/;"	d	file:
SERVO	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO(_timer,_channel)  (servos[SERVO_/;"	d	file:
SERVO	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO(_timer,_channel)  (servos[SERVO_/;"	d	file:
SERVO	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO(_timer,_channel)  (servos[SERVO_/;"	d	file:
SERVOS_PER_TIMER	experiments/Servo/src/Servo.h	/^#define SERVOS_PER_TIMER /;"	d
SERVOS_PER_TIMER	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define SERVOS_PER_TIMER /;"	d
SERVO_INDEX	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO_INDEX(/;"	d	file:
SERVO_INDEX	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO_INDEX(/;"	d	file:
SERVO_INDEX	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO_INDEX(/;"	d	file:
SERVO_INDEX	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO_INDEX(/;"	d	file:
SERVO_INDEX_TO_CHANNEL	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO_INDEX_TO_CHANNEL(/;"	d	file:
SERVO_INDEX_TO_CHANNEL	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO_INDEX_TO_CHANNEL(/;"	d	file:
SERVO_INDEX_TO_CHANNEL	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO_INDEX_TO_CHANNEL(/;"	d	file:
SERVO_INDEX_TO_CHANNEL	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO_INDEX_TO_CHANNEL(/;"	d	file:
SERVO_INDEX_TO_TIMER	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO_INDEX_TO_TIMER(/;"	d	file:
SERVO_INDEX_TO_TIMER	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO_INDEX_TO_TIMER(/;"	d	file:
SERVO_INDEX_TO_TIMER	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO_INDEX_TO_TIMER(/;"	d	file:
SERVO_INDEX_TO_TIMER	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO_INDEX_TO_TIMER(/;"	d	file:
SERVO_INVALID_INDEX	experiments/Servo/src/renesas/Servo.cpp	/^#define SERVO_INVALID_INDEX /;"	d	file:
SERVO_IO_PORT_ADDR	experiments/Servo/src/renesas/Servo.cpp	/^#define SERVO_IO_PORT_ADDR(/;"	d	file:
SERVO_MAX	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO_MAX(/;"	d	file:
SERVO_MAX	experiments/Servo/src/mbed/Servo.cpp	/^#define SERVO_MAX(/;"	d	file:
SERVO_MAX	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO_MAX(/;"	d	file:
SERVO_MAX	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO_MAX(/;"	d	file:
SERVO_MAX	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO_MAX(/;"	d	file:
SERVO_MAX_SERVOS	experiments/Servo/src/renesas/Servo.cpp	/^#define SERVO_MAX_SERVOS /;"	d	file:
SERVO_MIN	experiments/Servo/src/avr/Servo.cpp	/^#define SERVO_MIN(/;"	d	file:
SERVO_MIN	experiments/Servo/src/mbed/Servo.cpp	/^#define SERVO_MIN(/;"	d	file:
SERVO_MIN	experiments/Servo/src/megaavr/Servo.cpp	/^#define SERVO_MIN(/;"	d	file:
SERVO_MIN	experiments/Servo/src/sam/Servo.cpp	/^#define SERVO_MIN(/;"	d	file:
SERVO_MIN	experiments/Servo/src/samd/Servo.cpp	/^#define SERVO_MIN(/;"	d	file:
SERVO_OVERFLOW	experiments/Servo/src/stm32f4/Servo.cpp	/^#define SERVO_OVERFLOW /;"	d	file:
SERVO_PRESCALER	experiments/Servo/src/stm32f4/Servo.cpp	/^#define SERVO_PRESCALER /;"	d	file:
SERVO_TIMER_TICK_US	experiments/Servo/src/renesas/Servo.cpp	/^#define SERVO_TIMER_TICK_US /;"	d	file:
SERVO_US_PER_CYCLE	experiments/Servo/src/renesas/Servo.cpp	/^#define SERVO_US_PER_CYCLE /;"	d	file:
SHOULDER_SERVO_ID	Hexapod-markwtech/src/hexapod.py	/^SHOULDER_SERVO_ID = 1$/;"	v
SIGNAL	experiments/Servo/src/avr/Servo.cpp	/^SIGNAL (TIMER1_COMPA_vect)$/;"	f
SIGNAL	experiments/Servo/src/avr/Servo.cpp	/^SIGNAL (TIMER3_COMPA_vect)$/;"	f
SIGNAL	experiments/Servo/src/avr/Servo.cpp	/^SIGNAL (TIMER4_COMPA_vect)$/;"	f
SIGNAL	experiments/Servo/src/avr/Servo.cpp	/^SIGNAL (TIMER5_COMPA_vect)$/;"	f
SPIClass	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t SPIClass;$/;"	t	typeref:typename:uint8_t
SPIClass	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef uint8_t SPIClass;$/;"	t	typeref:typename:uint8_t
SPIFFSEditor	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^SPIFFSEditor::SPIFFSEditor(const fs::FS& fs, const String& username, const String& password)$/;"	f	class:SPIFFSEditor
SPIFFSEditor	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^class SPIFFSEditor: public AsyncWebHandler {$/;"	c
SPIFFSEditor_H_	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^#define SPIFFSEditor_H_$/;"	d
SPIFFS_MAXLENGTH_FILEPATH	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^#define SPIFFS_MAXLENGTH_FILEPATH /;"	d	file:
SPI_BITORDER_LSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = SPI_LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define SPI_BITORDER_LSBFIRST /;"	d
SPI_BITORDER_LSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_LSBFIRST = SPI_LSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_LSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define SPI_BITORDER_LSBFIRST /;"	d
SPI_BITORDER_MSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = SPI_MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define SPI_BITORDER_MSBFIRST /;"	d
SPI_BITORDER_MSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPI_BITORDER_MSBFIRST = SPI_MSBFIRST,$/;"	e	enum:_BitOrder
SPI_BITORDER_MSBFIRST	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^#define SPI_BITORDER_MSBFIRST /;"	d
SPI_MODE0	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon01f3beeb0103
SPI_MODE0	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon7f56235a0103
SPI_MODE1	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon01f3beeb0103
SPI_MODE1	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon7f56235a0103
SPI_MODE2	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon01f3beeb0103
SPI_MODE2	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon7f56235a0103
SSE_MAX_QUEUED_MESSAGES	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^#define SSE_MAX_QUEUED_MESSAGES /;"	d
SSID	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define SSID /;"	d
SSID	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define SSID /;"	d
SSL	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef struct SSL_ SSL;$/;"	t	typeref:struct:SSL_
SSL_CTX	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^typedef struct SSL_CTX_ SSL_CTX;$/;"	t	typeref:struct:SSL_CTX_
STL list	Xpider-cute-robot/README.md	/^#### STL list$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
STL parts (Nektere nahradit upravenymi, mnou vyrobenymi a pod.)	Hexapod-markwtech/README.md	/^## STL parts (Nektere nahradit upravenymi, mnou vyrobenymi a pod.)$/;"	s	chapter:Hexapod - Markwtech (PhantomX clone)
STRINGARRAY_H_	experiments/ESP_Async_WebServer/src/StringArray.h	/^#define STRINGARRAY_H_$/;"	d
SYNCCLIENT_H_	experiments/ESP_AsyncTCP/src/SyncClient.h	/^#define SYNCCLIENT_H_$/;"	d
SYNC_CLIENT_DEBUG	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^#define SYNC_CLIENT_DEBUG(/;"	d	file:
Scanning for available WiFi Networks	experiments/ESP_Async_WebServer/README.md	/^## Scanning for available WiFi Networks$/;"	s	chapter:ESPAsyncWebServer
Schematic	experiments/Servo/examples/Knob/readme.md	/^## Schematic$/;"	s	chapter:Knob
Schematic	experiments/Servo/examples/Sweep/readme.md	/^## Schematic$/;"	s	chapter:Sweep
Screws, tools, ...	Xpider-cute-robot/README.md	/^#### Screws, tools, ...$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`attach()`
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`attached()`
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`detach()`
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`read()`
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`write()`
See also	experiments/Servo/docs/api.md	/^#### See also$/;"	t	subsection:Servo library""Methods""`writeMicroseconds()`
See also	experiments/Servo/examples/Knob/readme.md	/^## See also$/;"	s	chapter:Knob
See also	experiments/Servo/examples/Sweep/readme.md	/^## See also$/;"	s	chapter:Sweep
Send binary content from PROGMEM	experiments/ESP_Async_WebServer/README.md	/^### Send binary content from PROGMEM$/;"	S	section:ESPAsyncWebServer""Responses
Send large webpage from PROGMEM	experiments/ESP_Async_WebServer/README.md	/^### Send large webpage from PROGMEM$/;"	S	section:ESPAsyncWebServer""Responses
Send large webpage from PROGMEM and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Send large webpage from PROGMEM and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Send large webpage from PROGMEM containing templates	experiments/ESP_Async_WebServer/README.md	/^### Send large webpage from PROGMEM containing templates$/;"	S	section:ESPAsyncWebServer""Responses
Send large webpage from PROGMEM containing templates and extra headers	experiments/ESP_Async_WebServer/README.md	/^### Send large webpage from PROGMEM containing templates and extra headers$/;"	S	section:ESPAsyncWebServer""Responses
Serve different site files in AP mode	experiments/ESP_Async_WebServer/README.md	/^### Serve different site files in AP mode$/;"	S	section:ESPAsyncWebServer""Using filters
Serving different hosts	experiments/ESP_Async_WebServer/README.md	/^### Serving different hosts$/;"	S	section:ESPAsyncWebServer""Using filters
Serving files in directory	experiments/ESP_Async_WebServer/README.md	/^### Serving files in directory$/;"	S	section:ESPAsyncWebServer""Serving static files
Serving specific file by name	experiments/ESP_Async_WebServer/README.md	/^### Serving specific file by name$/;"	S	section:ESPAsyncWebServer""Serving static files
Serving static files	experiments/ESP_Async_WebServer/README.md	/^## Serving static files$/;"	s	chapter:ESPAsyncWebServer
Serving static files with authentication	experiments/ESP_Async_WebServer/README.md	/^### Serving static files with authentication$/;"	S	section:ESPAsyncWebServer""Serving static files
Servo	experiments/Servo/src/Servo.h	/^class Servo$/;"	c
Servo	experiments/Servo/src/avr/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/mbed/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/megaavr/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/nrf52/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/renesas/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/sam/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/samd/Servo.cpp	/^Servo::Servo()$/;"	f	class:Servo
Servo	experiments/Servo/src/stm32f4/Servo.cpp	/^Servo::Servo() {$/;"	f	class:Servo
Servo	experiments/Servo/src/stm32f4/ServoTimers.h	/^class Servo {$/;"	c
Servo Control	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Servo Control$/;"	S	section:PCA9685-Arduino""Hookup Callouts
Servo Control	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Servo Control$/;"	S	section:PCA9685-Arduino""Hookup Callouts
Servo Evaluator Example	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Servo Evaluator Example$/;"	S	section:PCA9685-Arduino""Example Usage
Servo Evaluator Example	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Servo Evaluator Example$/;"	S	section:PCA9685-Arduino""Example Usage
Servo library	experiments/Servo/docs/api.md	/^# Servo library$/;"	c
Servo library	experiments/Servo/docs/readme.md	/^# Servo library$/;"	c
ServoAngles	Hexapod-markwtech/src/kinematics.py	/^class ServoAngles:$/;"	c
ServoCount	experiments/Servo/src/avr/Servo.cpp	/^uint8_t ServoCount = 0;                                     \/\/ the total number of attached se/;"	v	typeref:typename:uint8_t
ServoCount	experiments/Servo/src/mbed/Servo.cpp	/^uint8_t ServoCount = 0;                                    \/\/ the total number of attached ser/;"	v	typeref:typename:uint8_t
ServoCount	experiments/Servo/src/megaavr/Servo.cpp	/^uint8_t ServoCount = 0;                                    \/\/ the total number of attached ser/;"	v	typeref:typename:uint8_t
ServoCount	experiments/Servo/src/nrf52/Servo.cpp	/^uint8_t ServoCount = 0;                                     \/\/ the total number of attached se/;"	v	typeref:typename:uint8_t
ServoCount	experiments/Servo/src/sam/Servo.cpp	/^uint8_t ServoCount = 0;                                     \/\/ the total number of attached se/;"	v	typeref:typename:uint8_t
ServoCount	experiments/Servo/src/samd/Servo.cpp	/^uint8_t ServoCount = 0;                                    \/\/ the total number of attached ser/;"	v	typeref:typename:uint8_t
ServoHandler	experiments/Servo/src/megaavr/Servo.cpp	/^void ServoHandler(int timer)$/;"	f	typeref:typename:void
ServoImpl	experiments/Servo/src/mbed/Servo.cpp	/^    ServoImpl(PinName _pin) {$/;"	f	class:ServoImpl	file:
ServoImpl	experiments/Servo/src/mbed/Servo.cpp	/^class ServoImpl {$/;"	c	file:
ServoPin_t	experiments/Servo/src/Servo.h	/^} ServoPin_t   ;  $/;"	t	typeref:struct:__anonc3bc0c620108
Servo_Handler	experiments/Servo/src/sam/Servo.cpp	/^void Servo_Handler(timer16_Sequence_t timer, Tc *tc, uint8_t channel)$/;"	f	typeref:typename:void
Servo_Handler	experiments/Servo/src/samd/Servo.cpp	/^void Servo_Handler(timer16_Sequence_t timer, Tc *tc, uint8_t channel, uint8_t intFlag)$/;"	f	typeref:typename:void
Servo_VERSION	experiments/Servo/src/Servo.h	/^#define Servo_VERSION /;"	d
Servo_h	experiments/Servo/src/Servo.h	/^#define Servo_h$/;"	d
Sestaveni	Hexapod-markwtech/README.md	/^## Sestaveni$/;"	s	chapter:Hexapod - Markwtech (PhantomX clone)
Setting up the server	experiments/ESP_Async_WebServer/README.md	/^## Setting up the server$/;"	s	chapter:ESPAsyncWebServer
Setup Event Source in the browser	experiments/ESP_Async_WebServer/README.md	/^### Setup Event Source in the browser$/;"	S	section:ESPAsyncWebServer""Async Event Source Plugin
Setup Event Source on the server	experiments/ESP_Async_WebServer/README.md	/^### Setup Event Source on the server$/;"	S	section:ESPAsyncWebServer""Async Event Source Plugin
Setup global and class functions as request handlers	experiments/ESP_Async_WebServer/README.md	/^### Setup global and class functions as request handlers$/;"	S	section:ESPAsyncWebServer""Setting up the server
Seznam materialu a soucastek k tisku	Xpider-cute-robot/README.md	/^### Seznam materialu a soucastek k tisku$/;"	S	chapter:Kame
SharedEmptyString	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^static const String SharedEmptyString = String();$/;"	v	typeref:typename:const String	file:
SharedLegParameters	Hexapod-markwtech/src/hexapod.py	/^class SharedLegParameters:$/;"	c
Simple Example	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Simple Example$/;"	S	section:PCA9685-Arduino""Example Usage
Simple Example	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Simple Example$/;"	S	section:PCA9685-Arduino""Example Usage
Software i2c Example	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Software i2c Example$/;"	S	section:PCA9685-Arduino""Example Usage
Software i2c Example	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/README.md	/^### Software i2c Example$/;"	S	section:PCA9685-Arduino""Example Usage
Specifying Cache-Control header	experiments/ESP_Async_WebServer/README.md	/^### Specifying Cache-Control header$/;"	S	section:ESPAsyncWebServer""Serving static files
Specifying Date-Modified header	experiments/ESP_Async_WebServer/README.md	/^### Specifying Date-Modified header$/;"	S	section:ESPAsyncWebServer""Serving static files
Specifying Template Processor callback	experiments/ESP_Async_WebServer/README.md	/^### Specifying Template Processor callback$/;"	S	section:ESPAsyncWebServer""Serving static files
Stojanek	Hexapod-markwtech/README.md	/^### Stojanek$/;"	S	section:Hexapod - Markwtech (PhantomX clone)""STL parts (Nektere nahradit upravenymi, mnou vyrobenymi a pod.)
StringArray	experiments/ESP_Async_WebServer/src/StringArray.h	/^  StringArray() : LinkedList(nullptr) {}$/;"	f	class:StringArray
StringArray	experiments/ESP_Async_WebServer/src/StringArray.h	/^class StringArray : public LinkedList<String> {$/;"	c
Sweep	experiments/Servo/examples/Sweep/readme.md	/^# Sweep$/;"	c
SyncClient	experiments/ESP_AsyncTCP/README.md	/^## SyncClient$/;"	s	chapter:ESPAsyncTCP
SyncClient	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^SyncClient::SyncClient(AsyncClient *client, size_t txBufLen)$/;"	f	class:SyncClient
SyncClient	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^SyncClient::SyncClient(size_t txBufLen)$/;"	f	class:SyncClient
SyncClient	experiments/ESP_AsyncTCP/src/SyncClient.h	/^class SyncClient: public Client {$/;"	c
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`attach()`
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`attached()`
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`detach()`
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`read()`
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`write()`
Syntax	experiments/Servo/docs/api.md	/^#### Syntax$/;"	t	subsection:Servo library""Methods""`writeMicroseconds()`
TAU_CYC	experiments/Servo/src/stm32f4/Servo.cpp	/^#define TAU_CYC /;"	d	file:
TAU_MSEC	experiments/Servo/src/stm32f4/Servo.cpp	/^#define TAU_MSEC /;"	d	file:
TAU_USEC	experiments/Servo/src/stm32f4/Servo.cpp	/^#define TAU_USEC /;"	d	file:
TCP_MSS	experiments/ESP_AsyncTCP/src/async_config.h	/^#define TCP_MSS /;"	d
TCP_PORT	experiments/ESP_AsyncTCP/examples/ClientServer/Client/config.h	/^#define TCP_PORT /;"	d
TCP_PORT	experiments/ESP_AsyncTCP/examples/ClientServer/Server/config.h	/^#define TCP_PORT /;"	d
TCP_SSL_DEBUG	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define TCP_SSL_DEBUG(/;"	d
TCP_SSL_DEBUG	experiments/ESP_AsyncTCP/src/async_config.h	/^#define TCP_SSL_DEBUG(/;"	d
TCP_SSL_TYPE_CLIENT	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define TCP_SSL_TYPE_CLIENT /;"	d
TCP_SSL_TYPE_SERVER	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define TCP_SSL_TYPE_SERVER /;"	d
TC_FOR_TIMER1	experiments/Servo/src/sam/ServoTimers.h	/^#define TC_FOR_TIMER1 /;"	d
TC_FOR_TIMER1	experiments/Servo/src/samd/ServoTimers.h	/^#define TC_FOR_TIMER1 /;"	d
TC_FOR_TIMER2	experiments/Servo/src/sam/ServoTimers.h	/^#define TC_FOR_TIMER2 /;"	d
TC_FOR_TIMER2	experiments/Servo/src/samd/ServoTimers.h	/^#define TC_FOR_TIMER2 /;"	d
TC_FOR_TIMER3	experiments/Servo/src/sam/ServoTimers.h	/^#define TC_FOR_TIMER3 /;"	d
TC_FOR_TIMER4	experiments/Servo/src/sam/ServoTimers.h	/^#define TC_FOR_TIMER4 /;"	d
TC_FOR_TIMER5	experiments/Servo/src/sam/ServoTimers.h	/^#define TC_FOR_TIMER5 /;"	d
TEMPLATE_PARAM_NAME_LENGTH	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^#define TEMPLATE_PARAM_NAME_LENGTH /;"	d
TEMPLATE_PLACEHOLDER	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^#define TEMPLATE_PLACEHOLDER /;"	d
TODO	Hexapod-markwtech/TODO.md	/^# TODO$/;"	c
TRIM_DURATION	experiments/Servo/src/avr/Servo.cpp	/^#define TRIM_DURATION /;"	d	file:
TRIM_DURATION	experiments/Servo/src/mbed/Servo.cpp	/^#define TRIM_DURATION /;"	d	file:
TRIM_DURATION	experiments/Servo/src/megaavr/Servo.cpp	/^#define TRIM_DURATION /;"	d	file:
TRIM_DURATION	experiments/Servo/src/sam/Servo.cpp	/^#define TRIM_DURATION /;"	d	file:
TRIM_DURATION	experiments/Servo/src/samd/Servo.cpp	/^#define TRIM_DURATION /;"	d	file:
Table of contents	experiments/ESP_Async_WebServer/README.md	/^## Table of contents$/;"	s	chapter:ESPAsyncWebServer
Template processing	experiments/ESP_Async_WebServer/README.md	/^### Template processing$/;"	S	section:ESPAsyncWebServer""Principles of operation
Tests	Hexapod-markwtech/src/tests.py	/^class Tests:$/;"	c
The Async Web server	experiments/ESP_Async_WebServer/README.md	/^### The Async Web server$/;"	S	section:ESPAsyncWebServer""Principles of operation
Timer1Service	experiments/Servo/src/avr/Servo.cpp	/^void Timer1Service()$/;"	f	typeref:typename:void
Timer3Service	experiments/Servo/src/avr/Servo.cpp	/^void Timer3Service()$/;"	f	typeref:typename:void
USE_TIMERB2	experiments/Servo/src/megaavr/ServoTimers.h	/^#define USE_TIMERB2 /;"	d
US_TO_ANGLE	experiments/Servo/src/stm32f4/Servo.cpp	/^#define US_TO_ANGLE(/;"	d	file:
US_TO_COMPARE	experiments/Servo/src/stm32f4/Servo.cpp	/^#define US_TO_COMPARE(/;"	d	file:
Using PlatformIO	experiments/ESP_Async_WebServer/README.md	/^### Using PlatformIO$/;"	S	section:ESPAsyncWebServer""Installation
Using filters	experiments/ESP_Async_WebServer/README.md	/^## Using filters$/;"	s	chapter:ESPAsyncWebServer
WAIT_FOR_RETURN1	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  WAIT_FOR_RETURN1,$/;"	e	enum:__anon7471535f0b03	file:
WAIT_TC16_REGS_SYNC	experiments/Servo/src/samd/Servo.cpp	/^#define WAIT_TC16_REGS_SYNC(/;"	d	file:
WEB_AUTHENTICATION_H_	experiments/ESP_Async_WebServer/src/WebAuthentication.h	/^#define WEB_AUTHENTICATION_H_$/;"	d
WHITE	pygame_plot.py	/^WHITE = (255, 255, 255)$/;"	v
WHITE	pygame_plot2.py	/^WHITE = (255, 255, 255)$/;"	v
WIDTH	pygame_plot.py	/^WIDTH, HEIGHT = 800, 600$/;"	v
WIDTH	pygame_plot2.py	/^WIDTH, HEIGHT = 800, 600$/;"	v
WS_BINARY	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WS_CONNECTED	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_DISCONNECTED, WS_CONNECTED, WS_DISCONNECTING } AwsClientStatus;$/;"	e	enum:__anon203386220203
WS_CONTINUATION	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WS_DISCONNECT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WS_DISCONNECTED	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_DISCONNECTED, WS_CONNECTED, WS_DISCONNECTING } AwsClientStatus;$/;"	e	enum:__anon203386220203
WS_DISCONNECTING	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_DISCONNECTED, WS_CONNECTED, WS_DISCONNECTING } AwsClientStatus;$/;"	e	enum:__anon203386220203
WS_EVT_CONNECT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	e	enum:__anon203386220503
WS_EVT_DATA	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	e	enum:__anon203386220503
WS_EVT_DISCONNECT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	e	enum:__anon203386220503
WS_EVT_ERROR	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	e	enum:__anon203386220503
WS_EVT_PONG	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	e	enum:__anon203386220503
WS_MAX_QUEUED_MESSAGES	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^#define WS_MAX_QUEUED_MESSAGES /;"	d
WS_MSG_ERROR	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_MSG_SENDING, WS_MSG_SENT, WS_MSG_ERROR } AwsMessageStatus;$/;"	e	enum:__anon203386220403
WS_MSG_SENDING	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_MSG_SENDING, WS_MSG_SENT, WS_MSG_ERROR } AwsMessageStatus;$/;"	e	enum:__anon203386220403
WS_MSG_SENT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_MSG_SENDING, WS_MSG_SENT, WS_MSG_ERROR } AwsMessageStatus;$/;"	e	enum:__anon203386220403
WS_PING	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WS_PONG	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WS_STR_ACCEPT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_ACCEPT = "Sec-WebSocket-Accept";$/;"	v	typeref:typename:const char *
WS_STR_CONNECTION	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_CONNECTION = "Connection";$/;"	v	typeref:typename:const char *
WS_STR_KEY	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_KEY = "Sec-WebSocket-Key";$/;"	v	typeref:typename:const char *
WS_STR_ORIGIN	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_ORIGIN = "Origin";$/;"	v	typeref:typename:const char *
WS_STR_PROTOCOL	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_PROTOCOL = "Sec-WebSocket-Protocol";$/;"	v	typeref:typename:const char *
WS_STR_UPGRADE	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_UPGRADE = "Upgrade";$/;"	v	typeref:typename:const char *
WS_STR_UUID	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_UUID = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	v	typeref:typename:const char *
WS_STR_VERSION	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^const char * WS_STR_VERSION = "Sec-WebSocket-Version";$/;"	v	typeref:typename:const char *
WS_TEXT	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	e	enum:__anon203386220303
WebRequestMethod	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^} WebRequestMethod;$/;"	t	typeref:enum:__anon185fb8380103
WebRequestMethodComposite	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef uint8_t WebRequestMethodComposite;$/;"	t	typeref:typename:uint8_t
WebResponseState	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^} WebResponseState;$/;"	t	typeref:enum:__anon185fb8380303
WebSocketTester	experiments/ESP_Async_WebServer/examples/ESP_AsyncFSBrowser/data/index.htm	/^    <title>WebSocketTester<\/title>$/;"	j
Why should you care	experiments/ESP_Async_WebServer/README.md	/^## Why should you care$/;"	s	chapter:ESPAsyncWebServer
_ADAFRUIT_I2C_REGISTER_H_	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^#define _ADAFRUIT_I2C_REGISTER_H_$/;"	d
_ADAFRUIT_I2C_REGISTER_H_	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CRegister.h	/^#define _ADAFRUIT_I2C_REGISTER_H_$/;"	d
_ADAFRUIT_PWMServoDriver_H	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define _ADAFRUIT_PWMServoDriver_H$/;"	d
_ADAFRUIT_PWMServoDriver_H	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^#define _ADAFRUIT_PWMServoDriver_H$/;"	d
_Adafruit_BusIO_SPIRegType	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^typedef enum _Adafruit_BusIO_SPIRegType {$/;"	g
_Adafruit_BusIO_SPIRegType	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^typedef enum _Adafruit_BusIO_SPIRegType {$/;"	g
_BitOrder	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef enum _BitOrder {$/;"	g
_BitOrder	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^typedef enum _BitOrder {$/;"	g
_DEBUG_PRINT_MACROS_H	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define _DEBUG_PRINT_MACROS_H$/;"	d
_DEBUG_TIME_STAMP	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^struct _DEBUG_TIME_STAMP {$/;"	s
_ESPAsyncWebServer_H_	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^#define _ESPAsyncWebServer_H_$/;"	d
_FILENAME_	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^#define _FILENAME_ /;"	d
_Nbr_16timers	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0203
_Nbr_16timers	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0503
_Nbr_16timers	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0303
_Nbr_16timers	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0403
_Nbr_16timers	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0103
_Nbr_16timers	experiments/Servo/src/mbed/ServoTimers.h	/^#define _Nbr_16timers /;"	d
_Nbr_16timers	experiments/Servo/src/megaavr/ServoTimers.h	/^    _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anon25c82fa80103
_Nbr_16timers	experiments/Servo/src/nrf52/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anond775ead20103
_Nbr_16timers	experiments/Servo/src/renesas/ServoTimers.h	/^#define _Nbr_16timers /;"	d
_Nbr_16timers	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_Nbr_16timers	experiments/Servo/src/samd/ServoTimers.h	/^    _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anon50e73c4a0103
_Nbr_16timers	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define _Nbr_16timers /;"	d
_RXbuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        cbuf * _RXbuffer;$/;"	m	class:AsyncTCPbuffer	typeref:typename:cbuf *
_RXmode	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        atbRxMode_t _RXmode;$/;"	m	class:AsyncTCPbuffer	typeref:typename:atbRxMode_t
_SERVO_H_	experiments/Servo/src/stm32f4/ServoTimers.h	/^#define _SERVO_H_$/;"	d
_SPI_MODE4	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon01f3beeb0103
_SPI_MODE4	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	e	enum:__anon7f56235a0103
_TXbufferRead	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        cbuf * _TXbufferRead;$/;"	m	class:AsyncTCPbuffer	typeref:typename:cbuf *
_TXbufferWrite	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        cbuf * _TXbufferWrite;$/;"	m	class:AsyncTCPbuffer	typeref:typename:cbuf *
_WSbuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocketMessageBuffer * _WSbuffer; $/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:AsyncWebSocketMessageBuffer *
__SERVO_TIMERS_H__	experiments/Servo/src/megaavr/ServoTimers.h	/^#define __SERVO_TIMERS_H__$/;"	d
__SERVO_TIMERS_H__	experiments/Servo/src/nrf52/ServoTimers.h	/^#define __SERVO_TIMERS_H__$/;"	d
__SERVO_TIMERS_H__	experiments/Servo/src/samd/ServoTimers.h	/^#define __SERVO_TIMERS_H__$/;"	d
__anon01f3beeb0103	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	g
__anon182525260103	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	g
__anon185fb8380103	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum {$/;"	g
__anon185fb8380203	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum { RCT_NOT_USED = -1, RCT_DEFAULT = 0, RCT_HTTP, RCT_WS, RCT_EVENT, RCT_MAX } Reques/;"	g
__anon185fb8380303	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^typedef enum {$/;"	g
__anon185fb8380402	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  :_headers(headers_t([](AsyncWebHeader *h){ delete h; }))$/;"	f	class:DefaultHeaders	file:
__anon203386220108	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef struct {$/;"	s
__anon203386220203	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_DISCONNECTED, WS_CONNECTED, WS_DISCONNECTING } AwsClientStatus;$/;"	g
__anon203386220303	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_CONTINUATION, WS_TEXT, WS_BINARY, WS_DISCONNECT = 0x08, WS_PING, WS_PONG } Aws/;"	g
__anon203386220403	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_MSG_SENDING, WS_MSG_SENT, WS_MSG_ERROR } AwsMessageStatus;$/;"	g
__anon203386220503	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^typedef enum { WS_EVT_CONNECT, WS_EVT_DISCONNECT, WS_EVT_PONG, WS_EVT_ERROR, WS_EVT_DATA } AwsEv/;"	g
__anon2492671d0108	experiments/Servo/src/renesas/Servo.cpp	/^typedef struct {$/;"	s	file:
__anon25c82fa80103	experiments/Servo/src/megaavr/ServoTimers.h	/^typedef enum {$/;"	g
__anon2ce50c8d0102	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onConnect([](void *obj, AsyncClient *c){ ((AsyncPrinter*)(obj))->_onConnect(c); }, th/;"	f	function:AsyncPrinter::connect	file:
__anon2ce50c8d0202	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onConnect([](void *obj, AsyncClient *c){ ((AsyncPrinter*)(obj))->_onConnect(c); }, th/;"	f	function:AsyncPrinter::connect	file:
__anon2ce50c8d0302	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onPoll([](void *obj, AsyncClient* c){ (void)c; ((AsyncPrinter*)(obj))->_sendBuffer();/;"	f	function:AsyncPrinter::_attachCallbacks	file:
__anon2ce50c8d0402	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onAck([](void *obj, AsyncClient* c, size_t len, uint32_t time){  (void)c; (void)len; /;"	f	function:AsyncPrinter::_attachCallbacks	file:
__anon2ce50c8d0502	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onDisconnect([](void *obj, AsyncClient* c){ ((AsyncPrinter*)(obj))->_on_close(); dele/;"	f	function:AsyncPrinter::_attachCallbacks	file:
__anon2ce50c8d0602	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^  _client->onData([](void *obj, AsyncClient* c, void *data, size_t len){ (void)c; ((AsyncPrinter/;"	f	function:AsyncPrinter::_attachCallbacks	file:
__anon501a3bed0102	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^  , _rewrites(LinkedList<AsyncWebRewrite*>([](AsyncWebRewrite* r){ delete r; }))$/;"	f	file:
__anon501a3bed0202	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^  , _handlers(LinkedList<AsyncWebHandler*>([](AsyncWebHandler* h){ delete h; }))$/;"	f	file:
__anon501a3bed0302	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^  _server.onClient([](void *s, AsyncClient* c){$/;"	f	function:AsyncWebServer::AsyncWebServer	file:
__anon50e73c4a0103	experiments/Servo/src/samd/ServoTimers.h	/^typedef enum {$/;"	g
__anon6f4991f20102	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^    _client->onPoll([](void *obj, AsyncClient* c) {$/;"	f	function:AsyncTCPbuffer::_attachCallbacks	file:
__anon6f4991f20202	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^    _client->onAck([](void *obj, AsyncClient* c, size_t len, uint32_t time) {$/;"	f	function:AsyncTCPbuffer::_attachCallbacks	file:
__anon6f4991f20302	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^    _client->onDisconnect([](void *obj, AsyncClient* c) {$/;"	f	function:AsyncTCPbuffer::_attachCallbacks	file:
__anon6f4991f20402	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^    _client->onData([](void *obj, AsyncClient* c, void *buf, size_t len) {$/;"	f	function:AsyncTCPbuffer::_attachCallbacks	file:
__anon6f4991f20502	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^    _client->onTimeout([](void *obj, AsyncClient* c, uint32_t time){$/;"	f	function:AsyncTCPbuffer::_attachCallbacks	file:
__anon707a2a180102	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^  , _headers(LinkedList<AsyncWebHeader *>([](AsyncWebHeader *h){ delete h; }))$/;"	f	file:
__anon7471535f0103	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum { PARSE_REQ_START, PARSE_REQ_HEADERS, PARSE_REQ_BODY, PARSE_REQ_END, PARSE_REQ_FAIL };$/;"	g	file:
__anon7471535f0202	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  , _headers(LinkedList<AsyncWebHeader *>([](AsyncWebHeader *h){ delete h; }))$/;"	f	file:
__anon7471535f0302	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  , _params(LinkedList<AsyncWebParameter *>([](AsyncWebParameter *p){ delete p; }))$/;"	f	file:
__anon7471535f0402	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  , _pathParams(LinkedList<String *>([](String *p){ delete p; }))$/;"	f	file:
__anon7471535f0502	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onError([](void *r, AsyncClient* c, int8_t error){ (void)c; AsyncWebServerRequest *req = (A/;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0602	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onAck([](void *r, AsyncClient* c, size_t len, uint32_t time){ (void)c; AsyncWebServerReques/;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0702	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onDisconnect([](void *r, AsyncClient* c){ AsyncWebServerRequest *req = (AsyncWebServerReque/;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0802	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onTimeout([](void *r, AsyncClient* c, uint32_t time){ (void)c; AsyncWebServerRequest *req =/;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0902	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onData([](void *r, AsyncClient* c, void *buf, size_t len){ (void)c; AsyncWebServerRequest */;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0a02	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^  c->onPoll([](void *r, AsyncClient* c){ (void)c; AsyncWebServerRequest *req = ( AsyncWebServerR/;"	f	function:AsyncWebServerRequest::AsyncWebServerRequest	file:
__anon7471535f0b03	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^enum {$/;"	g	file:
__anon7f56235a0103	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^enum { SPI_MODE0, SPI_MODE1, SPI_MODE2, _SPI_MODE4 };$/;"	g
__anon897f90c70102	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onConnect([](void *obj, AsyncClient *c){ ((SyncClient*)(obj))->_onConnect(c); }, this/;"	f	function:SyncClient::_connect	file:
__anon897f90c70202	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onConnect([](void *obj, AsyncClient *c){ ((SyncClient*)(obj))->_onConnect(c); }, this/;"	f	function:SyncClient::connect	file:
__anon897f90c70302	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onAck([](void *obj, AsyncClient* c, size_t len, uint32_t time){ (void)c; (void)len; (/;"	f	function:SyncClient::_attachCallbacks_AfterConnected	file:
__anon897f90c70402	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onData([](void *obj, AsyncClient* c, void *data, size_t len){ (void)c; ((SyncClient*)/;"	f	function:SyncClient::_attachCallbacks_AfterConnected	file:
__anon897f90c70502	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onTimeout([](void *obj, AsyncClient* c, uint32_t time){ (void)obj; (void)time; c->clo/;"	f	function:SyncClient::_attachCallbacks_AfterConnected	file:
__anon897f90c70602	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^  _client->onDisconnect([](void *obj, AsyncClient* c){ ((SyncClient*)(obj))->_onDisconnect(); de/;"	f	function:SyncClient::_attachCallbacks_Disconnect	file:
__anon94f485180102	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^          c->onConnect([this](void * arg, AsyncClient *c){$/;"	f	function:AsyncServer::_accept	file:
__anon94f485180202	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^          [](void *obj, size_t ee){ ((AsyncServer*)(obj))->incEventCount(ee); },$/;"	f	function:AsyncServer::_accept	file:
__anon94f485180302	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^      c->onConnect([this](void * arg, AsyncClient *c){$/;"	f	function:AsyncServer::_poll	file:
__anona68996970103	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^typedef enum {$/;"	g
__anonc3bc0c620108	experiments/Servo/src/Servo.h	/^typedef struct  {$/;"	s
__anonc3bc0c620208	experiments/Servo/src/Servo.h	/^typedef struct {$/;"	s
__anond775ead20103	experiments/Servo/src/nrf52/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anondabaf7090102	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^: _messageQueue(LinkedList<AsyncEventSourceMessage *>([](AsyncEventSourceMessage *m){ delete  m;/;"	f	file:
__anondabaf7090202	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  _client->onAck([](void *r, AsyncClient* c, size_t len, uint32_t time){ (void)c; ((AsyncEventSo/;"	f	function:AsyncEventSourceClient::AsyncEventSourceClient	file:
__anondabaf7090302	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  _client->onPoll([](void *r, AsyncClient* c){ (void)c; ((AsyncEventSourceClient*)(r))->_onPoll(/;"	f	function:AsyncEventSourceClient::AsyncEventSourceClient	file:
__anondabaf7090402	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  _client->onTimeout([this](void *r, AsyncClient* c __attribute__((unused)), uint32_t time){ ((A/;"	f	function:AsyncEventSourceClient::AsyncEventSourceClient	file:
__anondabaf7090502	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  _client->onDisconnect([this](void *r, AsyncClient* c){ ((AsyncEventSourceClient*)(r))->_onDisc/;"	f	function:AsyncEventSourceClient::AsyncEventSourceClient	file:
__anondabaf7090602	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  , _clients(LinkedList<AsyncEventSourceClient *>([](AsyncEventSourceClient *c){ delete c; }))$/;"	f	file:
__anondabaf7090702	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^  return _clients.count_if([](AsyncEventSourceClient *c){$/;"	f	function:AsyncEventSource::count	file:
__anonf594814e0103	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anonf594814e0203	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anonf594814e0303	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anonf594814e0403	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anonf594814e0503	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	g
__anonfb2d903d0102	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  : _controlQueue(LinkedList<AsyncWebSocketControl *>([](AsyncWebSocketControl *c){ delete  c; }/;"	f	file:
__anonfb2d903d0202	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  , _messageQueue(LinkedList<AsyncWebSocketMessage *>([](AsyncWebSocketMessage *m){ delete  m; }/;"	f	file:
__anonfb2d903d0302	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onError([](void *r, AsyncClient* c, int8_t error){ (void)c; ((AsyncWebSocketClient*)(/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0402	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onAck([](void *r, AsyncClient* c, size_t len, uint32_t time){ (void)c; ((AsyncWebSock/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0502	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onDisconnect([](void *r, AsyncClient* c){ ((AsyncWebSocketClient*)(r))->_onDisconnect/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0602	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onTimeout([](void *r, AsyncClient* c, uint32_t time){ (void)c; ((AsyncWebSocketClient/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0702	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onData([](void *r, AsyncClient* c, void *buf, size_t len){ (void)c; ((AsyncWebSocketC/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0802	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _client->onPoll([](void *r, AsyncClient* c){ (void)c; ((AsyncWebSocketClient*)(r))->_onPoll();/;"	f	function:AsyncWebSocketClient::AsyncWebSocketClient	file:
__anonfb2d903d0902	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  ,_clients(LinkedList<AsyncWebSocketClient *>([](AsyncWebSocketClient *c){ delete c; }))$/;"	f	file:
__anonfb2d903d0a02	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  ,_buffers(LinkedList<AsyncWebSocketMessageBuffer *>([](AsyncWebSocketMessageBuffer *b){ delete/;"	f	file:
__anonfb2d903d0b02	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  _clients.remove_first([=](AsyncWebSocketClient * c){$/;"	f	function:AsyncWebSocket::_handleDisconnect	file:
__anonfb2d903d0c02	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^  return _clients.count_if([](AsyncWebSocketClient * c){$/;"	f	function:AsyncWebSocket::count	file:
__init__	Hexapod-markwtech/src/gate_engine.py	/^    def __init__(self):$/;"	m	class:GateEngine
__init__	Hexapod-markwtech/src/hexapod.py	/^    def __init__(self):$/;"	m	class:Hexapod
__init__	Hexapod-markwtech/src/hexapod.py	/^    def __init__(self, coxa_len=0.0, femur_len=0.0, tibia_len=0.0, max_angle=180):$/;"	m	class:SharedLegParameters
__init__	Hexapod-markwtech/src/hexapod.py	/^    def __init__(self, hexapod: Hexapod, leg_idx, placement_offset, shared_params: SharedLegPara/;"	m	class:HexapodLeg
__init__	Hexapod-markwtech/src/kinematics.py	/^    def __init__(self):$/;"	m	class:Kinematics
__init__	Hexapod-markwtech/src/plot.py	/^    def __init__(self):$/;"	m	class:Plotter
__init__	Hexapod-markwtech/src/tests.py	/^    def __init__(self):$/;"	m	class:Tests
__is_param_char	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^#define __is_param_char(/;"	d	file:
_accept	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_accept(tcp_pcb* pcb, err_t err){$/;"	f	class:AsyncServer	typeref:typename:err_t
_ack	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^size_t AsyncEventSourceResponse::_ack(AsyncWebServerRequest *request, size_t len, uint32_t time /;"	f	class:AsyncEventSourceResponse	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocketResponse::_ack(AsyncWebServerRequest *request, size_t len, uint32_t time){$/;"	f	class:AsyncWebSocketResponse	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _ack;$/;"	m	class:AsyncWebSocketBasicMessage	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _ack;$/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncAbstractResponse::_ack(AsyncWebServerRequest *request, size_t len, uint32_t time){$/;"	f	class:AsyncAbstractResponse	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncBasicResponse::_ack(AsyncWebServerRequest *request, size_t len, uint32_t time){$/;"	f	class:AsyncBasicResponse	typeref:typename:size_t
_ack	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncWebServerResponse::_ack(AsyncWebServerRequest *request, size_t len, uint32_t time){ /;"	f	class:AsyncWebServerResponse	typeref:typename:size_t
_ack_pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _ack_pcb;$/;"	m	class:AsyncClient	typeref:typename:bool
_ack_timeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _ack_timeout;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_acked	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    size_t _acked; $/;"	m	class:AsyncEventSourceMessage	typeref:typename:size_t
_acked	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _acked;$/;"	m	class:AsyncWebSocketBasicMessage	typeref:typename:size_t
_acked	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _acked;$/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:size_t
_ackedLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _ackedLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:size_t
_addClient	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::_addClient(AsyncEventSourceClient * client){$/;"	f	class:AsyncEventSource	typeref:typename:void
_addClient	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::_addClient(AsyncWebSocketClient * client){$/;"	f	class:AsyncWebSocket	typeref:typename:void
_addGetParams	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_addGetParams(const String& params){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_addParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_addParam(AsyncWebParameter *p){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_addPathParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_addPathParam(const char *p){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_addr	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  uint8_t _addr;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:uint8_t
_addr	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  uint8_t _addr;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:uint8_t
_addr	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    IPAddress _addr;$/;"	m	class:AsyncServer	typeref:typename:IPAddress
_address	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint16_t _address;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint16_t
_address	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint16_t _address;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint16_t
_addrwidth	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_addrwidth	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_assembleHead	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^String AsyncWebServerResponse::_assembleHead(uint8_t version){$/;"	f	class:AsyncWebServerResponse	typeref:typename:String
_attachCallbacks	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::_attachCallbacks(){$/;"	f	class:AsyncPrinter	typeref:typename:void
_attachCallbacks	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::_attachCallbacks() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
_attachCallbacks	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_attachCallbacks(){$/;"	f	class:SyncClient	typeref:typename:void
_attachCallbacks_AfterConnected	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_attachCallbacks_AfterConnected(){$/;"	f	class:SyncClient	typeref:typename:void
_attachCallbacks_Disconnect	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_attachCallbacks_Disconnect(){$/;"	f	class:SyncClient	typeref:typename:void
_attachHandler	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::_attachHandler(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebServer	typeref:typename:void
_authenticated	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    bool _authenticated;$/;"	m	class:SPIFFSEditor	typeref:typename:bool
_authorization	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _authorization;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_begun	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:bool
_begun	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:bool
_begun	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:bool
_begun	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  bool _begun;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:bool
_bits	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint8_t
_bits	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint8_t
_boundary	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _boundary;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_boundaryPosition	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t _boundaryPosition;$/;"	m	class:AsyncWebServerRequest	typeref:typename:uint8_t
_buffer	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _buffer[4]; \/\/ we won't support anything larger than uint32 for$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t[4]
_buffer	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _buffer[4]; \/\/ we won't support anything larger than uint32 for$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t[4]
_buffers	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    LinkedList<AsyncWebSocketMessageBuffer *> _buffers;$/;"	m	class:AsyncWebSocket	typeref:typename:LinkedList<AsyncWebSocketMessageBuffer * >
_byteorder	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_byteorder	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_cNextId	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _cNextId;$/;"	m	class:AsyncWebSocket	typeref:typename:uint32_t
_cache	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    std::vector<uint8_t> _cache;$/;"	m	class:AsyncAbstractResponse	typeref:typename:std::vector<uint8_t>
_cache_control	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _cache_control;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:String
_cached	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint32_t _cached = 0;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
_cached	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint32_t _cached = 0;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
_callback	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    AwsTemplateProcessor _callback;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:AwsTemplateProcessor
_callback	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    AwsTemplateProcessor _callback;$/;"	m	class:AsyncAbstractResponse	typeref:typename:AwsTemplateProcessor
_catchAllHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncCallbackWebHandler* _catchAllHandler;$/;"	m	class:AsyncWebServer	typeref:typename:AsyncCallbackWebHandler *
_cbDisconnect	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        AsyncTCPbufferDisconnectCb _cbDisconnect;$/;"	m	class:AsyncTCPbuffer	typeref:typename:AsyncTCPbufferDisconnectCb
_cbDone	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        AsyncTCPbufferDoneCb _cbDone;$/;"	m	class:AsyncTCPbuffer	typeref:typename:AsyncTCPbufferDoneCb
_cbRX	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        AsyncTCPbufferDataCb _cbRX;$/;"	m	class:AsyncTCPbuffer	typeref:typename:AsyncTCPbufferDataCb
_cert	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^int AsyncServer::_cert(const char *filename, uint8_t **buf){$/;"	f	class:AsyncServer	typeref:typename:int
_chunked	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _chunked;$/;"	m	class:AsyncWebServerResponse	typeref:typename:bool
_cleanBuffers	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::_cleanBuffers()$/;"	f	class:AsyncWebSocket	typeref:typename:void
_client	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    AsyncClient *_client;$/;"	m	class:AsyncPrinter	typeref:typename:AsyncClient *
_client	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AsyncClient *_client;$/;"	m	class:ACErrorTracker	typeref:typename:AsyncClient *
_client	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        AsyncClient* _client;$/;"	m	class:AsyncTCPbuffer	typeref:typename:AsyncClient *
_client	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    AsyncClient *_client;$/;"	m	class:SyncClient	typeref:typename:AsyncClient *
_client	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    AsyncClient *_client;$/;"	m	class:AsyncEventSourceClient	typeref:typename:AsyncClient *
_client	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncClient *_client;$/;"	m	class:AsyncWebSocketClient	typeref:typename:AsyncClient *
_client	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncClient* _client;$/;"	m	class:AsyncWebServerRequest	typeref:typename:AsyncClient *
_clientId	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _clientId;$/;"	m	class:AsyncWebSocketClient	typeref:typename:uint32_t
_clients	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    LinkedList<AsyncEventSourceClient *> _clients;$/;"	m	class:AsyncEventSource	typeref:typename:LinkedList<AsyncEventSourceClient * >
_clients	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocketClientLinkedList _clients;$/;"	m	class:AsyncWebSocket	typeref:typename:AsyncWebSocketClientLinkedList
_close	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_close(){$/;"	f	class:AsyncClient	typeref:typename:void
_close_arg	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    void *_close_arg;$/;"	m	class:AsyncPrinter	typeref:typename:void *
_close_cb	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    ApCloseHandler _close_cb;$/;"	m	class:AsyncPrinter	typeref:typename:ApCloseHandler
_close_error	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    err_t _close_error;$/;"	m	class:ACErrorTracker	typeref:typename:err_t
_close_pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _close_pcb;$/;"	m	class:AsyncClient	typeref:typename:bool
_code	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    int _code;$/;"	m	class:AsyncWebServerResponse	typeref:typename:int
_coeff	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    float *_coeff;      \/\/ a,b,c,d coefficient values$/;"	m	class:PCA9685_ServoEval	typeref:typename:float *
_coeff	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    float *_coeff;      \/\/ a,b,c,d coefficient values$/;"	m	class:PCA9685_ServoEval	typeref:typename:float *
_connect	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::_connect(const IPAddress& ip, uint16_t port, bool secure){$/;"	f	class:SyncClient	typeref:typename:int
_connect_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcConnectHandler _connect_cb;$/;"	m	class:AsyncClient	typeref:typename:AcConnectHandler
_connect_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcConnectHandler _connect_cb;$/;"	m	class:AsyncServer	typeref:typename:AcConnectHandler
_connect_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _connect_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_connect_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _connect_cb_arg;$/;"	m	class:AsyncServer	typeref:typename:void *
_connect_port	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint16_t _connect_port;$/;"	m	class:AsyncClient	typeref:typename:uint16_t
_connectcb	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    ArEventHandlerFunction _connectcb;$/;"	m	class:AsyncEventSource	typeref:typename:ArEventHandlerFunction
_connected	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_connected(std::shared_ptr<ACErrorTracker>& errorTracker, void* pcb, err_t err/;"	f	class:AsyncClient	typeref:typename:void
_connectionCount	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^static size_t _connectionCount=0;$/;"	v	typeref:typename:size_t	file:
_connectionId	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    size_t _connectionId;$/;"	m	class:ACErrorTracker	typeref:typename:size_t
_content	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    String _content;$/;"	m	class:AsyncEventSourceResponse	typeref:typename:String
_content	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    String _content;$/;"	m	class:AsyncWebSocketResponse	typeref:typename:String
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    AwsResponseFiller _content;$/;"	m	class:AsyncCallbackResponse	typeref:typename:AwsResponseFiller
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    AwsResponseFiller _content;$/;"	m	class:AsyncChunkedResponse	typeref:typename:AwsResponseFiller
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    File _content;$/;"	m	class:AsyncFileResponse	typeref:typename:File
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    Stream *_content;$/;"	m	class:AsyncStreamResponse	typeref:typename:Stream *
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    String _content;$/;"	m	class:AsyncBasicResponse	typeref:typename:String
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    cbuf *_content;$/;"	m	class:AsyncResponseStream	typeref:typename:cbuf *
_content	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    const uint8_t * _content;$/;"	m	class:AsyncProgmemResponse	typeref:typename:const uint8_t *
_contentLength	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  size_t _contentLength;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:size_t
_contentLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _contentLength;$/;"	m	class:AsyncWebServerRequest	typeref:typename:size_t
_contentLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _contentLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:size_t
_contentType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _contentType;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_contentType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _contentType;$/;"	m	class:AsyncWebServerResponse	typeref:typename:String
_controlQueue	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    LinkedList<AsyncWebSocketControl *> _controlQueue;$/;"	m	class:AsyncWebSocketClient	typeref:typename:LinkedList<AsyncWebSocketControl * >
_count	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _count;  $/;"	m	class:AsyncWebSocketMessageBuffer	typeref:typename:uint32_t
_countBits	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^uint8_t AsyncStaticWebHandler::_countBits(const uint8_t value) const$/;"	f	class:AsyncStaticWebHandler	typeref:typename:uint8_t
_cs	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_cs	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_data	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    uint8_t * _data; $/;"	m	class:AsyncEventSourceMessage	typeref:typename:uint8_t *
_data	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    uint8_t *_data;$/;"	m	class:AsyncWebSocketControl	typeref:typename:uint8_t *	file:
_data	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t * _data;$/;"	m	class:AsyncWebSocketBasicMessage	typeref:typename:uint8_t *
_data	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t * _data;$/;"	m	class:AsyncWebSocketMessageBuffer	typeref:typename:uint8_t *
_data	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t * _data;$/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:uint8_t *
_dataMode	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint8_t _dataMode;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:uint8_t
_dataMode	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint8_t _dataMode;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:uint8_t
_dataOrder	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIOBitOrder _dataOrder;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIOBitOrder
_dataOrder	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIOBitOrder _dataOrder;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIOBitOrder
_data_arg	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    void *_data_arg;$/;"	m	class:AsyncPrinter	typeref:typename:void *
_data_cb	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    ApDataHandler _data_cb;$/;"	m	class:AsyncPrinter	typeref:typename:ApDataHandler
_default_file	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _default_file;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:String
_destination	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    uint8_t* _destination;$/;"	m	class:ChunkPrint	typeref:typename:uint8_t *
_disabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode _disabledMode;               \/\/ OE disabled output mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputDisabledMode
_disabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDisabledMode _disabledMode;               \/\/ OE disabled output mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputDisabledMode
_discard_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcConnectHandler _discard_cb;$/;"	m	class:AsyncClient	typeref:typename:AcConnectHandler
_discard_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _discard_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_dns_found	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_dns_found(struct ip_addr *ipaddr){$/;"	f	class:AsyncClient	typeref:typename:void
_driverMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode _driverMode;                   \/\/ Output driver mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputDriverMode
_driverMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputDriverMode _driverMode;                   \/\/ Output driver mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputDriverMode
_enabled	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool _enabled;$/;"	m	class:AsyncWebSocket	typeref:typename:bool
_enabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode _enabledMode;                 \/\/ OE enabled output mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputEnabledMode
_enabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_OutputEnabledMode _enabledMode;                 \/\/ OE enabled output mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_OutputEnabledMode
_error	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_error(err_t err) {$/;"	f	class:AsyncClient	typeref:typename:void
_errorTracker	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    std::shared_ptr<ACErrorTracker> _errorTracker;$/;"	m	class:AsyncClient	typeref:typename:std::shared_ptr<ACErrorTracker>
_error_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcErrorHandler _error_cb;$/;"	m	class:AsyncClient	typeref:typename:AcErrorHandler
_error_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _error_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_error_event_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AsNotifyHandler _error_event_cb;$/;"	m	class:ACErrorTracker	typeref:typename:AsNotifyHandler
_error_event_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _error_event_cb_arg;$/;"	m	class:ACErrorTracker	typeref:typename:void *
_errored	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    int _errored;$/;"	m	class:ACErrorTracker	typeref:typename:int
_eventHandler	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsEventHandler _eventHandler;$/;"	m	class:AsyncWebSocket	typeref:typename:AwsEventHandler
_event_count	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    int _event_count[EE_MAX];$/;"	m	class:AsyncServer	typeref:typename:int[]
_expectingContinue	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _expectingContinue;$/;"	m	class:AsyncWebServerRequest	typeref:typename:bool
_failed	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^bool AsyncWebServerResponse::_failed() const { return _state == RESPONSE_FAILED; }$/;"	f	class:AsyncWebServerResponse	typeref:typename:bool
_fileExists	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^bool AsyncStaticWebHandler::_fileExists(AsyncWebServerRequest *request, const String& path)$/;"	f	class:AsyncStaticWebHandler	typeref:typename:bool
_file_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcSSlFileHandler _file_cb;$/;"	m	class:AsyncServer	typeref:typename:AcSSlFileHandler
_file_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _file_cb_arg;$/;"	m	class:AsyncServer	typeref:typename:void *
_fillBuffer	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^	size_t _fillBuffer (uint8_t *data, size_t len) {$/;"	f	class:PrettyAsyncJsonResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t _fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncJsonResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    virtual size_t _fillBuffer(uint8_t *buf __attribute__((unused)), size_t maxLen __attribute__/;"	f	class:AsyncAbstractResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncCallbackResponse::_fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncCallbackResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncChunkedResponse::_fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncChunkedResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncFileResponse::_fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncFileResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncProgmemResponse::_fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncProgmemResponse	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncResponseStream::_fillBuffer(uint8_t *buf, size_t maxLen){$/;"	f	class:AsyncResponseStream	typeref:typename:size_t
_fillBuffer	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncStreamResponse::_fillBuffer(uint8_t *data, size_t len){$/;"	f	class:AsyncStreamResponse	typeref:typename:size_t
_fillBufferAndProcessTemplates	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncAbstractResponse::_fillBufferAndProcessTemplates(uint8_t* data, size_t len)$/;"	f	class:AsyncAbstractResponse	typeref:typename:size_t
_filledLength	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    size_t _filledLength;$/;"	m	class:AsyncCallbackResponse	typeref:typename:size_t
_filledLength	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    size_t _filledLength;$/;"	m	class:AsyncChunkedResponse	typeref:typename:size_t
_filter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    ArRequestFilterFunction _filter;$/;"	m	class:AsyncWebHandler	typeref:typename:ArRequestFilterFunction
_filter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    ArRequestFilterFunction _filter;$/;"	m	class:AsyncWebRewrite	typeref:typename:ArRequestFilterFunction
_finished	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    bool _finished;$/;"	m	class:AsyncWebSocketControl	typeref:typename:bool	file:
_finished	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^bool AsyncWebServerResponse::_finished() const { return _state > RESPONSE_WAIT_ACK; }$/;"	f	class:AsyncWebServerResponse	typeref:typename:bool
_freq	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint32_t _freq;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:uint32_t
_freq	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  uint32_t _freq;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:uint32_t
_from	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _from;$/;"	m	class:AsyncWebRewrite	typeref:typename:String
_fs	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    fs::FS _fs;$/;"	m	class:SPIFFSEditor	typeref:typename:fs::FS
_fs	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    FS _fs;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:FS
_getFile	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^bool AsyncStaticWebHandler::_getFile(AsyncWebServerRequest *request)$/;"	f	class:AsyncStaticWebHandler	typeref:typename:bool
_getNextId	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _getNextId(){ return _cNextId++; }$/;"	f	class:AsyncWebSocket	typeref:typename:uint32_t
_gzipFirst	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    bool _gzipFirst;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:bool
_gzipStats	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    uint8_t _gzipStats;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:uint8_t
_handleDisconnect	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::_handleDisconnect(AsyncEventSourceClient * client){$/;"	f	class:AsyncEventSource	typeref:typename:void
_handleDisconnect	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::_handleDisconnect(AsyncWebSocketClient * client){$/;"	f	class:AsyncWebSocket	typeref:typename:void
_handleDisconnect	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::_handleDisconnect(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebServer	typeref:typename:void
_handleEvent	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::_handleEvent(AsyncWebSocketClient * client, AwsEventType type, void * arg, /;"	f	class:AsyncWebSocket	typeref:typename:void
_handleRxBuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::_handleRxBuffer(uint8_t *buf, size_t len) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
_handleUploadByte	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_handleUploadByte(uint8_t data, bool last){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_handler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHandler* _handler;$/;"	m	class:AsyncWebServerRequest	typeref:typename:AsyncWebHandler *
_handlers	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<AsyncWebHandler*> _handlers;$/;"	m	class:AsyncWebServer	typeref:typename:LinkedList<AsyncWebHandler * >
_handshake_done	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _handshake_done;$/;"	m	class:AsyncClient	typeref:typename:bool
_head	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    String _head;$/;"	m	class:AsyncAbstractResponse	typeref:typename:String
_headLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _headLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:size_t
_headers	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<AsyncWebHeader *> _headers;$/;"	m	class:AsyncWebServerRequest	typeref:typename:LinkedList<AsyncWebHeader * >
_headers	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<AsyncWebHeader *> _headers;$/;"	m	class:AsyncWebServerResponse	typeref:typename:LinkedList<AsyncWebHeader * >
_headers	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  headers_t _headers;$/;"	m	class:DefaultHeaders	typeref:typename:headers_t
_host	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _host;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_i2c	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  TwoWire *_i2c;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:TwoWire *
_i2c	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  TwoWire *_i2c;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:TwoWire *
_i2cAddress	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    byte _i2cAddress;                                       \/\/ Module's i2c address (default: /;"	m	class:PCA9685	typeref:typename:byte
_i2cAddress	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    byte _i2cAddress;                                       \/\/ Module's i2c address (default: /;"	m	class:PCA9685	typeref:typename:byte
_i2cSpeed	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    uint32_t _i2cSpeed;                                     \/\/ Module's i2c clock speed (defau/;"	m	class:PCA9685	typeref:typename:uint32_t
_i2cSpeed	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    uint32_t _i2cSpeed;                                     \/\/ Module's i2c clock speed (defau/;"	m	class:PCA9685	typeref:typename:uint32_t
_i2cWire	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    TwoWire* _i2cWire;                                      \/\/ Wire class instance (unowned) (/;"	m	class:PCA9685	typeref:typename:TwoWire *
_i2cWire	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    TwoWire* _i2cWire;                                      \/\/ Wire class instance (unowned) (/;"	m	class:PCA9685	typeref:typename:TwoWire *
_i2caddr	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  uint8_t _i2caddr;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
_i2caddr	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  uint8_t _i2caddr;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
_i2cdevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_I2CDevice *_i2cdevice;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_I2CDevice *
_i2cdevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_I2CDevice *_i2cdevice;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_I2CDevice *
_initISR	experiments/Servo/src/sam/Servo.cpp	/^static void _initISR(Tc *tc, uint32_t channel, uint32_t id, IRQn_Type irqn)$/;"	f	typeref:typename:void	file:
_initISR	experiments/Servo/src/samd/Servo.cpp	/^static void _initISR(Tc *tc, uint8_t channel, uint32_t id, IRQn_Type irqn, uint8_t gcmForTimer, /;"	f	typeref:typename:void	file:
_interestingHeaders	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    StringArray _interestingHeaders;$/;"	m	class:AsyncWebServerRequest	typeref:typename:StringArray
_isCSpline	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    bool _isCSpline;    \/\/ Cubic spline tracking, for _coeff length$/;"	m	class:PCA9685_ServoEval	typeref:typename:bool
_isCSpline	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    bool _isCSpline;    \/\/ Cubic spline tracking, for _coeff length$/;"	m	class:PCA9685_ServoEval	typeref:typename:bool
_isDigest	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _isDigest;$/;"	m	class:AsyncWebServerRequest	typeref:typename:bool
_isDir	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    bool _isDir;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:bool
_isFile	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _isFile;$/;"	m	class:AsyncWebParameter	typeref:typename:bool
_isForm	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _isForm;$/;"	m	class:AsyncWebParameter	typeref:typename:bool
_isMultipart	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _isMultipart;$/;"	m	class:AsyncWebServerRequest	typeref:typename:bool
_isPlainPost	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _isPlainPost;$/;"	m	class:AsyncWebServerRequest	typeref:typename:bool
_isProxyAddresser	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    bool _isProxyAddresser;                                 \/\/ Proxy addresser flag (disables /;"	m	class:PCA9685	typeref:typename:bool
_isProxyAddresser	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    bool _isProxyAddresser;                                 \/\/ Proxy addresser flag (disables /;"	m	class:PCA9685	typeref:typename:bool
_isRegex	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    bool _isRegex;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:bool
_isValid	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    bool _isValid;$/;"	m	class:AsyncJsonResponse	typeref:typename:bool
_itemBuffer	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t *_itemBuffer;$/;"	m	class:AsyncWebServerRequest	typeref:typename:uint8_t *
_itemBufferIndex	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _itemBufferIndex;$/;"	m	class:AsyncWebServerRequest	typeref:typename:size_t
_itemFilename	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _itemFilename;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_itemIsFile	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _itemIsFile;$/;"	m	class:AsyncWebServerRequest	typeref:typename:bool
_itemName	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _itemName;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_itemSize	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _itemSize;$/;"	m	class:AsyncWebServerRequest	typeref:typename:size_t
_itemStartIndex	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _itemStartIndex;$/;"	m	class:AsyncWebServerRequest	typeref:typename:size_t
_itemType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _itemType;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_itemValue	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _itemValue;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_jsonBuffer	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    DynamicJsonBuffer _jsonBuffer;$/;"	m	class:AsyncJsonResponse	typeref:typename:DynamicJsonBuffer
_keepAlivePeriod	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _keepAlivePeriod;$/;"	m	class:AsyncWebSocketClient	typeref:typename:uint32_t
_lastI2CError	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    byte _lastI2CError;                                     \/\/ Last module i2c error$/;"	m	class:PCA9685	typeref:typename:byte
_lastI2CError	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    byte _lastI2CError;                                     \/\/ Last module i2c error$/;"	m	class:PCA9685	typeref:typename:byte
_lastId	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    uint32_t _lastId;$/;"	m	class:AsyncEventSourceClient	typeref:typename:uint32_t
_lastMessageTime	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t _lastMessageTime;$/;"	m	class:AsyncWebSocketClient	typeref:typename:uint32_t
_last_modified	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _last_modified;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:String
_len	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    size_t _len;$/;"	m	class:AsyncEventSourceMessage	typeref:typename:size_t
_len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    size_t _len;$/;"	m	class:AsyncWebSocketControl	typeref:typename:size_t	file:
_len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _len;$/;"	m	class:AsyncWebSocketBasicMessage	typeref:typename:size_t
_len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _len;$/;"	m	class:AsyncWebSocketMessageBuffer	typeref:typename:size_t
_len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _len;$/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:size_t
_lock	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebLock _lock;$/;"	m	class:AsyncWebSocket	typeref:typename:AsyncWebLock
_lock	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool _lock; $/;"	m	class:AsyncWebSocketMessageBuffer	typeref:typename:bool
_lock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  SemaphoreHandle_t _lock;$/;"	m	class:AsyncWebLock	typeref:typename:SemaphoreHandle_t
_lock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  const AsyncWebLock *_lock;$/;"	m	class:AsyncWebLockGuard	typeref:typename:const AsyncWebLock *
_lockedBy	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  mutable void *_lockedBy;$/;"	m	class:AsyncWebLock	typeref:typename:void *
_mask	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    bool _mask;$/;"	m	class:AsyncWebSocketControl	typeref:typename:bool	file:
_mask	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool _mask;$/;"	m	class:AsyncWebSocketMessage	typeref:typename:bool
_maxBufferSize	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t _maxBufferSize;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:size_t
_maxBufferSize	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t _maxBufferSize;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:size_t
_maxContentLength	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  size_t _maxContentLength;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:size_t
_messageQueue	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    LinkedList<AsyncEventSourceMessage *> _messageQueue;$/;"	m	class:AsyncEventSourceClient	typeref:typename:LinkedList<AsyncEventSourceMessage * >
_messageQueue	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    LinkedList<AsyncWebSocketMessage *> _messageQueue;$/;"	m	class:AsyncWebSocketClient	typeref:typename:LinkedList<AsyncWebSocketMessage * >
_method	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  WebRequestMethodComposite _method;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:WebRequestMethodComposite
_method	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    WebRequestMethodComposite _method;$/;"	m	class:AsyncWebServerRequest	typeref:typename:WebRequestMethodComposite
_method	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    WebRequestMethodComposite _method;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:WebRequestMethodComposite
_miso	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_miso	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_mosi	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_mosi	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_multiParseState	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t _multiParseState;$/;"	m	class:AsyncWebServerRequest	typeref:typename:uint8_t
_name	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _name;$/;"	m	class:AsyncWebHeader	typeref:typename:String
_name	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _name;$/;"	m	class:AsyncWebParameter	typeref:typename:String
_noDelay	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _noDelay;$/;"	m	class:AsyncServer	typeref:typename:bool
_node	experiments/ESP_Async_WebServer/src/StringArray.h	/^      ItemType* _node;$/;"	m	class:LinkedList::Iterator	typeref:typename:ItemType *
_onAck	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_onAck(size_t len, uint32_t time){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_onAck	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onAck(size_t len, uint32_t time){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onAck	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onAck(size_t len, uint32_t time){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onBody	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    ArBodyHandlerFunction _onBody;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:ArBodyHandlerFunction
_onConnect	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::_onConnect(AsyncClient *c){$/;"	f	class:AsyncPrinter	typeref:typename:void
_onConnect	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_onConnect(AsyncClient *c){$/;"	f	class:SyncClient	typeref:typename:void
_onData	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::_onData(void *data, size_t len){$/;"	f	class:AsyncPrinter	typeref:typename:void
_onData	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_onData(void *data, size_t len){$/;"	f	class:SyncClient	typeref:typename:void
_onData	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onData(void *pbuf, size_t plen){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onData	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onData(void *buf, size_t len){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onDisconnect	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_onDisconnect(){$/;"	f	class:SyncClient	typeref:typename:void
_onDisconnect	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_onDisconnect(){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_onDisconnect	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onDisconnect(){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onDisconnect	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onDisconnect(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onDisconnectfn	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    ArDisconnectHandler _onDisconnectfn;$/;"	m	class:AsyncWebServerRequest	typeref:typename:ArDisconnectHandler
_onError	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onError(int8_t){}$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onError	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onError(int8_t error){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onPoll	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_onPoll(){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_onPoll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onPoll(){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onPoll	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onPoll(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onRemove	experiments/ESP_Async_WebServer/src/StringArray.h	/^    OnRemove _onRemove;$/;"	m	class:LinkedList	typeref:typename:OnRemove
_onRequest	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  ArJsonRequestHandlerFunction _onRequest;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:ArJsonRequestHandlerFunction
_onRequest	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    ArRequestHandlerFunction _onRequest;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:ArRequestHandlerFunction
_onTimeout	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_onTimeout(uint32_t time __attribute__((unused))){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_onTimeout	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_onTimeout(uint32_t time){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_onTimeout	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_onTimeout(uint32_t time){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_onUpload	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    ArUploadHandlerFunction _onUpload;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:ArUploadHandlerFunction
_on_close	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::_on_close(){$/;"	f	class:AsyncPrinter	typeref:typename:void
_opcode	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    uint8_t _opcode;$/;"	m	class:AsyncWebSocketControl	typeref:typename:uint8_t	file:
_opcode	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t _opcode;$/;"	m	class:AsyncWebSocketMessage	typeref:typename:uint8_t
_oscillator_freq	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  uint32_t _oscillator_freq;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:uint32_t
_oscillator_freq	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  uint32_t _oscillator_freq;$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:uint32_t
_params	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<AsyncWebParameter *> _params;$/;"	m	class:AsyncWebServerRequest	typeref:typename:LinkedList<AsyncWebParameter * >
_params	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _params;$/;"	m	class:AsyncWebRewrite	typeref:typename:String
_parseLine	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_parseLine(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_parseMultipartPostByte	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_parseMultipartPostByte(uint8_t data, bool last){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_parsePlainPostChar	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_parsePlainPostChar(uint8_t data){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_parseReqHead	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::_parseReqHead(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
_parseReqHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::_parseReqHeader(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
_parseState	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t _parseState;$/;"	m	class:AsyncWebServerRequest	typeref:typename:uint8_t
_parsedLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _parsedLength;$/;"	m	class:AsyncWebServerRequest	typeref:typename:size_t
_password	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _password;$/;"	m	class:AsyncWebHandler	typeref:typename:String
_password	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    String _password; $/;"	m	class:SPIFFSEditor	typeref:typename:String
_path	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _path;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:String
_path	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    String _path;$/;"	m	class:AsyncFileResponse	typeref:typename:String
_pathParams	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<String *> _pathParams;$/;"	m	class:AsyncWebServerRequest	typeref:typename:LinkedList<String * >
_pb_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcPacketHandler _pb_cb;$/;"	m	class:AsyncClient	typeref:typename:AcPacketHandler
_pb_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _pb_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    tcp_pcb* _pcb;$/;"	m	class:AsyncClient	typeref:typename:tcp_pcb *
_pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    tcp_pcb* _pcb;$/;"	m	class:AsyncServer	typeref:typename:tcp_pcb *
_pcb_busy	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _pcb_busy;$/;"	m	class:AsyncClient	typeref:typename:bool
_pcb_secure	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool _pcb_secure;$/;"	m	class:AsyncClient	typeref:typename:bool
_pcb_sent_at	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _pcb_sent_at;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_pending	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    struct pending_pcb * _pending;$/;"	m	class:AsyncServer	typeref:struct:pending_pcb *
_phaseBalancer	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer _phaseBalancer;                   \/\/ Phase balancer scheme$/;"	m	class:PCA9685	typeref:typename:PCA9685_PhaseBalancer
_phaseBalancer	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_PhaseBalancer _phaseBalancer;                   \/\/ Phase balancer scheme$/;"	m	class:PCA9685	typeref:typename:PCA9685_PhaseBalancer
_pinfo	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsFrameInfo _pinfo;$/;"	m	class:AsyncWebSocketClient	typeref:typename:AwsFrameInfo
_poll	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_poll(tcp_pcb* pcb){$/;"	f	class:AsyncServer	typeref:typename:err_t
_poll	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_poll(std::shared_ptr<ACErrorTracker>& errorTracker, tcp_pcb* pcb){$/;"	f	class:AsyncClient	typeref:typename:void
_poll_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcConnectHandler _poll_cb;$/;"	m	class:AsyncClient	typeref:typename:AcConnectHandler
_poll_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _poll_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_port	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint16_t _port;$/;"	m	class:AsyncServer	typeref:typename:uint16_t
_pos	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t _pos;$/;"	m	class:ChunkPrint	typeref:typename:size_t
_pstate	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t _pstate;$/;"	m	class:AsyncWebSocketClient	typeref:typename:uint8_t
_queueControl	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_queueControl(AsyncWebSocketControl *controlMessage){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_queueMessage	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_queueMessage(AsyncEventSourceMessage *dataMessage){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_queueMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_queueMessage(AsyncWebSocketMessage *dataMessage){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::_read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
_read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::_read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
_readBytes	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    uint8_t _readBytes;$/;"	m	class:PCA9685	typeref:typename:uint8_t
_readBytes	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    uint8_t _readBytes;$/;"	m	class:PCA9685	typeref:typename:uint8_t
_readDataFromCacheOrContent	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncAbstractResponse::_readDataFromCacheOrContent(uint8_t* data, const size_t len)$/;"	f	class:AsyncAbstractResponse	typeref:typename:size_t
_readLength	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    size_t _readLength;$/;"	m	class:AsyncProgmemResponse	typeref:typename:size_t
_recv	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_recv(struct tcp_pcb *pcb, struct pbuf *pb, err_t err){$/;"	f	class:AsyncServer	typeref:typename:err_t
_recv	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_recv(std::shared_ptr<ACErrorTracker>& errorTracker, tcp_pcb* pcb, pbuf* pb, e/;"	f	class:AsyncClient	typeref:typename:void
_recv_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcDataHandler _recv_cb;$/;"	m	class:AsyncClient	typeref:typename:AcDataHandler
_recv_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _recv_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_recv_pbuf_flags	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    u8_t _recv_pbuf_flags;$/;"	m	class:AsyncClient	typeref:typename:u8_t
_ref	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int *_ref;$/;"	m	class:SyncClient	typeref:typename:int *
_register	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_Register *_register;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:Adafruit_BusIO_Register *
_register	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_Register *_register;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:Adafruit_BusIO_Register *
_release	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::_release(){$/;"	f	class:SyncClient	typeref:typename:void
_removeNotInterestingHeaders	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::_removeNotInterestingHeaders(){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
_reqconntype	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    RequestedConnectionType _reqconntype;$/;"	m	class:AsyncWebServerRequest	typeref:typename:RequestedConnectionType
_respond	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceResponse::_respond(AsyncWebServerRequest *request){$/;"	f	class:AsyncEventSourceResponse	typeref:typename:void
_respond	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketResponse::_respond(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebSocketResponse	typeref:typename:void
_respond	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncAbstractResponse::_respond(AsyncWebServerRequest *request){$/;"	f	class:AsyncAbstractResponse	typeref:typename:void
_respond	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncBasicResponse::_respond(AsyncWebServerRequest *request){$/;"	f	class:AsyncBasicResponse	typeref:typename:void
_respond	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncWebServerResponse::_respond(AsyncWebServerRequest *request){ _state = RESPONSE_END; re/;"	f	class:AsyncWebServerResponse	typeref:typename:void
_response	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebServerResponse* _response;$/;"	m	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
_responseCodeToString	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^const char* AsyncWebServerResponse::_responseCodeToString(int code) {$/;"	f	class:AsyncWebServerResponse	typeref:typename:const char *
_rewriteRequest	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::_rewriteRequest(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebServer	typeref:typename:void
_rewrites	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    LinkedList<AsyncWebRewrite*> _rewrites;$/;"	m	class:AsyncWebServer	typeref:typename:LinkedList<AsyncWebRewrite * >
_root	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    JsonVariant _root;$/;"	m	class:AsyncJsonResponse	typeref:typename:JsonVariant
_root	experiments/ESP_Async_WebServer/src/StringArray.h	/^    ItemType* _root;$/;"	m	class:LinkedList	typeref:typename:ItemType *
_runQueue	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::_runQueue(){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
_runQueue	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::_runQueue(){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
_rxData	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::_rxData(uint8_t *buf, size_t len) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
_rxReadBytesPtr	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        uint8_t * _rxReadBytesPtr;$/;"	m	class:AsyncTCPbuffer	typeref:typename:uint8_t *
_rxReadStringPtr	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        String * _rxReadStringPtr;$/;"	m	class:AsyncTCPbuffer	typeref:typename:String *
_rxSize	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        size_t _rxSize;$/;"	m	class:AsyncTCPbuffer	typeref:typename:size_t
_rxTerminator	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^        char _rxTerminator;$/;"	m	class:AsyncTCPbuffer	typeref:typename:char
_rx_ack_len	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _rx_ack_len;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_rx_buffer	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    cbuf *_rx_buffer;$/;"	m	class:SyncClient	typeref:typename:cbuf *
_rx_last_packet	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _rx_last_packet;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_rx_since_timeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _rx_since_timeout;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_s_accept	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_s_accept(void *arg, tcp_pcb* pcb, err_t err){$/;"	f	class:AsyncServer	typeref:typename:err_t
_s_cert	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^int AsyncServer::_s_cert(void *arg, const char *filename, uint8_t **buf){$/;"	f	class:AsyncServer	typeref:typename:int
_s_connected	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncClient::_s_connected(void* arg, void* tpcb, err_t err){$/;"	f	class:AsyncClient	typeref:typename:err_t
_s_data	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_s_data(void *arg, struct tcp_pcb *tcp, uint8_t * data, size_t len){$/;"	f	class:AsyncClient	typeref:typename:void
_s_dns_found	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_s_dns_found(const char *name, ip_addr_t *ipaddr, void *arg){$/;"	f	class:AsyncClient	typeref:typename:void
_s_error	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_s_error(void *arg, err_t err) {$/;"	f	class:AsyncClient	typeref:typename:void
_s_handshake	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_s_handshake(void *arg, struct tcp_pcb *tcp, SSL *ssl){$/;"	f	class:AsyncClient	typeref:typename:void
_s_poll	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncClient::_s_poll(void *arg, struct tcp_pcb *tpcb) {$/;"	f	class:AsyncClient	typeref:typename:err_t
_s_poll	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_s_poll(void *arg, struct tcp_pcb *pcb){$/;"	f	class:AsyncServer	typeref:typename:err_t
_s_recv	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncClient::_s_recv(void *arg, struct tcp_pcb *tpcb, struct pbuf *pb, err_t err) {$/;"	f	class:AsyncClient	typeref:typename:err_t
_s_recv	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncServer::_s_recv(void *arg, struct tcp_pcb *pcb, struct pbuf *pb, err_t err){$/;"	f	class:AsyncServer	typeref:typename:err_t
_s_sent	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t AsyncClient::_s_sent(void *arg, struct tcp_pcb *tpcb, uint16_t len) {$/;"	f	class:AsyncClient	typeref:typename:err_t
_s_ssl_error	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_s_ssl_error(void *arg, struct tcp_pcb *tcp, int8_t err){$/;"	f	class:AsyncClient	typeref:typename:void
_sck	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_sck	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  int8_t _cs, _sck, _mosi, _miso;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:int8_t
_sendBuffer	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^size_t AsyncPrinter::_sendBuffer(){$/;"	f	class:AsyncPrinter	typeref:typename:size_t
_sendBuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::_sendBuffer() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
_sendBuffer	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^size_t SyncClient::_sendBuffer(){$/;"	f	class:SyncClient	typeref:typename:size_t
_sendContentLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool _sendContentLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:bool
_sent	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_sent(std::shared_ptr<ACErrorTracker>& errorTracker, tcp_pcb* pcb, uint16_t le/;"	f	class:AsyncClient	typeref:typename:void
_sent	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    size_t _sent;$/;"	m	class:AsyncEventSourceMessage	typeref:typename:size_t
_sent	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _sent;$/;"	m	class:AsyncWebSocketBasicMessage	typeref:typename:size_t
_sent	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t _sent;$/;"	m	class:AsyncWebSocketMultiMessage	typeref:typename:size_t
_sentLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _sentLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:size_t
_sent_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcAckHandler _sent_cb;$/;"	m	class:AsyncClient	typeref:typename:AcAckHandler
_sent_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _sent_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_server	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    AsyncEventSource *_server;$/;"	m	class:AsyncEventSourceClient	typeref:typename:AsyncEventSource *
_server	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    AsyncEventSource *_server;$/;"	m	class:AsyncEventSourceResponse	typeref:typename:AsyncEventSource *
_server	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocket *_server;$/;"	m	class:AsyncWebSocketClient	typeref:typename:AsyncWebSocket *
_server	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocket *_server;$/;"	m	class:AsyncWebSocketResponse	typeref:typename:AsyncWebSocket *
_server	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncServer _server;$/;"	m	class:AsyncWebServer	typeref:typename:AsyncServer
_server	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebServer* _server;$/;"	m	class:AsyncWebServerRequest	typeref:typename:AsyncWebServer *
_setContentType	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncFileResponse::_setContentType(const String& path){$/;"	f	class:AsyncFileResponse	typeref:typename:void
_shift	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint8_t
_shift	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _bits, _shift;$/;"	m	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint8_t
_size	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _size;$/;"	m	class:AsyncWebParameter	typeref:typename:size_t
_sourceValid	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    bool _sourceValid() const { return true; }$/;"	f	class:AsyncEventSourceResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    bool _sourceValid() const { return _isValid; }$/;"	f	class:AsyncJsonResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool _sourceValid() const { return true; }$/;"	f	class:AsyncWebSocketResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return !!(_content); }$/;"	f	class:AsyncCallbackResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return !!(_content); }$/;"	f	class:AsyncChunkedResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return !!(_content); }$/;"	f	class:AsyncFileResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return !!(_content); }$/;"	f	class:AsyncStreamResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return (_state < RESPONSE_END); }$/;"	f	class:AsyncResponseStream	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return false; }$/;"	f	class:AsyncAbstractResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return true; }$/;"	f	class:AsyncBasicResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponseImpl.h	/^    bool _sourceValid() const { return true; }$/;"	f	class:AsyncProgmemResponse	typeref:typename:bool
_sourceValid	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^bool AsyncWebServerResponse::_sourceValid() const { return false; }$/;"	f	class:AsyncWebServerResponse	typeref:typename:bool
_spi	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPIClass *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:SPIClass *
_spi	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPIClass *_spi = nullptr;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:SPIClass *
_spiSetting	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPISettings *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:SPISettings *
_spiSetting	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  SPISettings *_spiSetting = nullptr;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:SPISettings *
_spidevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_SPIDevice *_spidevice;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_SPIDevice *
_spidevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_SPIDevice *_spidevice;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_SPIDevice *
_spiregtype	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_SPIRegType _spiregtype;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_BusIO_SPIRegType
_spiregtype	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  Adafruit_BusIO_SPIRegType _spiregtype;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:Adafruit_BusIO_SPIRegType
_ssl_ctx	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    SSL_CTX * _ssl_ctx;$/;"	m	class:AsyncServer	typeref:typename:SSL_CTX *
_ssl_error	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::_ssl_error(int8_t err){$/;"	f	class:AsyncClient	typeref:typename:void
_startTime	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    uint32_t _startTime;$/;"	m	class:SPIFFSEditor	typeref:typename:uint32_t
_started	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^bool AsyncWebServerResponse::_started() const { return _state > RESPONSE_SETUP; }$/;"	f	class:AsyncWebServerResponse	typeref:typename:bool
_state	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    WebResponseState _state;$/;"	m	class:AsyncWebServerResponse	typeref:typename:WebResponseState
_status	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsClientStatus _status;$/;"	m	class:AsyncWebSocketClient	typeref:typename:AwsClientStatus
_status	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsMessageStatus _status;$/;"	m	class:AsyncWebSocketMessage	typeref:typename:AwsMessageStatus
_tcp_ssl_file_arg	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^static void * _tcp_ssl_file_arg = NULL;$/;"	v	typeref:typename:void *	file:
_tcp_ssl_file_cb	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^static tcp_ssl_file_cb_t _tcp_ssl_file_cb = NULL;$/;"	v	typeref:typename:tcp_ssl_file_cb_t	file:
_tcp_ssl_has_client	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^static uint8_t _tcp_ssl_has_client = 0;$/;"	v	typeref:typename:uint8_t	file:
_temp	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _temp;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_tempFile	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    File _tempFile;$/;"	m	class:AsyncWebServerRequest	typeref:typename:File
_tempObject	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void *_tempObject;$/;"	m	class:AsyncWebSocketClient	typeref:typename:void *
_tempObject	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    void *_tempObject;$/;"	m	class:AsyncWebServerRequest	typeref:typename:void *
_timeout_cb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AcTimeoutHandler _timeout_cb;$/;"	m	class:AsyncClient	typeref:typename:AcTimeoutHandler
_timeout_cb_arg	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void* _timeout_cb_arg;$/;"	m	class:AsyncClient	typeref:typename:void *
_timer	experiments/Servo/src/megaavr/ServoTimers.h	/^static volatile TCB_t* _timer =$/;"	v	typeref:typename:volatile TCB_t *
_timer1	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0203
_timer1	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0503
_timer1	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0303
_timer1	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0403
_timer1	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0103
_timer1	experiments/Servo/src/nrf52/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anond775ead20103
_timer1	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_timer1	experiments/Servo/src/samd/ServoTimers.h	/^    _timer1,$/;"	e	enum:__anon50e73c4a0103
_timer2	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_timer2	experiments/Servo/src/samd/ServoTimers.h	/^    _timer2,$/;"	e	enum:__anon50e73c4a0103
_timer3	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0303
_timer3	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0403
_timer3	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0103
_timer3	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_timer4	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0103
_timer4	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_timer5	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	e	enum:__anonf594814e0103
_timer5	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	e	enum:__anon182525260103
_toUrl	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _toUrl;$/;"	m	class:AsyncWebRewrite	typeref:typename:String
_to_skip	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t _to_skip;$/;"	m	class:ChunkPrint	typeref:typename:size_t
_to_write	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t _to_write;$/;"	m	class:ChunkPrint	typeref:typename:size_t
_tx_acked_len	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _tx_acked_len;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_tx_buffer	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    cbuf *_tx_buffer;$/;"	m	class:AsyncPrinter	typeref:typename:cbuf *
_tx_buffer	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    cbuf *_tx_buffer;$/;"	m	class:SyncClient	typeref:typename:cbuf *
_tx_buffer_size	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    size_t _tx_buffer_size;$/;"	m	class:AsyncPrinter	typeref:typename:size_t
_tx_buffer_size	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    size_t _tx_buffer_size;$/;"	m	class:SyncClient	typeref:typename:size_t
_tx_unacked_len	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _tx_unacked_len;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_tx_unsent_len	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    uint32_t _tx_unsent_len;$/;"	m	class:AsyncClient	typeref:typename:uint32_t
_updateMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode _updateMode;                  \/\/ Channel update mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_ChannelUpdateMode
_updateMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.h	/^    PCA9685_ChannelUpdateMode _updateMode;                  \/\/ Channel update mode$/;"	m	class:PCA9685	typeref:typename:PCA9685_ChannelUpdateMode
_uri	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  const String _uri;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:const String
_uri	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _uri;$/;"	m	class:AsyncCallbackWebHandler	typeref:typename:String
_uri	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    String _uri;$/;"	m	class:AsyncStaticWebHandler	typeref:typename:String
_url	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    String _url;$/;"	m	class:AsyncEventSource	typeref:typename:String
_url	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    String _url;$/;"	m	class:AsyncWebSocket	typeref:typename:String
_url	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _url;$/;"	m	class:AsyncWebServerRequest	typeref:typename:String
_useTimer1	experiments/Servo/src/avr/ServoTimers.h	/^#define _useTimer1$/;"	d
_useTimer1	experiments/Servo/src/sam/ServoTimers.h	/^#define _useTimer1$/;"	d
_useTimer1	experiments/Servo/src/samd/ServoTimers.h	/^#define _useTimer1$/;"	d
_useTimer2	experiments/Servo/src/sam/ServoTimers.h	/^#define _useTimer2$/;"	d
_useTimer3	experiments/Servo/src/avr/ServoTimers.h	/^#define _useTimer3$/;"	d
_useTimer3	experiments/Servo/src/sam/ServoTimers.h	/^#define _useTimer3$/;"	d
_useTimer4	experiments/Servo/src/avr/ServoTimers.h	/^#define _useTimer4$/;"	d
_useTimer4	experiments/Servo/src/sam/ServoTimers.h	/^#define _useTimer4$/;"	d
_useTimer5	experiments/Servo/src/avr/ServoTimers.h	/^#define _useTimer5$/;"	d
_useTimer5	experiments/Servo/src/sam/ServoTimers.h	/^#define _useTimer5$/;"	d
_username	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _username;$/;"	m	class:AsyncWebHandler	typeref:typename:String
_username	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    String _username;$/;"	m	class:SPIFFSEditor	typeref:typename:String
_value	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _value;$/;"	m	class:AsyncWebHeader	typeref:typename:String
_value	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String _value;$/;"	m	class:AsyncWebParameter	typeref:typename:String
_value	experiments/ESP_Async_WebServer/src/StringArray.h	/^    T _value;$/;"	m	class:LinkedListNode	typeref:typename:T
_version	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t _version;$/;"	m	class:AsyncWebServerRequest	typeref:typename:uint8_t
_width	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_width	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.h	/^  uint8_t _width, _addrwidth, _byteorder;$/;"	m	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
_wire	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  TwoWire *_wire;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:TwoWire *
_wire	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  TwoWire *_wire;$/;"	m	class:Adafruit_I2CDevice	typeref:typename:TwoWire *
_writtenLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t _writtenLength;$/;"	m	class:AsyncWebServerResponse	typeref:typename:size_t
`attach()`	experiments/Servo/docs/api.md	/^### `attach()`$/;"	S	section:Servo library""Methods
`attached()`	experiments/Servo/docs/api.md	/^### `attached()`$/;"	S	section:Servo library""Methods
`detach()`	experiments/Servo/docs/api.md	/^### `detach()`$/;"	S	section:Servo library""Methods
`read()`	experiments/Servo/docs/api.md	/^### `read()`$/;"	S	section:Servo library""Methods
`write()`	experiments/Servo/docs/api.md	/^### `write()`$/;"	S	section:Servo library""Methods
`writeMicroseconds()`	experiments/Servo/docs/api.md	/^### `writeMicroseconds()`$/;"	S	section:Servo library""Methods
abort	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::abort(){$/;"	f	class:AsyncClient	typeref:typename:void
accel_data	Hexapod-markwtech/gyro.py	/^    accel_data = mpu.get_accel_data()$/;"	v
ace	experiments/ESP_Async_WebServer/src/edit.htm	/^<script id='ace' src="https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/ace\/1.2.6\/ace.js" type="text/;"	I
ack	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^size_t AsyncClient::ack(size_t len){$/;"	f	class:AsyncClient	typeref:typename:size_t
ack	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^size_t AsyncEventSourceMessage::ack(size_t len, uint32_t time) {$/;"	f	class:AsyncEventSourceMessage	typeref:typename:size_t
ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ void AsyncWebSocketBasicMessage::ack(size_t len, uint32_t time)  {$/;"	f	class:AsyncWebSocketBasicMessage	typeref:typename:void
ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ void AsyncWebSocketMultiMessage::ack(size_t len, uint32_t time)  {$/;"	f	class:AsyncWebSocketMultiMessage	typeref:typename:void
ack	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual void ack(size_t len __attribute__((unused)), uint32_t time __attribute__((unused))){/;"	f	class:AsyncWebSocketMessage	typeref:typename:void
ackLater	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void ackLater(){ _ack_pcb = false; } \/\/will not ack the current packet. Call from onData$/;"	f	class:AsyncClient	typeref:typename:void
ackPacket	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::ackPacket(struct pbuf * pb){$/;"	f	class:AsyncClient	typeref:typename:void
add	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^size_t AsyncClient::add(const char* data, size_t size, uint8_t apiflags) {$/;"	f	class:AsyncClient	typeref:typename:size_t
add	experiments/ESP_Async_WebServer/src/StringArray.h	/^    void add(const T& t){$/;"	f	class:LinkedList	typeref:typename:void
addExclude	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^static bool addExclude(const char *item){$/;"	f	typeref:typename:bool	file:
addHandler	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncWebHandler& AsyncWebServer::addHandler(AsyncWebHandler* handler){$/;"	f	class:AsyncWebServer	typeref:typename:AsyncWebHandler &
addHeader	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  void addHeader(const String& name, const String& value){$/;"	f	class:DefaultHeaders	typeref:typename:void
addHeader	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncWebServerResponse::addHeader(const String& name, const String& value){$/;"	f	class:AsyncWebServerResponse	typeref:typename:void
addInterestingHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::addInterestingHeader(const String& name){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
addRewrite	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncWebRewrite& AsyncWebServer::addRewrite(AsyncWebRewrite* rewrite){$/;"	f	class:AsyncWebServer	typeref:typename:AsyncWebRewrite &
add_point	Hexapod-markwtech/src/plot.py	/^    def add_point(self, point):$/;"	m	class:Plotter
address	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^uint8_t Adafruit_I2CDevice::address(void) { return _addr; }$/;"	f	class:Adafruit_I2CDevice	typeref:typename:uint8_t
address	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^uint8_t Adafruit_I2CDevice::address(void) { return _addr; }$/;"	f	class:Adafruit_I2CDevice	typeref:typename:uint8_t
angle	Kame-Quadpod/natural-movement.py	/^angle = starting_angle$/;"	v
angle_incr	Hexapod-markwtech/src/brute-force-fk-offset.py	/^angle_incr = 5  # or 2 for increased granularity$/;"	v
angle_incr	Hexapod-markwtech/src/brute-force-ik-offset.py	/^angle_incr = 0.1  # Decrease for better precision (10, 5, 2, 1, 0.5, 0.1)$/;"	v
app	Hexapod-markwtech/app-capture-photo-working.py	/^app = Flask(__name__)$/;"	v
app	Hexapod-markwtech/app-cv2-original.py	/^app = Flask(__name__)$/;"	v
app	Hexapod-markwtech/app-cv2.py	/^app = Flask(__name__) $/;"	v
app	Hexapod-markwtech/src/app.py	/^app = Flask(__name__)$/;"	v
architectures	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^architectures=*$/;"	k
architectures	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^architectures=*$/;"	k
architectures	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^architectures=*$/;"	k
architectures	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^architectures=*$/;"	k
architectures	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^architectures=*$/;"	k
architectures	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^architectures=*$/;"	k
architectures	experiments/ESP_AsyncTCP/library.properties	/^architectures=*$/;"	k
architectures	experiments/ESP_Async_WebServer/library.properties	/^architectures=*$/;"	k
architectures	experiments/Servo/library.properties	/^architectures=avr,megaavr,sam,samd,nrf52,stm32f4,mbed,mbed_nano,mbed_portenta,mbed_rp2040,renesa/;"	k
arg	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  void * arg;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:void *	file:
arg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::arg(const String& name) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
arg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::arg(const __FlashStringHelper * data) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
arg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::arg(size_t i) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
argName	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::argName(size_t i) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
args	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t args() const { return params(); }     \/\/ get arguments count$/;"	f	class:AsyncWebServerRequest	typeref:typename:size_t
atbRxMode_t	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.h	/^} atbRxMode_t;$/;"	t	typeref:enum:__anona68996970103
attach	experiments/Servo/src/avr/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/avr/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/mbed/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/mbed/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/megaavr/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/megaavr/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/nrf52/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/nrf52/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/renesas/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/renesas/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/sam/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/sam/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/samd/Servo.cpp	/^uint8_t Servo::attach(int pin)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/samd/Servo.cpp	/^uint8_t Servo::attach(int pin, int min, int max)$/;"	f	class:Servo	typeref:typename:uint8_t
attach	experiments/Servo/src/stm32f4/Servo.cpp	/^bool Servo::attach(uint8 pin, uint16 minPW, uint16 maxPW, int16 minAngle, int16 maxAngle)$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/avr/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/mbed/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/megaavr/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/nrf52/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/renesas/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/sam/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/samd/Servo.cpp	/^bool Servo::attached()$/;"	f	class:Servo	typeref:typename:bool
attached	experiments/Servo/src/stm32f4/ServoTimers.h	/^    bool attached() const { return this->pin != NOT_ATTACHED; }$/;"	f	class:Servo	typeref:typename:bool
attachedPin	experiments/Servo/src/stm32f4/ServoTimers.h	/^    int attachedPin() const { return this->pin; }$/;"	f	class:Servo	typeref:typename:int
authenticate	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::authenticate(const char * hash){$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
authenticate	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::authenticate(const char * username, const char * password, const cha/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
author	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^author=Adafruit$/;"	k
author	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^author=Adafruit$/;"	k
author	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^author=NachtRaveVL <nachtravevl@gmail.com>, Vitska, Kasper Skårhøj <kasperskaarhoj@gmail.com>$/;"	k
author	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^author=Adafruit$/;"	k
author	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^author=Adafruit$/;"	k
author	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^author=NachtRaveVL <nachtravevl@gmail.com>, Vitska, Kasper Skårhøj <kasperskaarhoj@gmail.com>$/;"	k
author	experiments/ESP_AsyncTCP/library.properties	/^author=Me-No-Dev$/;"	k
author	experiments/ESP_Async_WebServer/library.properties	/^author=Me-No-Dev$/;"	k
author	experiments/Servo/library.properties	/^author=Michael Margolis, Arduino$/;"	k
authors	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "authors": [$/;"	a
authors	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "authors": [$/;"	a
authors	experiments/ESP_AsyncTCP/library.json	/^  "authors":$/;"	o
authors	experiments/ESP_Async_WebServer/library.json	/^  "authors":$/;"	o
available	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::available(){$/;"	f	class:SyncClient	typeref:typename:int
availableForWrite	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^bool AsyncWebSocket::availableForWrite(uint32_t id){$/;"	f	class:AsyncWebSocket	typeref:typename:bool
availableForWriteAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^bool AsyncWebSocket::availableForWriteAll(){$/;"	f	class:AsyncWebSocket	typeref:typename:bool
avgPacketsWaiting	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^size_t AsyncEventSource::avgPacketsWaiting() const {$/;"	f	class:AsyncEventSource	typeref:typename:size_t
ax_get_file	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int ax_get_file(const char *filename, uint8_t **buf) {$/;"	f	typeref:typename:int
ax_port_read	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int ax_port_read(int fd, uint8_t *data, int len) {$/;"	f	typeref:typename:int
ax_port_write	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int ax_port_write(int fd, uint8_t *data, uint16_t len) {$/;"	f	typeref:typename:int
ax_wdt_feed	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void ax_wdt_feed() {}$/;"	f	typeref:typename:void
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/BatchingExample",$/;"	s	object:examples.1
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/ModuleInfo",$/;"	s	object:examples.5
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/MultiDeviceProxyExample",$/;"	s	object:examples.2
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/ServoEvaluatorExample",$/;"	s	object:examples.3
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/SimpleExample",$/;"	s	object:examples.0
base	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/SoftwareI2CExample",$/;"	s	object:examples.4
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/BatchingExample",$/;"	s	object:examples.1
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/ModuleInfo",$/;"	s	object:examples.5
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/MultiDeviceProxyExample",$/;"	s	object:examples.2
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/ServoEvaluatorExample",$/;"	s	object:examples.3
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/SimpleExample",$/;"	s	object:examples.0
base	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "base": "examples\/SoftwareI2CExample",$/;"	s	object:examples.4
base_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^                base_angle = round(base_angle, 1)$/;"	v
base_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            base_angle = round(base_angle, 3)$/;"	v
base_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            base_angle, shoulder_angle, elbow_angle = inverse_kinematics(base_offset, shoulder_o/;"	v
base_offset	Hexapod-markwtech/src/brute-force-ik-offset.py	/^base_offset = 10$/;"	v
begin	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::begin(bool addr_detect) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
begin	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::begin(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
begin	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^bool Adafruit_PWMServoDriver::begin(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:bool
begin	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::begin(bool addr_detect) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
begin	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::begin(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
begin	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^bool Adafruit_PWMServoDriver::begin(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:bool
begin	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::begin(){$/;"	f	class:AsyncServer	typeref:typename:void
begin	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  ConstIterator begin() const { return _headers.begin(); }$/;"	f	class:DefaultHeaders	typeref:typename:ConstIterator
begin	experiments/ESP_Async_WebServer/src/StringArray.h	/^    ConstIterator begin() const { return ConstIterator(_root); }$/;"	f	class:LinkedList	typeref:typename:ConstIterator
begin	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::begin(){$/;"	f	class:AsyncWebServer	typeref:typename:void
beginChunkedResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginChunkedResponse(const String& contentType, /;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse(FS &fs, const String& path, const /;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse(File content, const String& path, /;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse(Stream &stream, const String& cont/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse(const String& contentType, size_t /;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponse	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse(int code, const String& contentTyp/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginResponseStream	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncResponseStream * AsyncWebServerRequest::beginResponseStream(const String& contentType, size/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncResponseStream *
beginResponse_P	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerResponse * AsyncWebServerRequest::beginResponse_P(int code, const String& contentT/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebServerResponse *
beginSecure	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::beginSecure(const char *cert, const char *key, const char *password){$/;"	f	class:AsyncServer	typeref:typename:void
beginSecure	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::beginSecure(const char *cert, const char *key, const char *password){$/;"	f	class:AsyncWebServer	typeref:typename:void
beginTransaction	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransaction(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
beginTransaction	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransaction(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
beginTransactionWithAssertingCS	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransactionWithAssertingCS() {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
beginTransactionWithAssertingCS	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::beginTransactionWithAssertingCS() {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
betweenFrames	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual bool betweenFrames() const override { return _acked == _ack; }$/;"	f	class:AsyncWebSocketBasicMessage	typeref:typename:bool
betweenFrames	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual bool betweenFrames() const override { return _acked == _ack; }$/;"	f	class:AsyncWebSocketMultiMessage	typeref:typename:bool
betweenFrames	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual bool betweenFrames() const { return false; }$/;"	f	class:AsyncWebSocketMessage	typeref:typename:bool
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, const String &message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, const __FlashStringHelper *message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, const char * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binary(uint32_t id, uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(AsyncWebSocketMessageBuffer * buffer)$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(char * message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(const String &message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(const __FlashStringHelper *data, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(const char * message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(const char * message, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binary	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::binary(uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(AsyncWebSocketMessageBuffer * buffer)$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(const String &message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(const __FlashStringHelper *message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(const char * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
binaryAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::binaryAll(uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
body	Hexapod-markwtech/src/static/style.css	/^body{$/;"	s
body	experiments/ESP_Async_WebServer/examples/ESP_AsyncFSBrowser/data/index.htm	/^  <body id="body" onload="onBodyLoad()">$/;"	I
build	experiments/ESP_AsyncTCP/library.json	/^  "build": {$/;"	o
build_pio_sketch	experiments/ESP_AsyncTCP/.github/scripts/install-platformio.sh	/^function build_pio_sketch(){ # build_pio_sketch <board> <path-to-ino>$/;"	f
build_pio_sketch	experiments/ESP_Async_WebServer/.github/scripts/install-platformio.sh	/^function build_pio_sketch(){ # build_pio_sketch <board> <path-to-ino> <build-flags>$/;"	f
build_pio_sketches	experiments/ESP_AsyncTCP/.github/scripts/install-platformio.sh	/^function build_pio_sketches() # build_pio_sketches <board> <examples-path> <chunk> <total-chunks/;"	f
build_pio_sketches	experiments/ESP_Async_WebServer/.github/scripts/install-platformio.sh	/^function build_pio_sketches() # build_pio_sketches <board> <examples-path> <chunk> <total-chunks/;"	f
build_sketch	experiments/ESP_AsyncTCP/.github/scripts/install-arduino-ide.sh	/^function build_sketch(){ # build_sketch <fqbn> <path-to-ino> [extra-options]$/;"	f
build_sketch	experiments/ESP_Async_WebServer/.github/scripts/install-arduino-ide.sh	/^function build_sketch(){ # build_sketch <fqbn> <path-to-ino> <build-flags> [extra-options]$/;"	f
build_sketches	experiments/ESP_AsyncTCP/.github/scripts/install-arduino-ide.sh	/^function build_sketches() # build_sketches <fqbn> <examples-path> <chunk> <total-chunks> [extra-/;"	f
build_sketches	experiments/ESP_Async_WebServer/.github/scripts/install-arduino-ide.sh	/^function build_sketches() # build_sketches <fqbn> <examples-path> <chunk> <total-chunks> [extra-/;"	f
calc_2D_fk	Hexapod-markwtech/src/kinematics.py	/^    def calc_2D_fk(self, P0, coxa_len, femur_len, a0, a1):$/;"	m	class:Kinematics
calc_2D_ik	Hexapod-markwtech/src/kinematics.py	/^    def calc_2D_ik(self, femur_len, tibia_len, tx, ty):$/;"	m	class:Kinematics
call	experiments/Servo/src/mbed/Servo.cpp	/^    void call() {$/;"	f	class:ServoImpl	typeref:typename:void	file:
canDelete	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool canDelete() { return (!_count && !_lock); } $/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^bool AsyncEventSource::canHandle(AsyncWebServerRequest *request){$/;"	f	class:AsyncEventSource	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  virtual bool canHandle(AsyncWebServerRequest *request) override final{$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^bool AsyncWebSocket::canHandle(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebSocket	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual bool canHandle(AsyncWebServerRequest *request __attribute__((unused))){$/;"	f	class:AsyncWebHandler	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^bool SPIFFSEditor::canHandle(AsyncWebServerRequest *request){$/;"	f	class:SPIFFSEditor	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    virtual bool canHandle(AsyncWebServerRequest *request) override final{$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:bool
canHandle	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^bool AsyncStaticWebHandler::canHandle(AsyncWebServerRequest *request){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:bool
canSend	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::canSend(){$/;"	f	class:AsyncClient	typeref:typename:bool
canSend	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool canSend() { return _messageQueue.length() < WS_MAX_QUEUED_MESSAGES; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:bool
category	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^category=Signal Input\/Output$/;"	k
category	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^category=Device Control$/;"	k
category	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^category=Device Control$/;"	k
category	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^category=Signal Input\/Output$/;"	k
category	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^category=Device Control$/;"	k
category	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^category=Device Control$/;"	k
category	experiments/ESP_AsyncTCP/library.properties	/^category=Other$/;"	k
category	experiments/ESP_Async_WebServer/library.properties	/^category=Other$/;"	k
category	experiments/Servo/library.properties	/^category=Device Control$/;"	k
checkBasicAuthentication	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^bool checkBasicAuthentication(const char * hash, const char * username, const char * password){$/;"	f	typeref:typename:bool
checkDigestAuthentication	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^bool checkDigestAuthentication(const char * header, const char * method, const char * username, /;"	f	typeref:typename:bool
checkForErrors	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::checkForErrors() {$/;"	f	class:PCA9685	typeref:typename:void
checkForErrors	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::checkForErrors() {$/;"	f	class:PCA9685	typeref:typename:void
cleanupClients	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::cleanupClients(uint16_t maxClients)$/;"	f	class:AsyncWebSocket	typeref:typename:void
clearClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void clearClient(void){ if (_client) _client = NULL;}$/;"	f	class:ACErrorTracker	typeref:typename:void
clearTcpCallbacks	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^inline void clearTcpCallbacks(tcp_pcb* pcb){$/;"	f	typeref:typename:void
client	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    AsyncClient* client(){ return _client; }$/;"	f	class:AsyncEventSourceClient	typeref:typename:AsyncClient *
client	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketClient * AsyncWebSocket::client(uint32_t id){$/;"	f	class:AsyncWebSocket	typeref:typename:AsyncWebSocketClient *
client	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncClient* client(){ return _client; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:AsyncClient *
client	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncClient* client(){ return _client; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncClient *
clkPinMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
clkPinMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
clkPort	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
clkPort	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
clock	pygame_plot.py	/^clock = pygame.time.Clock()$/;"	v
clock	pygame_plot2.py	/^clock = pygame.time.Clock()$/;"	v
close	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::close(){$/;"	f	class:AsyncPrinter	typeref:typename:void
close	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::close(bool now){$/;"	f	class:AsyncClient	typeref:typename:void
close	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::close() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
close	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::close(){$/;"	f	class:AsyncEventSource	typeref:typename:void
close	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::close(){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
close	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::close(uint32_t id, uint16_t code, const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
close	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::close(uint16_t code, const char * message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
closeAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::closeAll(uint16_t code, const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
closest_results_cnt	Hexapod-markwtech/src/brute-force-fk-offset.py	/^closest_results_cnt = 0$/;"	v
closest_results_cnt	Hexapod-markwtech/src/brute-force-ik-offset.py	/^closest_results_cnt = 0$/;"	v
command	Hexapod-markwtech/src/hexapod.py	/^    def command(self, command):$/;"	m	class:Hexapod
compare_results	Hexapod-markwtech/src/tests.py	/^    def compare_results(self, input, expected_coords, actual_coords):$/;"	m	class:Tests
config	Hexapod-markwtech/Makefile	/^config:$/;"	t
connect	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^int AsyncPrinter::connect(IPAddress ip, uint16_t port){$/;"	f	class:AsyncPrinter	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^int AsyncPrinter::connect(const char *host, uint16_t port){$/;"	f	class:AsyncPrinter	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::connect(IPAddress ip, uint16_t port, bool secure){$/;"	f	class:AsyncClient	typeref:typename:bool
connect	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::connect(const char* host, uint16_t port, bool secure){$/;"	f	class:AsyncClient	typeref:typename:bool
connect	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::connect(const char *host, uint16_t port, bool secure){$/;"	f	class:SyncClient	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int connect(CONST IPAddress& ip, uint16_t port){$/;"	f	class:SyncClient	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int connect(CONST IPAddress& ip, uint16_t port, bool secure){$/;"	f	class:SyncClient	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int connect(IPAddress ip, uint16_t port){$/;"	f	class:SyncClient	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int connect(IPAddress ip, uint16_t port, bool secure){$/;"	f	class:SyncClient	typeref:typename:int
connect	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    int connect(const char *host, uint16_t port){$/;"	f	class:SyncClient	typeref:typename:int
connected	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^bool AsyncPrinter::connected(){$/;"	f	class:AsyncPrinter	typeref:typename:bool
connected	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::connected(){$/;"	f	class:AsyncClient	typeref:typename:bool
connected	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^bool AsyncTCPbuffer::connected() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:bool
connected	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^uint8_t SyncClient::connected(){$/;"	f	class:SyncClient	typeref:typename:uint8_t
connected	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    bool connected() const { return (_client != NULL) && _client->connected(); }$/;"	f	class:AsyncEventSourceClient	typeref:typename:bool
connecting	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::connecting(){$/;"	f	class:AsyncClient	typeref:typename:bool
containsIgnoreCase	experiments/ESP_Async_WebServer/src/StringArray.h	/^  bool containsIgnoreCase(const String& str){$/;"	f	class:StringArray	typeref:typename:bool
contentLength	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t contentLength() const { return _contentLength; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:size_t
contentType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& contentType() const { return _contentType; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
count	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^size_t AsyncEventSource::count() const {$/;"	f	class:AsyncEventSource	typeref:typename:size_t
count	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocket::count() const {$/;"	f	class:AsyncWebSocket	typeref:typename:size_t
count	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t count() { return _count; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:uint32_t
count_if	experiments/ESP_Async_WebServer/src/StringArray.h	/^    size_t count_if(Predicate predicate) const {$/;"	f	class:LinkedList	typeref:typename:size_t
count_sketches	experiments/ESP_AsyncTCP/.github/scripts/install-arduino-ide.sh	/^function count_sketches() # count_sketches <examples-path>$/;"	f
count_sketches	experiments/ESP_AsyncTCP/.github/scripts/install-platformio.sh	/^function count_sketches() # count_sketches <examples-path>$/;"	f
count_sketches	experiments/ESP_Async_WebServer/.github/scripts/install-arduino-ide.sh	/^function count_sketches() # count_sketches <examples-path>$/;"	f
count_sketches	experiments/ESP_Async_WebServer/.github/scripts/install-platformio.sh	/^function count_sketches() # count_sketches <examples-path>$/;"	f
csPinMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
csPinMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
csPort	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
csPort	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
currentServoIndex	experiments/Servo/src/megaavr/Servo.cpp	/^static volatile int8_t currentServoIndex[_Nbr_16timers];   \/\/ index for the servo being pulsed/;"	v	typeref:typename:volatile int8_t[]	file:
currentServoIndex	experiments/Servo/src/samd/Servo.cpp	/^static volatile int8_t currentServoIndex[_Nbr_16timers];   \/\/ index for the servo being pulsed/;"	v	typeref:typename:volatile int8_t[]	file:
dbg	experiments/ESP_Async_WebServer/examples/ESP_AsyncFSBrowser/data/index.htm	/^    <pre id="dbg"><\/pre>$/;"	I
debugTimeStamp	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^inline struct _DEBUG_TIME_STAMP debugTimeStamp(void) {$/;"	f	typeref:struct:_DEBUG_TIME_STAMP
dec	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^  unsigned dec;$/;"	m	struct:_DEBUG_TIME_STAMP	typeref:typename:unsigned
default_certificate	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^uint8_t * default_certificate = NULL;$/;"	v	typeref:typename:uint8_t *
default_certificate_len	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^uint16_t default_certificate_len = 0;$/;"	v	typeref:typename:uint16_t
default_private_key	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^uint8_t * default_private_key = NULL;$/;"	v	typeref:typename:uint8_t *
default_private_key_len	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^uint16_t default_private_key_len = 0;$/;"	v	typeref:typename:uint16_t
dependencies	experiments/ESP_Async_WebServer/library.json	/^  "dependencies": [$/;"	a
depends	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^depends=Adafruit BusIO$/;"	k
depends	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^depends=Adafruit BusIO$/;"	k
description	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "description": "Library to control a PCA9685 16-channel PWM driver module from an Arduino bo/;"	s
description	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "description": "Library to control a PCA9685 16-channel PWM driver module from an Arduino bo/;"	s
description	experiments/ESP_AsyncTCP/library.json	/^  "description":"Asynchronous TCP Library for ESP8266",$/;"	s
description	experiments/ESP_Async_WebServer/library.json	/^  "description":"Asynchronous HTTP and WebSocket Server Library for ESP8266 and ESP32",$/;"	s
detach	experiments/Servo/src/avr/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/mbed/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/megaavr/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/nrf52/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/renesas/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/sam/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/samd/Servo.cpp	/^void Servo::detach()$/;"	f	class:Servo	typeref:typename:void
detach	experiments/Servo/src/stm32f4/Servo.cpp	/^bool Servo::detach() {$/;"	f	class:Servo	typeref:typename:bool
detected	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::detected(void) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
detected	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::detected(void) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
disableAllCallAddress	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableAllCallAddress() {$/;"	f	class:PCA9685	typeref:typename:void
disableAllCallAddress	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableAllCallAddress() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub1Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub1Address() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub1Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub1Address() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub2Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub2Address() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub2Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub2Address() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub3Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub3Address() {$/;"	f	class:PCA9685	typeref:typename:void
disableSub3Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::disableSub3Address() {$/;"	f	class:PCA9685	typeref:typename:void
disconnected	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::disconnected(){$/;"	f	class:AsyncClient	typeref:typename:bool
disconnecting	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::disconnecting(){$/;"	f	class:AsyncClient	typeref:typename:bool
draw_3d_line	pygame_plot.py	/^def draw_3d_line(start, end, color):$/;"	f
draw_3d_line	pygame_plot2.py	/^def draw_3d_line(start, end, color):$/;"	f
draw_x_line	Hexapod-markwtech/src/hexapod.py	/^    def draw_x_line(self, start_x, target_x, increment=0.1, speed=0.05):$/;"	m	class:HexapodLeg
draw_y_line	Hexapod-markwtech/src/hexapod.py	/^    def draw_y_line(self, start_x, target_x, increment=0.1, speed=0.05):$/;"	m	class:HexapodLeg
draw_z_line	Hexapod-markwtech/src/hexapod.py	/^    def draw_z_line(self, start_x, target_x, increment=0.1, speed=0.05):$/;"	m	class:HexapodLeg
duration	experiments/Servo/src/mbed/Servo.cpp	/^    int32_t           duration = -1;$/;"	m	class:ServoImpl	typeref:typename:int32_t	file:
dx	Turrets/angle-calc.py	/^dx = 500  # m$/;"	v
dy	Turrets/angle-calc.py	/^dy = 20  # m - height the target is on$/;"	v
edit_htm_gz	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^const uint8_t edit_htm_gz[] PROGMEM = {$/;"	v	typeref:typename:const uint8_t[]PROGMEM
edit_htm_gz_len	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^#define edit_htm_gz_len /;"	d	file:
editor	experiments/ESP_Async_WebServer/src/edit.htm	/^  <div id="editor"><\/div>$/;"	I
effector_coords	Hexapod-markwtech/src/brute-force-fk-offset.py	/^        effector_coords = forward_kinematics(70, shoulder_offset, elbow_offset)$/;"	v
elbow_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^                elbow_angle = round(elbow_angle, 1)$/;"	v
elbow_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            base_angle, shoulder_angle, elbow_angle = inverse_kinematics(base_offset, shoulder_o/;"	v
elbow_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            elbow_angle = round(elbow_angle, 3)$/;"	v
elbow_offset	Hexapod-markwtech/src/brute-force-ik-offset.py	/^        elbow_offset = -300$/;"	v
email	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "email": "nachtravevl@gmail.com",$/;"	s	object:authors.0
email	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "email": "nachtravevl@gmail.com",$/;"	s	object:authors.0
empty_points	Hexapod-markwtech/src/plot.py	/^    def empty_points(self):$/;"	m	class:Plotter
enable	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void enable(bool e){ _enabled = e; }$/;"	f	class:AsyncWebSocket	typeref:typename:void
enableAllCallAddress	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableAllCallAddress(byte i2cAddressAllCall) {$/;"	f	class:PCA9685	typeref:typename:void
enableAllCallAddress	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableAllCallAddress(byte i2cAddressAllCall) {$/;"	f	class:PCA9685	typeref:typename:void
enableExtClockLine	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableExtClockLine() {$/;"	f	class:PCA9685	typeref:typename:void
enableExtClockLine	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableExtClockLine() {$/;"	f	class:PCA9685	typeref:typename:void
enableSub1Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub1Address(byte i2cAddressSub1) {$/;"	f	class:PCA9685	typeref:typename:void
enableSub1Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub1Address(byte i2cAddressSub1) {$/;"	f	class:PCA9685	typeref:typename:void
enableSub2Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub2Address(byte i2cAddressSub2) {$/;"	f	class:PCA9685	typeref:typename:void
enableSub2Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub2Address(byte i2cAddressSub2) {$/;"	f	class:PCA9685	typeref:typename:void
enableSub3Address	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub3Address(byte i2cAddressSub3) {$/;"	f	class:PCA9685	typeref:typename:void
enableSub3Address	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::enableSub3Address(byte i2cAddressSub3) {$/;"	f	class:PCA9685	typeref:typename:void
enabled	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool enabled() const { return _enabled; }$/;"	f	class:AsyncWebSocket	typeref:typename:bool
end	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^void Adafruit_I2CDevice::end(void) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:void
end	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^void Adafruit_I2CDevice::end(void) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:void
end	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::end(){$/;"	f	class:AsyncServer	typeref:typename:void
end	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  ConstIterator end() const { return _headers.end(); }$/;"	f	class:DefaultHeaders	typeref:typename:ConstIterator
end	experiments/ESP_Async_WebServer/src/StringArray.h	/^    ConstIterator end() const { return ConstIterator(nullptr); }$/;"	f	class:LinkedList	typeref:typename:ConstIterator
end	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::end(){$/;"	f	class:AsyncWebServer	typeref:typename:void
endTransaction	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransaction(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
endTransaction	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransaction(void) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
endTransactionWithDeassertingCS	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransactionWithDeassertingCS() {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
endTransactionWithDeassertingCS	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::endTransactionWithDeassertingCS() {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
ending_angle	Kame-Quadpod/natural-movement.py	/^ending_angle = 155$/;"	v
errorToString	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^const char * AsyncClient::errorToString(err_t error) {$/;"	f	class:AsyncClient	typeref:typename:const char *
error_events	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^enum error_events {$/;"	g
examples	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "examples": [$/;"	a
examples	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "examples": [$/;"	a
excludeListFile	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^const char *excludeListFile = "\/.exclude.files";$/;"	v	typeref:typename:const char *
excludes	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^static ExcludeList *excludes = NULL;$/;"	v	typeref:typename:ExcludeList *	file:
fd	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  int fd;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:int	file:
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["BatchingExample.ino"]$/;"	a	object:examples.1
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ModuleInfo.ino"]$/;"	a	object:examples.5
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["MultiDeviceProxyExample.ino"]$/;"	a	object:examples.2
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ServoEvaluatorExample.ino"]$/;"	a	object:examples.3
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SimpleExample.ino"]$/;"	a	object:examples.0
files	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SoftwareI2CExample.ino"]$/;"	a	object:examples.4
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["BatchingExample.ino"]$/;"	a	object:examples.1
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ModuleInfo.ino"]$/;"	a	object:examples.5
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["MultiDeviceProxyExample.ino"]$/;"	a	object:examples.2
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["ServoEvaluatorExample.ino"]$/;"	a	object:examples.3
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SimpleExample.ino"]$/;"	a	object:examples.0
files	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "files": ["SoftwareI2CExample.ino"]$/;"	a	object:examples.4
filter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool filter(AsyncWebServerRequest *request) const { return _filter == NULL || _filter(reques/;"	f	class:AsyncWebRewrite	typeref:typename:bool
filter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool filter(AsyncWebServerRequest *request){ return _filter == NULL || _filter(request); }$/;"	f	class:AsyncWebHandler	typeref:typename:bool
finISR	experiments/Servo/src/avr/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
finISR	experiments/Servo/src/megaavr/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
finISR	experiments/Servo/src/sam/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
finISR	experiments/Servo/src/samd/Servo.cpp	/^static void finISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
final	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t final;$/;"	m	struct:__anon203386220108	typeref:typename:uint8_t
finished	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    bool finished(){ return _acked == _len; }$/;"	f	class:AsyncEventSourceMessage	typeref:typename:bool
finished	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    virtual bool finished() const { return _finished; }$/;"	f	class:AsyncWebSocketControl	typeref:typename:bool	file:
finished	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual bool finished(){ return _status != WS_MSG_SENDING; }$/;"	f	class:AsyncWebSocketMessage	typeref:typename:bool
flush	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::flush() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
flush	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^bool SyncClient::flush(unsigned int maxWaitMs){$/;"	f	class:SyncClient	typeref:typename:bool
flush	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    void flush() { (void)flush(0);}$/;"	f	class:SyncClient	typeref:typename:void
footer	Hexapod-markwtech/src/static/style.css	/^footer{$/;"	s
forward_kinematics	Hexapod-markwtech/src/brute-force-fk-offset.py	/^def forward_kinematics(base_offset, shoulder_offset, elbow_offset) -> Coords:$/;"	f	typeref:typename:Coords
forward_kinematics	Hexapod-markwtech/src/kinematics.py	/^    def forward_kinematics(self, leg: HexapodLeg, source_angles: ServoAngles) -> Coords:$/;"	m	class:Kinematics	typeref:typename:Coords
frameworks	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "frameworks": "arduino",$/;"	s
frameworks	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "frameworks": "arduino",$/;"	s
frameworks	experiments/ESP_AsyncTCP/library.json	/^  "frameworks": "arduino",$/;"	s
frameworks	experiments/ESP_Async_WebServer/library.json	/^  "frameworks": "arduino",$/;"	s
free	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::free(){$/;"	f	class:AsyncClient	typeref:typename:bool
free	experiments/ESP_Async_WebServer/src/StringArray.h	/^    void free(){$/;"	f	class:LinkedList	typeref:typename:void
freeable	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::freeable(){$/;"	f	class:AsyncClient	typeref:typename:bool
from	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& from(void) const { return _from; }$/;"	f	class:AsyncWebRewrite	typeref:typename:const String &
front	experiments/ESP_Async_WebServer/src/StringArray.h	/^    T& front() const {$/;"	f	class:LinkedList	typeref:typename:T &
g	Turrets/angle-calc.py	/^g = 9.81  # m\/s^2$/;"	v
gen	Hexapod-markwtech/app-capture-photo-working.py	/^def gen():$/;"	f
gen	Hexapod-markwtech/app-cv2.py	/^def gen(): $/;"	f
gen	Hexapod-markwtech/src/app.py	/^def gen():$/;"	f
genRandomMD5	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^static String genRandomMD5(){$/;"	f	typeref:typename:String	file:
gen_frames	Hexapod-markwtech/app-cv2-original.py	/^def gen_frames():$/;"	f
generateDigestHash	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^String generateDigestHash(const char * username, const char * password, const char * realm){$/;"	f	typeref:typename:String
generateEventMessage	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^static String generateEventMessage(const char *message, const char *event, uint32_t id, uint32_t/;"	f	typeref:typename:String	file:
get	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t * get() { return _data; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:uint8_t *
getACErrorTracker	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    std::shared_ptr<ACErrorTracker> getACErrorTracker(void) const { return _errorTracker; };$/;"	f	class:AsyncClient	typeref:typename:std::shared_ptr<ACErrorTracker>
getAckTimeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint32_t AsyncClient::getAckTimeout(){$/;"	f	class:AsyncClient	typeref:typename:uint32_t
getCallbackCloseError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^err_t ACErrorTracker::getCallbackCloseError(void){$/;"	f	class:ACErrorTracker	typeref:typename:err_t
getChannelPWM	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685::getChannelPWM(int channel) {$/;"	f	class:PCA9685	typeref:typename:uint16_t
getChannelPWM	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685::getChannelPWM(int channel) {$/;"	f	class:PCA9685	typeref:typename:uint16_t
getChannelUpdateMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ChannelUpdateMode PCA9685::getChannelUpdateMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_ChannelUpdateMode
getChannelUpdateMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ChannelUpdateMode PCA9685::getChannelUpdateMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_ChannelUpdateMode
getClients	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocket::AsyncWebSocketClientLinkedList AsyncWebSocket::getClients() const {$/;"	f	class:AsyncWebSocket	typeref:typename:AsyncWebSocket::AsyncWebSocketClientLinkedList
getCloseError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    err_t getCloseError(void) const { return _close_error;}$/;"	f	class:ACErrorTracker	typeref:typename:err_t
getCloseError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    err_t getCloseError(void) const { return _errorTracker->getCloseError();}$/;"	f	class:AsyncClient	typeref:typename:err_t
getConnectionId	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    size_t getConnectionId(void) const { return _errorTracker->getConnectionId();}$/;"	f	class:AsyncClient	typeref:typename:size_t
getConnectionId	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    size_t getConnectionId(void) { return _connectionId;}$/;"	f	class:ACErrorTracker	typeref:typename:size_t
getEventCount	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    int getEventCount(size_t ee) const { return _event_count[ee];}$/;"	f	class:AsyncServer	typeref:typename:int
getHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebHeader* AsyncWebServerRequest::getHeader(const String& name) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebHeader *
getHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebHeader* AsyncWebServerRequest::getHeader(const __FlashStringHelper * data) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebHeader *
getHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebHeader* AsyncWebServerRequest::getHeader(size_t num) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebHeader *
getI2CAddress	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getI2CAddress() {$/;"	f	class:PCA9685	typeref:typename:byte
getI2CAddress	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getI2CAddress() {$/;"	f	class:PCA9685	typeref:typename:byte
getI2CSpeed	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint32_t PCA9685::getI2CSpeed() {$/;"	f	class:PCA9685	typeref:typename:uint32_t
getI2CSpeed	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint32_t PCA9685::getI2CSpeed() {$/;"	f	class:PCA9685	typeref:typename:uint32_t
getLastI2CError	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getLastI2CError() {$/;"	f	class:PCA9685	typeref:typename:byte
getLastI2CError	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getLastI2CError() {$/;"	f	class:PCA9685	typeref:typename:byte
getLocalAddress	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint32_t AsyncClient::getLocalAddress() {$/;"	f	class:AsyncClient	typeref:typename:uint32_t
getLocalPort	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint16_t AsyncClient::getLocalPort() {$/;"	f	class:AsyncClient	typeref:typename:uint16_t
getMD5	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^static bool getMD5(uint8_t * data, uint16_t len, char * output){\/\/33 bytes or more$/;"	f	typeref:typename:bool	file:
getMode2Value	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getMode2Value() {$/;"	f	class:PCA9685	typeref:typename:byte
getMode2Value	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::getMode2Value() {$/;"	f	class:PCA9685	typeref:typename:byte
getMss	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint16_t AsyncClient::getMss(){$/;"	f	class:AsyncClient	typeref:typename:uint16_t
getNoDelay	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::getNoDelay(){$/;"	f	class:AsyncClient	typeref:typename:bool
getNoDelay	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncServer::getNoDelay(){$/;"	f	class:AsyncServer	typeref:typename:bool
getOscillatorFrequency	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint32_t Adafruit_PWMServoDriver::getOscillatorFrequency(void) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint32_t
getOscillatorFrequency	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint32_t Adafruit_PWMServoDriver::getOscillatorFrequency(void) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint32_t
getOutputDisabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputDisabledMode PCA9685::getOutputDisabledMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputDisabledMode
getOutputDisabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputDisabledMode PCA9685::getOutputDisabledMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputDisabledMode
getOutputDriverMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputDriverMode PCA9685::getOutputDriverMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputDriverMode
getOutputDriverMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputDriverMode PCA9685::getOutputDriverMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputDriverMode
getOutputEnabledMode	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputEnabledMode PCA9685::getOutputEnabledMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputEnabledMode
getOutputEnabledMode	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_OutputEnabledMode PCA9685::getOutputEnabledMode() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_OutputEnabledMode
getPWM	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint16_t Adafruit_PWMServoDriver::getPWM(uint8_t num, bool off) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint16_t
getPWM	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint16_t Adafruit_PWMServoDriver::getPWM(uint8_t num, bool off) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint16_t
getParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebParameter* AsyncWebServerRequest::getParam(const String& name, bool post, bool file) con/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebParameter *
getParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebParameter* AsyncWebServerRequest::getParam(const __FlashStringHelper * data, bool post, /;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebParameter *
getParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebParameter* AsyncWebServerRequest::getParam(size_t num) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:AsyncWebParameter *
getPhaseBalancer	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_PhaseBalancer PCA9685::getPhaseBalancer() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_PhaseBalancer
getPhaseBalancer	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_PhaseBalancer PCA9685::getPhaseBalancer() {$/;"	f	class:PCA9685	typeref:typename:PCA9685_PhaseBalancer
getPhaseCycle	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::getPhaseCycle(int channel, uint16_t pwmAmount, uint16_t *phaseBegin, uint16_t *pha/;"	f	class:PCA9685	typeref:typename:void
getPhaseCycle	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::getPhaseCycle(int channel, uint16_t pwmAmount, uint16_t *phaseBegin, uint16_t *pha/;"	f	class:PCA9685	typeref:typename:void
getRemoteAddress	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint32_t AsyncClient::getRemoteAddress() {$/;"	f	class:AsyncClient	typeref:typename:uint32_t
getRemotePort	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint16_t AsyncClient::getRemotePort() {$/;"	f	class:AsyncClient	typeref:typename:uint16_t
getRoot	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    JsonVariant & getRoot() { return _root; }$/;"	f	class:AsyncJsonResponse	typeref:typename:JsonVariant &
getRxTimeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint32_t AsyncClient::getRxTimeout(){$/;"	f	class:AsyncClient	typeref:typename:uint32_t
getSSL	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^SSL * AsyncClient::getSSL(){$/;"	f	class:AsyncClient	typeref:typename:SSL *
getSize	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^   size_t getSize() { return _jsonBuffer.size(); }$/;"	f	class:AsyncJsonResponse	typeref:typename:size_t
getWireInterfaceNumber	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^int PCA9685::getWireInterfaceNumber() {$/;"	f	class:PCA9685	typeref:typename:int
getWireInterfaceNumber	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^int PCA9685::getWireInterfaceNumber() {$/;"	f	class:PCA9685	typeref:typename:int
get_step	Kame-Quadpod/natural-movement.py	/^def get_step(current_angle, starting_angle, ending_angle, steps_list):$/;"	f
group_pins	experiments/Servo/src/nrf52/Servo.cpp	/^uint32_t group_pins[3][NRF_PWM_CHANNEL_COUNT]={{NRF_PWM_PIN_NOT_CONNECTED, NRF_PWM_PIN_NOT_CONNE/;"	v	typeref:typename:uint32_t[3][]
gyro_data	Hexapod-markwtech/gyro.py	/^    gyro_data = mpu.get_gyro_data()$/;"	v
h1	Hexapod-markwtech/src/static/style.css	/^h1{$/;"	s
handleBody	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  virtual void handleBody(AsyncWebServerRequest *request, uint8_t *data, size_t len, size_t inde/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
handleBody	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual void handleBody(AsyncWebServerRequest *request __attribute__((unused)), uint8_t *dat/;"	f	class:AsyncWebHandler	typeref:typename:void
handleBody	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    virtual void handleBody(AsyncWebServerRequest *request, uint8_t *data, size_t len, size_t in/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::handleRequest(AsyncWebServerRequest *request){$/;"	f	class:AsyncEventSource	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  virtual void handleRequest(AsyncWebServerRequest *request) override final {$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::handleRequest(AsyncWebServerRequest *request){$/;"	f	class:AsyncWebSocket	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual void handleRequest(AsyncWebServerRequest *request __attribute__((unused))){}$/;"	f	class:AsyncWebHandler	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^void SPIFFSEditor::handleRequest(AsyncWebServerRequest *request){$/;"	f	class:SPIFFSEditor	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    virtual void handleRequest(AsyncWebServerRequest *request) override final {$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
handleRequest	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^void AsyncStaticWebHandler::handleRequest(AsyncWebServerRequest *request)$/;"	f	class:AsyncStaticWebHandler	typeref:typename:void
handleUpload	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  virtual void handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
handleUpload	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual void handleUpload(AsyncWebServerRequest *request  __attribute__((unused)), const Str/;"	f	class:AsyncWebHandler	typeref:typename:void
handleUpload	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^void SPIFFSEditor::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t i/;"	f	class:SPIFFSEditor	typeref:typename:void
handleUpload	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    virtual void handleUpload(AsyncWebServerRequest *request, const String& filename, size_t ind/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
handle_interrupts	experiments/Servo/src/avr/Servo.cpp	/^static inline void handle_interrupts(timer16_Sequence_t timer, volatile uint16_t *TCNTn, volatil/;"	f	typeref:typename:void	file:
handshake	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  int handshake;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:int	file:
hasArg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasArg(const __FlashStringHelper * data) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
hasArg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasArg(const char* name) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
hasClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool hasClient(void) const { return (_client != NULL);}$/;"	f	class:ACErrorTracker	typeref:typename:bool
hasClient	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    bool hasClient(uint32_t id){ return client(id) != NULL; }$/;"	f	class:AsyncWebSocket	typeref:typename:bool
hasHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasHeader(const String& name) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
hasHeader	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasHeader(const __FlashStringHelper * data) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
hasParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasParam(const String& name, bool post, bool file) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
hasParam	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::hasParam(const __FlashStringHelper * data, bool post, bool file) con/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
header	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::header(const __FlashStringHelper * data) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
header	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::header(const char* name) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
header	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::header(size_t i) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
headerName	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::headerName(size_t i) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
headers	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^size_t AsyncWebServerRequest::headers() const{$/;"	f	class:AsyncWebServerRequest	typeref:typename:size_t
headers_t	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^  using headers_t = LinkedList<AsyncWebHeader *>;$/;"	t	class:DefaultHeaders	typeref:typename:LinkedList<AsyncWebHeader * >
hexapod	Hexapod-markwtech/src/main.py	/^hexapod = Hexapod()$/;"	v
homepage	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "homepage": "https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino\/",$/;"	s
homepage	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "homepage": "https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino\/",$/;"	s
host	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& host() const { return _host; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
i2cWire_begin	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::i2cWire_begin() {$/;"	f	class:PCA9685	typeref:typename:void
i2cWire_begin	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::i2cWire_begin() {$/;"	f	class:PCA9685	typeref:typename:void
i2cWire_beginTransmission	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::i2cWire_beginTransmission(uint8_t addr) {$/;"	f	class:PCA9685	typeref:typename:void
i2cWire_beginTransmission	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::i2cWire_beginTransmission(uint8_t addr) {$/;"	f	class:PCA9685	typeref:typename:void
i2cWire_endTransmission	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_endTransmission(void) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_endTransmission	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_endTransmission(void) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_read	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_read(void) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_read	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_read(void) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_requestFrom	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_requestFrom(uint8_t addr, uint8_t len) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_requestFrom	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint8_t PCA9685::i2cWire_requestFrom(uint8_t addr, uint8_t len) {$/;"	f	class:PCA9685	typeref:typename:uint8_t
i2cWire_write	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^size_t PCA9685::i2cWire_write(uint8_t data) {$/;"	f	class:PCA9685	typeref:typename:size_t
i2cWire_write	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^size_t PCA9685::i2cWire_write(uint8_t data) {$/;"	f	class:PCA9685	typeref:typename:size_t
i2c_dev	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  Adafruit_I2CDevice *i2c_dev = NULL; \/\/\/< Pointer to I2C bus interface$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:Adafruit_I2CDevice *
i2c_dev	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.h	/^  Adafruit_I2CDevice *i2c_dev = NULL; \/\/\/< Pointer to I2C bus interface$/;"	m	class:Adafruit_PWMServoDriver	typeref:typename:Adafruit_I2CDevice *
id	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t id(){ return _clientId; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:uint32_t
img	Hexapod-markwtech/src/static/style.css	/^img{$/;"	s
incEventCount	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    int incEventCount(size_t ee) { return ++_event_count[ee];}$/;"	f	class:AsyncServer	typeref:typename:int
index	Hexapod-markwtech/app-capture-photo-working.py	/^def index():$/;"	f
index	Hexapod-markwtech/app-cv2-original.py	/^def index():$/;"	f
index	Hexapod-markwtech/app-cv2.py	/^def index(): $/;"	f
index	Hexapod-markwtech/src/app.py	/^def index():$/;"	f
index	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint64_t index;$/;"	m	struct:__anon203386220108	typeref:typename:uint64_t
init	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::init(PCA9685_OutputDriverMode driverMode,$/;"	f	class:PCA9685	typeref:typename:void
init	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::init(PCA9685_PhaseBalancer phaseBalancer,$/;"	f	class:PCA9685	typeref:typename:void
init	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::init(PCA9685_OutputDriverMode driverMode,$/;"	f	class:PCA9685	typeref:typename:void
init	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::init(PCA9685_PhaseBalancer phaseBalancer,$/;"	f	class:PCA9685	typeref:typename:void
initAsProxyAddresser	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::initAsProxyAddresser() {$/;"	f	class:PCA9685	typeref:typename:void
initAsProxyAddresser	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::initAsProxyAddresser() {$/;"	f	class:PCA9685	typeref:typename:void
initISR	experiments/Servo/src/avr/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
initISR	experiments/Servo/src/megaavr/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
initISR	experiments/Servo/src/sam/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
initISR	experiments/Servo/src/samd/Servo.cpp	/^static void initISR(timer16_Sequence_t timer)$/;"	f	typeref:typename:void	file:
input_div	experiments/ESP_Async_WebServer/examples/ESP_AsyncFSBrowser/data/index.htm	/^    <div id="input_div">$/;"	I
input_el	experiments/ESP_Async_WebServer/examples/ESP_AsyncFSBrowser/data/index.htm	/^      $<input type="text" value="" id="input_el">$/;"	I
install_32bit_packages	Hexapod-markwtech/rpi-configuration.sh	/^    install_32bit_packages()$/;"	f
install_32bit_packages	Hexapod-markwtech/rpi-configuration.sh	/^install_32bit_packages() {$/;"	f
install_64bit_packages	Hexapod-markwtech/rpi-configuration.sh	/^    install_64bit_packages()$/;"	f
install_64bit_packages	Hexapod-markwtech/rpi-configuration.sh	/^install_64bit_packages() {$/;"	f
install_common_packages	Hexapod-markwtech/rpi-configuration.sh	/^    install_common_packages()$/;"	f
install_common_packages	Hexapod-markwtech/rpi-configuration.sh	/^install_common_packages() {$/;"	f
interactive_angle_control	Hexapod-markwtech/src/hexapod.py	/^    def interactive_angle_control(self, leg_id: int):$/;"	m	class:Hexapod
interactive_effector_control	Hexapod-markwtech/src/hexapod.py	/^    def interactive_effector_control(self, leg_id: int):$/;"	m	class:Hexapod
inverse_kinematics	Hexapod-markwtech/src/brute-force-ik-offset.py	/^def inverse_kinematics(base_angle_offset, shoulder_angle_offset, elbow_angle_offset):$/;"	f
inverse_kinematics	Hexapod-markwtech/src/kinematics.py	/^    def inverse_kinematics(self, leg: HexapodLeg, target: Coords):$/;"	m	class:Kinematics
inverse_kinematics_2	Hexapod-markwtech/src/brute-force-ik-offset.py	/^def inverse_kinematics_2(target: Coords):$/;"	f
io_mask	experiments/Servo/src/renesas/Servo.cpp	/^    uint32_t io_mask;$/;"	m	struct:__anon2492671d0108	typeref:typename:uint32_t	file:
io_port	experiments/Servo/src/renesas/Servo.cpp	/^    volatile uint32_t *io_port;$/;"	m	struct:__anon2492671d0108	typeref:typename:volatile uint32_t *	file:
isActive	experiments/Servo/src/Servo.h	/^  uint8_t isActive   :1 ;             \/\/ true if this channel is enabled, pin not pulsed if fa/;"	m	struct:__anonc3bc0c620108	typeref:typename:uint8_t:1
isEmpty	experiments/ESP_Async_WebServer/src/StringArray.h	/^    bool isEmpty() const {$/;"	f	class:LinkedList	typeref:typename:bool
isExcluded	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^static bool isExcluded(fs::FS &_fs, const char *filename) {$/;"	f	typeref:typename:bool	file:
isExpectedRequestedConnType	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool AsyncWebServerRequest::isExpectedRequestedConnType(RequestedConnectionType erct1, Requested/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
isFile	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool isFile() const { return _isFile; }$/;"	f	class:AsyncWebParameter	typeref:typename:bool
isPost	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool isPost() const { return _isForm; }$/;"	f	class:AsyncWebParameter	typeref:typename:bool
isRecvPush	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool isRecvPush(){ return !!(_recv_pbuf_flags & PBUF_FLAG_PUSH); }$/;"	f	class:AsyncClient	typeref:typename:bool
isRequestHandlerTrivial	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  virtual bool isRequestHandlerTrivial() override final {return _onRequest ? false : true;}$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:bool
isRequestHandlerTrivial	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual bool isRequestHandlerTrivial(){return true;}$/;"	f	class:AsyncWebHandler	typeref:typename:bool
isRequestHandlerTrivial	experiments/ESP_Async_WebServer/src/SPIFFSEditor.h	/^    virtual bool isRequestHandlerTrivial() override final {return false;}$/;"	f	class:SPIFFSEditor	typeref:typename:bool
isRequestHandlerTrivial	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    virtual bool isRequestHandlerTrivial() override final {return _onRequest ? false : true;}$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:bool
isTimerActive	experiments/Servo/src/avr/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	typeref:typename:boolean	file:
isTimerActive	experiments/Servo/src/megaavr/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	typeref:typename:boolean	file:
isTimerActive	experiments/Servo/src/sam/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	typeref:typename:boolean	file:
isTimerActive	experiments/Servo/src/samd/Servo.cpp	/^static boolean isTimerActive(timer16_Sequence_t timer)$/;"	f	typeref:typename:boolean	file:
item	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^    char *item;$/;"	m	struct:ExcludeListS	typeref:typename:char *	file:
itemWriteByte	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^#define itemWriteByte(/;"	d	file:
keepAlivePeriod	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint16_t keepAlivePeriod(){$/;"	f	class:AsyncWebSocketClient	typeref:typename:uint16_t
keepAlivePeriod	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void keepAlivePeriod(uint16_t seconds){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
keywords	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "keywords": "PCA9685, pwm, i2c, controller, driver",$/;"	s
keywords	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "keywords": "PCA9685, pwm, i2c, controller, driver",$/;"	s
keywords	experiments/ESP_AsyncTCP/library.json	/^  "keywords":"async,tcp",$/;"	s
keywords	experiments/ESP_Async_WebServer/library.json	/^  "keywords":"http,async,websocket,webserver",$/;"	s
lastId	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    uint32_t lastId() const { return _lastId; }$/;"	f	class:AsyncEventSourceClient	typeref:typename:uint32_t
last_wr	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  int last_wr;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:int	file:
leg_FL	Hexapod-markwtech/src/main.py	/^leg_FL = HexapodLeg(hexapod, 0, Coords(0, 0, 0), shared_legs_params)$/;"	v
leg_FR	Hexapod-markwtech/src/main.py	/^leg_FR = HexapodLeg(hexapod, 1, Coords(0, 0, 0), shared_legs_params)$/;"	v
len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    uint8_t len(){ return _len + 2; }$/;"	f	class:AsyncWebSocketControl	typeref:typename:uint8_t	file:
len	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint64_t len;$/;"	m	struct:__anon203386220108	typeref:typename:uint64_t
length	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    size_t length() { return _len; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:size_t
length	experiments/ESP_Async_WebServer/src/StringArray.h	/^    size_t length() const {$/;"	f	class:LinkedList	typeref:typename:size_t
libCompatMode	experiments/ESP_AsyncTCP/library.json	/^    "libCompatMode": 2$/;"	n	object:build
license	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "license": "GPL-3.0-or-later",$/;"	s
license	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "license": "GPL-3.0-or-later",$/;"	s
license	experiments/ESP_AsyncTCP/library.json	/^  "license": "LGPL-3.0",$/;"	s
license	experiments/ESP_Async_WebServer/library.json	/^  "license": "LGPL-3.0",$/;"	s
loadExcludeList	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^static void loadExcludeList(fs::FS &_fs, const char *filename){$/;"	f	typeref:typename:void	file:
loader	experiments/ESP_Async_WebServer/src/edit.htm	/^  <div id="loader" class="loader"><\/div>$/;"	I
localIP	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^IPAddress AsyncClient::localIP() {$/;"	f	class:AsyncClient	typeref:typename:IPAddress
localPort	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint16_t AsyncClient::localPort() {$/;"	f	class:AsyncClient	typeref:typename:uint16_t
lock	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void lock() { _lock = true; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:void
lock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  bool lock() const {$/;"	f	class:AsyncWebLock	typeref:typename:bool
main	pygame_plot.py	/^def main():$/;"	f
main	pygame_plot2.py	/^def main():$/;"	f
maintainer	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^maintainer=Adafruit <info@adafruit.com>$/;"	k
maintainer	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^maintainer=Adafruit <info@adafruit.com>$/;"	k
maintainer	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "maintainer": true$/;"	b	object:authors.0
maintainer	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^maintainer=NachtRaveVL <nachtravevl@gmail.com>$/;"	k
maintainer	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^maintainer=Adafruit <info@adafruit.com>$/;"	k
maintainer	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^maintainer=Adafruit <info@adafruit.com>$/;"	k
maintainer	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "maintainer": true$/;"	b	object:authors.0
maintainer	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^maintainer=NachtRaveVL <nachtravevl@gmail.com>$/;"	k
maintainer	experiments/ESP_AsyncTCP/library.json	/^    "maintainer": true$/;"	b	object:authors
maintainer	experiments/ESP_AsyncTCP/library.properties	/^maintainer=Me-No-Dev$/;"	k
maintainer	experiments/ESP_Async_WebServer/library.json	/^    "maintainer": true$/;"	b	object:authors
maintainer	experiments/ESP_Async_WebServer/library.properties	/^maintainer=Me-No-Dev$/;"	k
maintainer	experiments/Servo/library.properties	/^maintainer=Arduino <info@arduino.cc>$/;"	k
makeBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer * AsyncWebSocket::makeBuffer(size_t size)$/;"	f	class:AsyncWebSocket	typeref:typename:AsyncWebSocketMessageBuffer *
makeBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer * AsyncWebSocket::makeBuffer(uint8_t * data, size_t size)$/;"	f	class:AsyncWebSocket	typeref:typename:AsyncWebSocketMessageBuffer *
map_range	Hexapod-markwtech/src/utils.py	/^def map_range(v, a, b, c, d):$/;"	f
mask	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t mask[4];$/;"	m	struct:__anon203386220108	typeref:typename:uint8_t[4]
masked	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t masked;$/;"	m	struct:__anon203386220108	typeref:typename:uint8_t
match	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual bool match(AsyncWebServerRequest *request) { return from() == request->url() && filt/;"	f	class:AsyncWebRewrite	typeref:typename:bool
matchWild	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^static bool matchWild(const char *pattern, const char *testee) {$/;"	f	typeref:typename:bool	file:
max	experiments/Servo/src/Servo.h	/^   int8_t max;                       \/\/ maximum is this value times 4 added to MAX_PULSE_WIDTH/;"	m	class:Servo	typeref:typename:int8_t
maxAngle	experiments/Servo/src/stm32f4/ServoTimers.h	/^    int16 maxAngle;$/;"	m	class:Servo	typeref:typename:int16
maxBufferSize	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t maxBufferSize() { return _maxBufferSize; }$/;"	f	class:Adafruit_I2CDevice	typeref:typename:size_t
maxBufferSize	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.h	/^  size_t maxBufferSize() { return _maxBufferSize; }$/;"	f	class:Adafruit_I2CDevice	typeref:typename:size_t
maxJsonBufferSize	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  const size_t maxJsonBufferSize;$/;"	m	class:AsyncCallbackJsonWebHandler	typeref:typename:const size_t
maxPW	experiments/Servo/src/stm32f4/ServoTimers.h	/^    uint16 maxPW;$/;"	m	class:Servo	typeref:typename:uint16
memchr	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void* memchr(void* ptr, int ch, size_t count)$/;"	f	typeref:typename:void *
message	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::message(uint32_t id, AsyncWebSocketMessage *message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
message	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void message(AsyncWebSocketMessage *message){ _queueMessage(message); }$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
messageAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::messageAll(AsyncWebSocketMultiMessage *message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
message_opcode	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t message_opcode;$/;"	m	struct:__anon203386220108	typeref:typename:uint8_t
method	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    WebRequestMethodComposite method() const { return _method; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:WebRequestMethodComposite
methodToString	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const char * AsyncWebServerRequest::methodToString() const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const char *
min	experiments/Servo/src/Servo.h	/^   int8_t min;                       \/\/ minimum is this value times 4 added to MIN_PULSE_WIDTH/;"	m	class:Servo	typeref:typename:int8_t
minAngle	experiments/Servo/src/stm32f4/ServoTimers.h	/^    int16 minAngle;$/;"	m	class:Servo	typeref:typename:int16
minPW	experiments/Servo/src/stm32f4/ServoTimers.h	/^    uint16 minPW;$/;"	m	class:Servo	typeref:typename:uint16
misoPinMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
misoPinMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
misoPort	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
misoPort	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
modify_angles	Hexapod-markwtech/src/kinematics.py	/^    def modify_angles(self, source_angles: ServoAngles) -> ServoAngles:$/;"	m	class:Kinematics	typeref:typename:ServoAngles
mosiPinMask	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
mosiPinMask	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortMask mosiPinMask, misoPinMask, clkPinMask, csPinMask;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortMask
mosiPort	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
mosiPort	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.h	/^  BusIO_PortReg *mosiPort, *clkPort, *misoPort, *csPort;$/;"	m	class:Adafruit_SPIDevice	typeref:typename:BusIO_PortReg *
move_from_point_to_point	Hexapod-markwtech/src/hexapod.py	/^    def move_from_point_to_point(self, start_point: Coords, target_point: Coords, increment=0.1,/;"	m	class:HexapodLeg
move_leg_X	Hexapod-markwtech/src/hexapod.py	/^    def move_leg_X(self, value):$/;"	m	class:HexapodLeg
move_leg_Y	Hexapod-markwtech/src/hexapod.py	/^    def move_leg_Y(self, value):$/;"	m	class:HexapodLeg
move_leg_Z	Hexapod-markwtech/src/hexapod.py	/^    def move_leg_Z(self, value):$/;"	m	class:HexapodLeg
move_to_point	Hexapod-markwtech/src/hexapod.py	/^    def move_to_point(self, target_point: Coords):$/;"	m	class:HexapodLeg
mpu	Hexapod-markwtech/gyro.py	/^mpu = mpu6050(0x68)$/;"	v
multipart	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    bool multipart() const { return _isMultipart; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:bool
n_servos	experiments/Servo/src/renesas/Servo.cpp	/^static size_t n_servos=0;$/;"	v	typeref:typename:size_t	file:
name	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^name=Adafruit BusIO$/;"	k
name	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^name=Adafruit PWM Servo Driver Library$/;"	k
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "BatchingExample",$/;"	s	object:examples.1
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "Kasper Skårhøj",$/;"	s	object:authors.2
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "ModuleInfo",$/;"	s	object:examples.5
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "MultiDeviceProxyExample",$/;"	s	object:examples.2
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "NachtRaveVL",$/;"	s	object:authors.0
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "ServoEvaluatorExample",$/;"	s	object:examples.3
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "SimpleExample",$/;"	s	object:examples.0
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "SoftwareI2CExample",$/;"	s	object:examples.4
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "Vitska",$/;"	s	object:authors.1
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "name": "PCA9685-Arduino",$/;"	s
name	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^name=PCA9685 16-Channel PWM Driver Module Library$/;"	k
name	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^name=Adafruit BusIO$/;"	k
name	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^name=Adafruit PWM Servo Driver Library$/;"	k
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "BatchingExample",$/;"	s	object:examples.1
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "Kasper Skårhøj",$/;"	s	object:authors.2
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "ModuleInfo",$/;"	s	object:examples.5
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "MultiDeviceProxyExample",$/;"	s	object:examples.2
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "NachtRaveVL",$/;"	s	object:authors.0
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "ServoEvaluatorExample",$/;"	s	object:examples.3
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "SimpleExample",$/;"	s	object:examples.0
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "SoftwareI2CExample",$/;"	s	object:examples.4
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "name": "Vitska",$/;"	s	object:authors.1
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "name": "PCA9685-Arduino",$/;"	s
name	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^name=PCA9685 16-Channel PWM Driver Module Library$/;"	k
name	experiments/ESP_AsyncTCP/library.json	/^    "name": "Hristo Gochkov",$/;"	s	object:authors
name	experiments/ESP_AsyncTCP/library.json	/^  "name":"ESPAsyncTCP",$/;"	s
name	experiments/ESP_AsyncTCP/library.properties	/^name=ESP AsyncTCP$/;"	k
name	experiments/ESP_Async_WebServer/library.json	/^      "name": "AsyncTCP",$/;"	s	object:dependencies.1
name	experiments/ESP_Async_WebServer/library.json	/^      "name": "ESPAsyncTCP",$/;"	s	object:dependencies.0
name	experiments/ESP_Async_WebServer/library.json	/^      "name": "Hash",$/;"	s	object:dependencies.2
name	experiments/ESP_Async_WebServer/library.json	/^    "name": "Hristo Gochkov",$/;"	s	object:authors
name	experiments/ESP_Async_WebServer/library.json	/^  "name":"ESP Async WebServer",$/;"	s
name	experiments/ESP_Async_WebServer/library.properties	/^name=ESP Async WebServer$/;"	k
name	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& name() const { return _name; }$/;"	f	class:AsyncWebHeader	typeref:typename:const String &
name	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& name() const { return _name; }$/;"	f	class:AsyncWebParameter	typeref:typename:const String &
name	experiments/Servo/library.properties	/^name=Servo$/;"	k
nbr	experiments/Servo/src/Servo.h	/^  uint8_t nbr        :6 ;             \/\/ a pin number from 0 to 63$/;"	m	struct:__anonc3bc0c620108	typeref:typename:uint8_t:6
next	experiments/ESP_AsyncTCP/src/AsyncPrinter.h	/^    AsyncPrinter *next;$/;"	m	class:AsyncPrinter	typeref:typename:AsyncPrinter *
next	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^    struct pending_pcb * next;$/;"	m	struct:pending_pcb	typeref:struct:pending_pcb *	file:
next	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AsyncClient* next;$/;"	m	class:AsyncClient	typeref:typename:AsyncClient *
next	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  struct tcp_ssl_pcb * next;$/;"	m	struct:tcp_ssl_pcb	typeref:struct:tcp_ssl_pcb *	file:
next	experiments/ESP_Async_WebServer/src/SPIFFSEditor.cpp	/^    ExcludeListS *next;$/;"	m	struct:ExcludeListS	typeref:typename:ExcludeListS *	file:
next	experiments/ESP_Async_WebServer/src/StringArray.h	/^    LinkedListNode<T>* next;$/;"	m	class:LinkedListNode	typeref:typename:LinkedListNode<T> *
noCallback	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::noCallback() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
np	Hexapod-markwtech/matrices.py	/^import numpy as np$/;"	I	nameref:module:numpy
nth	experiments/ESP_Async_WebServer/src/StringArray.h	/^    const T* nth(size_t N) const {$/;"	f	class:LinkedList	typeref:typename:const T *
num	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint32_t num;$/;"	m	struct:__anon203386220108	typeref:typename:uint32_t
on	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncCallbackWebHandler& AsyncWebServer::on(const char* uri, ArRequestHandlerFunction onRequest)/;"	f	class:AsyncWebServer	typeref:typename:AsyncCallbackWebHandler &
on	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncCallbackWebHandler& AsyncWebServer::on(const char* uri, WebRequestMethodComposite method, A/;"	f	class:AsyncWebServer	typeref:typename:AsyncCallbackWebHandler &
onAck	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onAck(AcAckHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onBody	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    void onBody(ArBodyHandlerFunction fn){ _onBody = fn; }$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
onClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::onClient(AcConnectHandler cb, void* arg){$/;"	f	class:AsyncServer	typeref:typename:void
onClose	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::onClose(ApCloseHandler cb, void *arg){$/;"	f	class:AsyncPrinter	typeref:typename:void
onConnect	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onConnect(AcConnectHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onConnect	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::onConnect(ArEventHandlerFunction cb){$/;"	f	class:AsyncEventSource	typeref:typename:void
onData	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^void AsyncPrinter::onData(ApDataHandler cb, void *arg){$/;"	f	class:AsyncPrinter	typeref:typename:void
onData	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onData(AcDataHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onData	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::onData(AsyncTCPbufferDataCb cb) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
onDisconnect	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onDisconnect(AcConnectHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onDisconnect	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::onDisconnect(AsyncTCPbufferDisconnectCb cb) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
onDisconnect	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::onDisconnect (ArDisconnectHandler fn){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
onError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onError(AcErrorHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onErrorEvent	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void ACErrorTracker::onErrorEvent(AsNotifyHandler cb, void *arg) {$/;"	f	class:ACErrorTracker	typeref:typename:void
onEvent	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void onEvent(AwsEventHandler handler){$/;"	f	class:AsyncWebSocket	typeref:typename:void
onFileUpload	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::onFileUpload(ArUploadHandlerFunction fn){$/;"	f	class:AsyncWebServer	typeref:typename:void
onNotFound	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::onNotFound(ArRequestHandlerFunction fn){$/;"	f	class:AsyncWebServer	typeref:typename:void
onPacket	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onPacket(AcPacketHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onPoll	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onPoll(AcConnectHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onRequest	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  void onRequest(ArJsonRequestHandlerFunction fn){ _onRequest = fn; }$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
onRequest	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    void onRequest(ArRequestHandlerFunction fn){ _onRequest = fn; }$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
onRequestBody	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::onRequestBody(ArBodyHandlerFunction fn){$/;"	f	class:AsyncWebServer	typeref:typename:void
onSslFileRequest	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::onSslFileRequest(AcSSlFileHandler cb, void* arg){$/;"	f	class:AsyncServer	typeref:typename:void
onSslFileRequest	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::onSslFileRequest(AcSSlFileHandler cb, void* arg){$/;"	f	class:AsyncWebServer	typeref:typename:void
onTimeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::onTimeout(AcTimeoutHandler cb, void* arg){$/;"	f	class:AsyncClient	typeref:typename:void
onUpload	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    void onUpload(ArUploadHandlerFunction fn){ _onUpload = fn; }$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
on_data	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  tcp_ssl_data_cb_t on_data;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:tcp_ssl_data_cb_t	file:
on_error	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  tcp_ssl_error_cb_t on_error;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:tcp_ssl_error_cb_t	file:
on_handshake	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  tcp_ssl_handshake_cb_t on_handshake;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:tcp_ssl_handshake_cb_t	file:
opcode	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    uint8_t opcode(){ return _opcode; }$/;"	f	class:AsyncWebSocketControl	typeref:typename:uint8_t	file:
opcode	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    uint8_t opcode;$/;"	m	struct:__anon203386220108	typeref:typename:uint8_t
operator !=	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    bool operator!=(const AsyncClient &other) {$/;"	f	class:AsyncClient	typeref:typename:bool
operator !=	experiments/ESP_Async_WebServer/src/StringArray.h	/^      bool operator != (const Iterator& i) const { return _node != i._node; }$/;"	f	class:LinkedList::Iterator	typeref:typename:bool
operator *	experiments/ESP_Async_WebServer/src/StringArray.h	/^      const T& operator * () const { return _node->value(); }$/;"	f	class:LinkedList::Iterator	typeref:typename:const T &
operator ++	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void operator ++(int i) { (void)i; _count++; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:void
operator ++	experiments/ESP_Async_WebServer/src/StringArray.h	/^      Iterator& operator ++() { _node = _node->next; return *this; }$/;"	f	class:LinkedList::Iterator	typeref:typename:Iterator &
operator +=	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncClient & AsyncClient::operator+=(const AsyncClient &other) {$/;"	f	class:AsyncClient	typeref:typename:AsyncClient &
operator --	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void operator --(int i) { (void)i; if (_count > 0) { _count--; } ;  }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:void
operator ->	experiments/ESP_Async_WebServer/src/StringArray.h	/^      const T* operator -> () const { return &_node->value(); }$/;"	f	class:LinkedList::Iterator	typeref:typename:const T *
operator =	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^AsyncPrinter & AsyncPrinter::operator=(const AsyncPrinter &other){$/;"	f	class:AsyncPrinter	typeref:typename:AsyncPrinter &
operator =	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncClient& AsyncClient::operator=(const AsyncClient& other){$/;"	f	class:AsyncClient	typeref:typename:AsyncClient &
operator =	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^SyncClient & SyncClient::operator=(const SyncClient &other){$/;"	f	class:SyncClient	typeref:typename:SyncClient &
operator ==	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::operator==(const AsyncClient &other) {$/;"	f	class:AsyncClient	typeref:typename:bool
operator bool	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^AsyncPrinter::operator bool(){ return connected(); }$/;"	f	class:AsyncPrinter
operator bool	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    operator bool(){ return connected(); }$/;"	f	class:SyncClient
os_strlen	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^#define os_strlen /;"	d	file:
owner	experiments/ESP_Async_WebServer/library.json	/^      "owner": "me-no-dev",      $/;"	s	object:dependencies.1
owner	experiments/ESP_Async_WebServer/library.json	/^      "owner": "me-no-dev",$/;"	s	object:dependencies.0
packetsWaiting	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    size_t  packetsWaiting() const { return _messageQueue.length(); }$/;"	f	class:AsyncEventSourceClient	typeref:typename:size_t
paragraph	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^paragraph=This is a library for abstracting away UART, I2C and SPI interfacing$/;"	k
paragraph	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^paragraph=Adafruit PWM Servo Driver Library$/;"	k
paragraph	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^paragraph=This library allows communication with boards running a PCA6985 16-channel PWM driver /;"	k
paragraph	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^paragraph=This is a library for abstracting away UART, I2C and SPI interfacing$/;"	k
paragraph	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^paragraph=Adafruit PWM Servo Driver Library$/;"	k
paragraph	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^paragraph=This library allows communication with boards running a PCA6985 16-channel PWM driver /;"	k
paragraph	experiments/ESP_AsyncTCP/library.properties	/^paragraph=Async TCP Library for ESP8266 and ESP31B$/;"	k
paragraph	experiments/ESP_Async_WebServer/library.properties	/^paragraph=Async Web Server for ESP8266 and ESP31B$/;"	k
paragraph	experiments/Servo/library.properties	/^paragraph=This library can control a great number of servos.<br \/>It makes careful use of timer/;"	k
params	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& params(void) const { return _params; }$/;"	f	class:AsyncWebRewrite	typeref:typename:const String &
params	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^size_t AsyncWebServerRequest::params() const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:size_t
pathArg	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const String& AsyncWebServerRequest::pathArg(size_t i) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
pb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^    pbuf *pb;$/;"	m	struct:pending_pcb	typeref:typename:pbuf *	file:
pbuf_offset	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  int pbuf_offset;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:int	file:
pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^    tcp_pcb* pcb;$/;"	m	struct:pending_pcb	typeref:typename:tcp_pcb *	file:
peek	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::peek(){$/;"	f	class:SyncClient	typeref:typename:int
pending_pcb	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^struct pending_pcb {$/;"	s	file:
period_count	experiments/Servo/src/renesas/Servo.cpp	/^    uint32_t period_count;$/;"	m	struct:__anon2492671d0108	typeref:typename:uint32_t	file:
period_max	experiments/Servo/src/renesas/Servo.cpp	/^    uint32_t period_max;$/;"	m	struct:__anon2492671d0108	typeref:typename:uint32_t	file:
period_min	experiments/Servo/src/renesas/Servo.cpp	/^    uint32_t period_min;$/;"	m	struct:__anon2492671d0108	typeref:typename:uint32_t	file:
period_us	experiments/Servo/src/renesas/Servo.cpp	/^    uint32_t period_us;$/;"	m	struct:__anon2492671d0108	typeref:typename:uint32_t	file:
pin	experiments/Servo/src/mbed/Servo.cpp	/^    mbed::DigitalOut   *pin;$/;"	m	class:ServoImpl	typeref:typename:mbed::DigitalOut *	file:
pin	experiments/Servo/src/stm32f4/ServoTimers.h	/^    int16 pin;$/;"	m	class:Servo	typeref:typename:int16
pinfo	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsFrameInfo const &pinfo() const { return _pinfo; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:AwsFrameInfo const &
ping	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::ping(uint32_t id, uint8_t *data, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
ping	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::ping(uint8_t *data, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
pingAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::pingAll(uint8_t *data, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
platforms	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "platforms": "*"$/;"	s
platforms	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "platforms": "*"$/;"	s
platforms	experiments/ESP_AsyncTCP/library.json	/^  "platforms": "espressif8266",$/;"	s
platforms	experiments/ESP_Async_WebServer/library.json	/^      "platforms": "espressif32"$/;"	s	object:dependencies.1
platforms	experiments/ESP_Async_WebServer/library.json	/^      "platforms": "espressif8266"$/;"	s	object:dependencies.0
platforms	experiments/ESP_Async_WebServer/library.json	/^      "platforms": "espressif8266"$/;"	s	object:dependencies.2
platforms	experiments/ESP_Async_WebServer/library.json	/^  "platforms": ["espressif8266", "espressif32"],$/;"	a
plot_list	Hexapod-markwtech/src/plot.py	/^    def plot_list(self, points_list):$/;"	m	class:Plotter
plot_point	Hexapod-markwtech/src/plot.py	/^    def plot_point(self, point):$/;"	m	class:Plotter
plot_points	Hexapod-markwtech/src/plot.py	/^    def plot_points(self):$/;"	m	class:Plotter
plt	Hexapod-markwtech/src/plot.py	/^from matplotlib import pyplot as plt$/;"	Y	nameref:unknown:pyplot
point	Hexapod-markwtech/matrices.py	/^point = np.array([10, 0, 10])$/;"	v
prev	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    AsyncClient* prev;$/;"	m	class:AsyncClient	typeref:typename:AsyncClient *
preview	experiments/ESP_Async_WebServer/src/edit.htm	/^  <div id="preview" style="display:none;"><\/div>$/;"	I
print	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::print(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
print	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::print(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
printModuleInfo	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::printModuleInfo() {$/;"	f	class:PCA9685	typeref:typename:void
printModuleInfo	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::printModuleInfo() {$/;"	f	class:PCA9685	typeref:typename:void
printf	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocket::printf(uint32_t id, const char *format, ...){$/;"	f	class:AsyncWebSocket	typeref:typename:size_t
printf	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocketClient::printf(const char *format, ...) {$/;"	f	class:AsyncWebSocketClient	typeref:typename:size_t
printfAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocket::printfAll(const char *format, ...) {$/;"	f	class:AsyncWebSocket	typeref:typename:size_t
printfAll_P	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocket::printfAll_P(PGM_P formatP, ...) {$/;"	f	class:AsyncWebSocket	typeref:typename:size_t
printf_P	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocket::printf_P(uint32_t id, PGM_P formatP, ...){$/;"	f	class:AsyncWebSocket	typeref:typename:size_t
printf_P	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t AsyncWebSocketClient::printf_P(PGM_P formatP, ...) {$/;"	f	class:AsyncWebSocketClient	typeref:typename:size_t
println	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::println(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
println	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::println(Stream *s) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
project_point	pygame_plot.py	/^def project_point(x, y, z):$/;"	f
project_point	pygame_plot2.py	/^def project_point(x, y, z):$/;"	f
pwmForAngle	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685_ServoEval::pwmForAngle(float angle) {$/;"	f	class:PCA9685_ServoEval	typeref:typename:uint16_t
pwmForAngle	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685_ServoEval::pwmForAngle(float angle) {$/;"	f	class:PCA9685_ServoEval	typeref:typename:uint16_t
pwmForSpeed	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685_ServoEval::pwmForSpeed(float speed) {$/;"	f	class:PCA9685_ServoEval	typeref:typename:uint16_t
pwmForSpeed	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^uint16_t PCA9685_ServoEval::pwmForSpeed(float speed) {$/;"	f	class:PCA9685_ServoEval	typeref:typename:uint16_t
queueIsFull	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^bool AsyncWebSocketClient::queueIsFull(){$/;"	f	class:AsyncWebSocketClient	typeref:typename:bool
ra_servo_t	experiments/Servo/src/renesas/Servo.cpp	/^} ra_servo_t;$/;"	t	typeref:struct:__anon2492671d0108	file:
ra_servos	experiments/Servo/src/renesas/Servo.cpp	/^static ra_servo_t ra_servos[SERVO_MAX_SERVOS];$/;"	v	typeref:typename:ra_servo_t[]	file:
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint16_t *value) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *value) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::read(void) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_RegisterBits::read(void) {$/;"	f	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint32_t
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::read(uint8_t *buffer, size_t len, uint8_t sendvalue) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint16_t *value) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::read(uint8_t *value) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::read(void) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_RegisterBits::read(void) {$/;"	f	class:Adafruit_BusIO_RegisterBits	typeref:typename:uint32_t
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::read(uint8_t *buffer, size_t len, bool stop) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::read(uint8_t *buffer, size_t len, uint8_t sendvalue) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
read	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::read(){$/;"	f	class:SyncClient	typeref:typename:int
read	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::read(uint8_t *data, size_t len){$/;"	f	class:SyncClient	typeref:typename:int
read	experiments/Servo/src/avr/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/mbed/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/megaavr/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/nrf52/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/renesas/Servo.cpp	/^int Servo::read()$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/sam/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/samd/Servo.cpp	/^int Servo::read() \/\/ return the value as degrees$/;"	f	class:Servo	typeref:typename:int
read	experiments/Servo/src/stm32f4/Servo.cpp	/^int Servo::read() const {$/;"	f	class:Servo	typeref:typename:int
read8	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::read8(uint8_t addr) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
read8	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::read8(uint8_t addr) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
readBytes	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::readBytes(char *buffer, size_t length, AsyncTCPbufferDoneCb done) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
readBytes	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::readBytes(uint8_t *buffer, size_t length, AsyncTCPbufferDoneCb done) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
readCached	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::readCached(void) { return _cached; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
readCached	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint32_t Adafruit_BusIO_Register::readCached(void) { return _cached; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint32_t
readMicroseconds	experiments/Servo/src/avr/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/mbed/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/megaavr/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/nrf52/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/renesas/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/sam/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/samd/Servo.cpp	/^int Servo::readMicroseconds()$/;"	f	class:Servo	typeref:typename:int
readMicroseconds	experiments/Servo/src/stm32f4/Servo.cpp	/^uint16 Servo::readMicroseconds() const {$/;"	f	class:Servo	typeref:typename:uint16
readPrescale	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::readPrescale(void) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
readPrescale	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::readPrescale(void) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
readRegister	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::readRegister(byte regAddress) {$/;"	f	class:PCA9685	typeref:typename:byte
readRegister	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^byte PCA9685::readRegister(byte regAddress) {$/;"	f	class:PCA9685	typeref:typename:byte
readStringUntil	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::readStringUntil(char terminator, String * str, AsyncTCPbufferDoneCb done) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
redirect	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::redirect(const String& url){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
ref	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::ref(){$/;"	f	class:SyncClient	typeref:typename:int
remoteIP	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^IPAddress AsyncClient::remoteIP() {$/;"	f	class:AsyncClient	typeref:typename:IPAddress
remoteIP	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^IPAddress AsyncTCPbuffer::remoteIP() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:IPAddress
remoteIP	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^IPAddress AsyncWebSocketClient::remoteIP() {$/;"	f	class:AsyncWebSocketClient	typeref:typename:IPAddress
remotePort	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint16_t AsyncClient::remotePort() {$/;"	f	class:AsyncClient	typeref:typename:uint16_t
remotePort	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^uint16_t AsyncTCPbuffer::remotePort() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:uint16_t
remotePort	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^uint16_t AsyncWebSocketClient::remotePort() {$/;"	f	class:AsyncWebSocketClient	typeref:typename:uint16_t
remove	experiments/ESP_Async_WebServer/src/StringArray.h	/^    bool remove(const T& t){$/;"	f	class:LinkedList	typeref:typename:bool
removeHandler	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^bool AsyncWebServer::removeHandler(AsyncWebHandler *handler){$/;"	f	class:AsyncWebServer	typeref:typename:bool
removeRewrite	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^bool AsyncWebServer::removeRewrite(AsyncWebRewrite *rewrite){$/;"	f	class:AsyncWebServer	typeref:typename:bool
remove_first	experiments/ESP_Async_WebServer/src/StringArray.h	/^    bool remove_first(Predicate predicate){$/;"	f	class:LinkedList	typeref:typename:bool
repository	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "repository": {$/;"	o
repository	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "repository": {$/;"	o
repository	experiments/ESP_AsyncTCP/library.json	/^  "repository":$/;"	o
repository	experiments/ESP_Async_WebServer/library.json	/^  "repository":$/;"	o
requestAuthentication	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::requestAuthentication(const char * realm, bool isDigest){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
requestDigestAuthentication	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^String requestDigestAuthentication(const char * realm){$/;"	f	typeref:typename:String
requestedConnType	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    RequestedConnectionType requestedConnType() const { return _reqconntype; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:RequestedConnectionType
requestedConnTypeToString	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^const char *AsyncWebServerRequest::requestedConnTypeToString() const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:const char *
reserve	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^bool AsyncWebSocketMessageBuffer::reserve(size_t size) $/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:bool
reset	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::reset() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
reset	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::reset() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
reset	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^void AsyncWebServer::reset(){$/;"	f	class:AsyncWebServer	typeref:typename:void
resetDevices	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::resetDevices() {$/;"	f	class:PCA9685	typeref:typename:void
resetDevices	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::resetDevices() {$/;"	f	class:PCA9685	typeref:typename:void
resetFields	experiments/Servo/src/stm32f4/Servo.cpp	/^void Servo::resetFields(void) {$/;"	f	class:Servo	typeref:typename:void
resetTC	experiments/Servo/src/samd/Servo.cpp	/^static inline void resetTC (Tc* TCx)$/;"	f	typeref:typename:void	file:
result	Turrets/angle-calc.py	/^result = (pow(v, 2) \/ (g * dx)) - math.sqrt(A - 1)$/;"	v
rewrite	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncWebRewrite& AsyncWebServer::rewrite(const char* from, const char* to){$/;"	f	class:AsyncWebServer	typeref:typename:AsyncWebRewrite &
ripple_mode	Hexapod-markwtech/src/gate_engine.py	/^    def ripple_mode(self):$/;"	m	class:GateEngine
rotate_point	pygame_plot.py	/^def rotate_point(x, y, z, angle_x, angle_y, angle_z):$/;"	f
rotate_point	pygame_plot2.py	/^def rotate_point(x, y, z, angle_x, angle_y, angle_z):$/;"	f
rotate_x	Hexapod-markwtech/matrices.py	/^def rotate_x(point, theta):$/;"	f
rotate_y	Hexapod-markwtech/matrices.py	/^def rotate_y(point, theta):$/;"	f
rotate_z	Hexapod-markwtech/matrices.py	/^def rotate_z(point, theta):$/;"	f
run	Hexapod-markwtech/Makefile	/^run:$/;"	t
run_fk_test	Hexapod-markwtech/src/tests.py	/^    def run_fk_test(self, leg: HexapodLeg, test_data: ServoAngles, expected_output: Coords):$/;"	m	class:Tests
run_ik_test	Hexapod-markwtech/src/tests.py	/^    def run_ik_test(self, leg: HexapodLeg, test_data: Coords, expected_output: ServoAngles):$/;"	m	class:Tests
run_tests	Hexapod-markwtech/src/tests.py	/^    def run_tests(self, leg: HexapodLeg):$/;"	m	class:Tests
screen	pygame_plot.py	/^screen = pygame.display.set_mode((WIDTH, HEIGHT))$/;"	v
screen	pygame_plot2.py	/^screen = pygame.display.set_mode((WIDTH, HEIGHT))$/;"	v
send	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^bool AsyncClient::send(){$/;"	f	class:AsyncClient	typeref:typename:bool
send	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^size_t AsyncEventSourceMessage::send(AsyncClient *client) {$/;"	f	class:AsyncEventSourceMessage	typeref:typename:size_t
send	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSource::send(const char *message, const char *event, uint32_t id, uint32_t reconn/;"	f	class:AsyncEventSource	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::send(const char *message, const char *event, uint32_t id, uint32_t /;"	f	class:AsyncEventSourceClient	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    size_t send(AsyncClient *client){$/;"	f	class:AsyncWebSocketControl	typeref:typename:size_t	file:
send	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ size_t AsyncWebSocketBasicMessage::send(AsyncClient *client)  {$/;"	f	class:AsyncWebSocketBasicMessage	typeref:typename:size_t
send	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^ size_t AsyncWebSocketMultiMessage::send(AsyncClient *client)  {$/;"	f	class:AsyncWebSocketMultiMessage	typeref:typename:size_t
send	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual size_t send(AsyncClient *client __attribute__((unused))){ return 0; }$/;"	f	class:AsyncWebSocketMessage	typeref:typename:size_t
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(AsyncWebServerResponse *response){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(FS &fs, const String& path, const String& contentType, bool dow/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(File content, const String& path, const String& contentType, bo/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(Stream &stream, const String& contentType, size_t len, AwsTempl/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(const String& contentType, size_t len, AwsResponseFiller callba/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send(int code, const String& contentType, const String& content){$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
sendChunked	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::sendChunked(const String& contentType, AwsResponseFiller callback, A/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send_P	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send_P(int code, const String& contentType, PGM_P content, AwsTempla/;"	f	class:AsyncWebServerRequest	typeref:typename:void
send_P	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^void AsyncWebServerRequest::send_P(int code, const String& contentType, const uint8_t * content,/;"	f	class:AsyncWebServerRequest	typeref:typename:void
sent	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    bool sent() { return _sent == _len; }$/;"	f	class:AsyncEventSourceMessage	typeref:typename:bool
sentence	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^sentence=This is a library for abstracting away UART, I2C and SPI interfacing$/;"	k
sentence	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^sentence=Adafruit PWM Servo Driver Library$/;"	k
sentence	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^sentence=Library to control a PCA9685 16-channel PWM driver module from an Arduino board.$/;"	k
sentence	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^sentence=This is a library for abstracting away UART, I2C and SPI interfacing$/;"	k
sentence	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^sentence=Adafruit PWM Servo Driver Library$/;"	k
sentence	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^sentence=Library to control a PCA9685 16-channel PWM driver module from an Arduino board.$/;"	k
sentence	experiments/ESP_AsyncTCP/library.properties	/^sentence=Async TCP Library for ESP8266 and ESP31B$/;"	k
sentence	experiments/ESP_Async_WebServer/library.properties	/^sentence=Async Web Server for ESP8266 and ESP31B$/;"	k
sentence	experiments/Servo/library.properties	/^sentence=Allows Arduino boards to control a variety of servo motors.$/;"	k
seq_values	experiments/Servo/src/nrf52/Servo.cpp	/^static uint16_t seq_values[3][NRF_PWM_CHANNEL_COUNT]={{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}};$/;"	v	typeref:typename:uint16_t[3][]	file:
serveStatic	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncStaticWebHandler& AsyncWebServer::serveStatic(const char* uri, fs::FS& fs, const char* path/;"	f	class:AsyncWebServer	typeref:typename:AsyncStaticWebHandler &
server	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AsyncWebSocket *server(){ return _server; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:AsyncWebSocket *
servoIndex	experiments/Servo/src/Servo.h	/^   uint8_t servoIndex;               \/\/ index into the channel data for this servo$/;"	m	class:Servo	typeref:typename:uint8_t
servo_t	experiments/Servo/src/Servo.h	/^} servo_t;$/;"	t	typeref:struct:__anonc3bc0c620208
servo_timer	experiments/Servo/src/renesas/Servo.cpp	/^static FspTimer servo_timer;$/;"	v	typeref:typename:FspTimer	file:
servo_timer_callback	experiments/Servo/src/renesas/Servo.cpp	/^void servo_timer_callback(timer_callback_args_t *args)$/;"	f	typeref:typename:void
servo_timer_config	experiments/Servo/src/renesas/Servo.cpp	/^static int servo_timer_config(uint32_t period_us)$/;"	f	typeref:typename:int	file:
servo_timer_start	experiments/Servo/src/renesas/Servo.cpp	/^static int servo_timer_start()$/;"	f	typeref:typename:int	file:
servo_timer_started	experiments/Servo/src/renesas/Servo.cpp	/^static bool servo_timer_started = false;$/;"	v	typeref:typename:bool	file:
servo_timer_stop	experiments/Servo/src/renesas/Servo.cpp	/^static int servo_timer_stop()$/;"	f	typeref:typename:int	file:
servos	experiments/Servo/src/avr/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                          \/\/ static array of servo structure/;"	v	typeref:typename:servo_t[]	file:
servos	experiments/Servo/src/mbed/Servo.cpp	/^static ServoImpl* servos[MAX_SERVOS];                      \/\/ static array of servo structures$/;"	v	typeref:typename:ServoImpl * []	file:
servos	experiments/Servo/src/megaavr/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                         \/\/ static array of servo structures$/;"	v	typeref:typename:servo_t[]	file:
servos	experiments/Servo/src/nrf52/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                          \/\/ static array of servo structure/;"	v	typeref:typename:servo_t[]	file:
servos	experiments/Servo/src/sam/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                          \/\/ static array of servo structure/;"	v	typeref:typename:servo_t[]	file:
servos	experiments/Servo/src/samd/Servo.cpp	/^static servo_t servos[MAX_SERVOS];                         \/\/ static array of servo structures$/;"	v	typeref:typename:servo_t[]	file:
setAckTimeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::setAckTimeout(uint32_t timeout){$/;"	f	class:AsyncClient	typeref:typename:void
setAddress	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddress(uint16_t address) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
setAddress	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddress(uint16_t address) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
setAddressWidth	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddressWidth(uint16_t address_width) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
setAddressWidth	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setAddressWidth(uint16_t address_width) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
setAllChannelsPWM	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setAllChannelsPWM(uint16_t pwmAmount) {$/;"	f	class:PCA9685	typeref:typename:void
setAllChannelsPWM	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setAllChannelsPWM(uint16_t pwmAmount) {$/;"	f	class:PCA9685	typeref:typename:void
setAuthentication	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHandler& setAuthentication(const char *username, const char *password){  _username =/;"	f	class:AsyncWebHandler	typeref:typename:AsyncWebHandler &
setCacheControl	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setCacheControl(const char* cache_control){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setChannelOff	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelOff(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelOff	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelOff(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelOn	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelOn(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelOn	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelOn(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelPWM	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelPWM(int channel, uint16_t pwmAmount) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelPWM	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelPWM(int channel, uint16_t pwmAmount) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelsPWM	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelsPWM(int begChannel, int numChannels, const uint16_t *pwmAmounts) {$/;"	f	class:PCA9685	typeref:typename:void
setChannelsPWM	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setChannelsPWM(int begChannel, int numChannels, const uint16_t *pwmAmounts) {$/;"	f	class:PCA9685	typeref:typename:void
setChipSelect	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::setChipSelect(int value) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
setChipSelect	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::setChipSelect(int value) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
setCloseError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void ACErrorTracker::setCloseError(err_t e) {$/;"	f	class:ACErrorTracker	typeref:typename:void
setCloseError	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void setCloseError(err_t e) const { _errorTracker->setCloseError(e);}$/;"	f	class:AsyncClient	typeref:typename:void
setCode	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncWebServerResponse::setCode(int code){$/;"	f	class:AsyncWebServerResponse	typeref:typename:void
setConnectionId	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    void setConnectionId(size_t id) { _connectionId=id;}$/;"	f	class:ACErrorTracker	typeref:typename:void
setContentLength	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncWebServerResponse::setContentLength(size_t len){$/;"	f	class:AsyncWebServerResponse	typeref:typename:void
setContentType	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^void AsyncWebServerResponse::setContentType(const String& type){$/;"	f	class:AsyncWebServerResponse	typeref:typename:void
setDefaultFile	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setDefaultFile(const char* filename){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setErrored	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void ACErrorTracker::setErrored(size_t errorEvent){$/;"	f	class:ACErrorTracker	typeref:typename:void
setExtClk	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setExtClk(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setExtClk	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setExtClk(uint8_t prescale) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setFilter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebHandler& setFilter(ArRequestFilterFunction fn) { _filter = fn; return *this; }$/;"	f	class:AsyncWebHandler	typeref:typename:AsyncWebHandler &
setFilter	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    AsyncWebRewrite& setFilter(ArRequestFilterFunction fn) { _filter = fn; return *this; }$/;"	f	class:AsyncWebRewrite	typeref:typename:AsyncWebRewrite &
setHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    void setHandler(AsyncWebHandler *handler){ _handler = handler; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:void
setIsDir	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setIsDir(bool isDir){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setLastModified	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setLastModified(){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setLastModified	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setLastModified(const char* last_modified){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setLastModified	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setLastModified(struct tm* last_modified){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setLastModified	experiments/ESP_Async_WebServer/src/WebHandlers.cpp	/^AsyncStaticWebHandler& AsyncStaticWebHandler::setLastModified(time_t last_modified){$/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setLength	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^	size_t setLength () {$/;"	f	class:PrettyAsyncJsonResponse	typeref:typename:size_t
setLength	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t setLength() {$/;"	f	class:AsyncJsonResponse	typeref:typename:size_t
setMaxContentLength	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  void setMaxContentLength(int maxContentLength){ _maxContentLength = maxContentLength; }$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
setMethod	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^  void setMethod(WebRequestMethodComposite method){ _method = method; }$/;"	f	class:AsyncCallbackJsonWebHandler	typeref:typename:void
setMethod	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    void setMethod(WebRequestMethodComposite method){ _method = method; }$/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
setNoDelay	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::setNoDelay(bool nodelay){$/;"	f	class:AsyncClient	typeref:typename:void
setNoDelay	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncServer::setNoDelay(bool nodelay){$/;"	f	class:AsyncServer	typeref:typename:void
setOscillatorFrequency	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOscillatorFrequency(uint32_t freq) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setOscillatorFrequency	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOscillatorFrequency(uint32_t freq) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setOutputMode	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOutputMode(bool totempole) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setOutputMode	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setOutputMode(bool totempole) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setPWM	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::setPWM(uint8_t num, uint16_t on,$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
setPWM	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^uint8_t Adafruit_PWMServoDriver::setPWM(uint8_t num, uint16_t on,$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:uint8_t
setPWMFreq	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPWMFreq(float freq) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setPWMFreq	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPWMFreq(float freq) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setPWMFreqServo	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setPWMFreqServo() {$/;"	f	class:PCA9685	typeref:typename:void
setPWMFreqServo	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setPWMFreqServo() {$/;"	f	class:PCA9685	typeref:typename:void
setPWMFrequency	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setPWMFrequency(float pwmFrequency) {$/;"	f	class:PCA9685	typeref:typename:void
setPWMFrequency	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::setPWMFrequency(float pwmFrequency) {$/;"	f	class:PCA9685	typeref:typename:void
setPin	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPin(uint8_t num, uint16_t val, bool invert) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setPin	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::setPin(uint8_t num, uint16_t val, bool invert) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
setRxTimeout	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::setRxTimeout(uint32_t timeout){$/;"	f	class:AsyncClient	typeref:typename:void
setSpeed	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::setSpeed(uint32_t desiredclk) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
setSpeed	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::setSpeed(uint32_t desiredclk) {$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
setTemplateProcessor	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    AsyncStaticWebHandler& setTemplateProcessor(AwsTemplateProcessor newCallback) {_callback = n/;"	f	class:AsyncStaticWebHandler	typeref:typename:AsyncStaticWebHandler &
setTimeout	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^void SyncClient::setTimeout(uint32_t seconds){$/;"	f	class:SyncClient	typeref:typename:void
setUri	experiments/ESP_Async_WebServer/src/WebHandlerImpl.h	/^    void setUri(const String& uri){ $/;"	f	class:AsyncCallbackWebHandler	typeref:typename:void
setWidth	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setWidth(uint8_t width) { _width = width; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
setWidth	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^void Adafruit_BusIO_Register::setWidth(uint8_t width) { _width = width; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:void
set_angle	Hexapod-markwtech/src/hexapod.py	/^    def set_angle(self, servo_id: int, angle):$/;"	m	class:HexapodLeg
shared_legs_params	Hexapod-markwtech/src/main.py	/^shared_legs_params = SharedLegParameters(5.1, 6.5, 12.1, 130)$/;"	v
shoulder_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^                shoulder_angle = round(shoulder_angle, 1)$/;"	v
shoulder_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            base_angle, shoulder_angle, elbow_angle = inverse_kinematics(base_offset, shoulder_o/;"	v
shoulder_angle	Hexapod-markwtech/src/brute-force-ik-offset.py	/^            shoulder_angle = round(shoulder_angle, 3)$/;"	v
shoulder_offset	Hexapod-markwtech/src/brute-force-ik-offset.py	/^    shoulder_offset = -300$/;"	v
size	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    size_t size() const { return _size; }$/;"	f	class:AsyncWebParameter	typeref:typename:size_t
sleep	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::sleep() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
sleep	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::sleep() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
space	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^size_t AsyncClient::space(){$/;"	f	class:AsyncClient	typeref:typename:size_t
ssh	Hexapod-markwtech/Makefile	/^ssh:$/;"	t
ssl	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  SSL *ssl;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:SSL *	file:
ssl_ctx	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  SSL_CTX* ssl_ctx;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:SSL_CTX *	file:
start	experiments/Servo/src/mbed/Servo.cpp	/^    void start(uint32_t duration_us) {$/;"	f	class:ServoImpl	typeref:typename:void	file:
starting_angle	Kame-Quadpod/natural-movement.py	/^starting_angle = 58$/;"	v
state	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint8_t AsyncClient::state() {$/;"	f	class:AsyncClient	typeref:typename:uint8_t
stateToString	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^const char * AsyncClient::stateToString(){$/;"	f	class:AsyncClient	typeref:typename:const char *
status	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^uint8_t AsyncServer::status(){$/;"	f	class:AsyncServer	typeref:typename:uint8_t
status	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^uint8_t SyncClient::status(){$/;"	f	class:SyncClient	typeref:typename:uint8_t
status	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    AwsClientStatus status(){ return _status; }$/;"	f	class:AsyncWebSocketClient	typeref:typename:AwsClientStatus
steps	Kame-Quadpod/natural-movement.py	/^steps = [2, 4, 8, 10, 10, 10, 10, 10, 8, 4, 2]$/;"	v
stop	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^void AsyncClient::stop() {$/;"	f	class:AsyncClient	typeref:typename:void
stop	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^void AsyncTCPbuffer::stop() {$/;"	f	class:AsyncTCPbuffer	typeref:typename:void
stop	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^bool SyncClient::stop(unsigned int maxWaitMs){$/;"	f	class:SyncClient	typeref:typename:bool
stop	experiments/ESP_AsyncTCP/src/SyncClient.h	/^    void stop() { (void)stop(0);}$/;"	f	class:SyncClient	typeref:typename:void
strContains	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^bool strContains(String src, String find, bool mindcase = true) {$/;"	f	typeref:typename:bool
stringMD5	experiments/ESP_Async_WebServer/src/WebAuthentication.cpp	/^static String stringMD5(const String& in){$/;"	f	typeref:typename:String	file:
sync	Hexapod-markwtech/Makefile	/^sync:$/;"	t
tcp	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  struct tcp_pcb *tcp;$/;"	m	struct:tcp_ssl_pcb	typeref:struct:tcp_pcb *	file:
tcp_pbuf	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  struct pbuf *tcp_pbuf;$/;"	m	struct:tcp_ssl_pcb	typeref:struct:pbuf *	file:
tcp_ssl_arg	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void tcp_ssl_arg(struct tcp_pcb *tcp, void * arg){$/;"	f	typeref:typename:void
tcp_ssl_array	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^static tcp_ssl_t * tcp_ssl_array = NULL;$/;"	v	typeref:typename:tcp_ssl_t *	file:
tcp_ssl_data	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void tcp_ssl_data(struct tcp_pcb *tcp, tcp_ssl_data_cb_t arg){$/;"	f	typeref:typename:void
tcp_ssl_data_cb_t	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^typedef void (* tcp_ssl_data_cb_t)(void *arg, struct tcp_pcb *tcp, uint8_t * data, size_t len);$/;"	t	typeref:typename:void (*)(void * arg,struct tcp_pcb * tcp,uint8_t * data,size_t len)
tcp_ssl_err	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void tcp_ssl_err(struct tcp_pcb *tcp, tcp_ssl_error_cb_t arg){$/;"	f	typeref:typename:void
tcp_ssl_error_cb_t	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^typedef void (* tcp_ssl_error_cb_t)(void *arg, struct tcp_pcb *tcp, int8_t error);$/;"	t	typeref:typename:void (*)(void * arg,struct tcp_pcb * tcp,int8_t error)
tcp_ssl_file	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void tcp_ssl_file(tcp_ssl_file_cb_t cb, void * arg){$/;"	f	typeref:typename:void
tcp_ssl_file_cb_t	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^typedef int (* tcp_ssl_file_cb_t)(void *arg, const char *filename, uint8_t **buf);$/;"	t	typeref:typename:int (*)(void * arg,const char * filename,uint8_t ** buf)
tcp_ssl_free	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_free(struct tcp_pcb *tcp) {$/;"	f	typeref:typename:int
tcp_ssl_get	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^tcp_ssl_t* tcp_ssl_get(struct tcp_pcb *tcp) {$/;"	f	typeref:typename:tcp_ssl_t *
tcp_ssl_get_by_fd	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^tcp_ssl_t* tcp_ssl_get_by_fd(int fd) {$/;"	f	typeref:typename:tcp_ssl_t *
tcp_ssl_get_ssl	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^SSL * tcp_ssl_get_ssl(struct tcp_pcb *tcp){$/;"	f	typeref:typename:SSL *
tcp_ssl_handshake	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^void tcp_ssl_handshake(struct tcp_pcb *tcp, tcp_ssl_handshake_cb_t arg){$/;"	f	typeref:typename:void
tcp_ssl_handshake_cb_t	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^typedef void (* tcp_ssl_handshake_cb_t)(void *arg, struct tcp_pcb *tcp, SSL *ssl);$/;"	t	typeref:typename:void (*)(void * arg,struct tcp_pcb * tcp,SSL * ssl)
tcp_ssl_has	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^bool tcp_ssl_has(struct tcp_pcb *tcp){$/;"	f	typeref:typename:bool
tcp_ssl_has_client	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^uint8_t tcp_ssl_has_client(){$/;"	f	typeref:typename:uint8_t
tcp_ssl_is_server	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_is_server(struct tcp_pcb *tcp){$/;"	f	typeref:typename:int
tcp_ssl_new	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^tcp_ssl_t * tcp_ssl_new(struct tcp_pcb *tcp) {$/;"	f	typeref:typename:tcp_ssl_t *
tcp_ssl_new_client	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_new_client(struct tcp_pcb *tcp){$/;"	f	typeref:typename:int
tcp_ssl_new_server	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_new_server(struct tcp_pcb *tcp, SSL_CTX* ssl_ctx){$/;"	f	typeref:typename:int
tcp_ssl_new_server_ctx	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^SSL_CTX * tcp_ssl_new_server_ctx(const char *cert, const char *private_key_file, const char *pas/;"	f	typeref:typename:SSL_CTX *
tcp_ssl_next_fd	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^static int tcp_ssl_next_fd = 0;$/;"	v	typeref:typename:int	file:
tcp_ssl_pcb	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^struct tcp_ssl_pcb {$/;"	s	file:
tcp_ssl_read	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_read(struct tcp_pcb *tcp, struct pbuf *p) {$/;"	f	typeref:typename:int
tcp_ssl_sndbuf	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_sndbuf(struct tcp_pcb *tcp){$/;"	f	typeref:typename:int
tcp_ssl_ssl_read	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define tcp_ssl_ssl_read(/;"	d
tcp_ssl_ssl_write	experiments/ESP_AsyncTCP/src/tcp_axtls.h	/^#define tcp_ssl_ssl_write(/;"	d
tcp_ssl_t	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^typedef struct tcp_ssl_pcb tcp_ssl_t;$/;"	t	typeref:struct:tcp_ssl_pcb	file:
tcp_ssl_write	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^int tcp_ssl_write(struct tcp_pcb *tcp, uint8_t *data, size_t len) {$/;"	f	typeref:typename:int
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, const String &message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, const __FlashStringHelper *message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, const char * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::text(uint32_t id, uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(AsyncWebSocketMessageBuffer * buffer)$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(char * message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(const String &message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(const __FlashStringHelper *data){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(const char * message){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(const char * message, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
text	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocketClient::text(uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocketClient	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(AsyncWebSocketMessageBuffer * buffer){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(const String &message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(const __FlashStringHelper *message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(const char * message){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(const char * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textAll	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^void AsyncWebSocket::textAll(uint8_t * message, size_t len){$/;"	f	class:AsyncWebSocket	typeref:typename:void
textForI2CError	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^static const char *textForI2CError(byte errorCode) {$/;"	f	typeref:typename:const char *	file:
textForI2CError	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^static const char *textForI2CError(byte errorCode) {$/;"	f	typeref:typename:const char *	file:
textForWireInterfaceNumber	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^static const char *textForWireInterfaceNumber(int wireNum) {$/;"	f	typeref:typename:const char *	file:
textForWireInterfaceNumber	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^static const char *textForWireInterfaceNumber(int wireNum) {$/;"	f	typeref:typename:const char *	file:
theta	Hexapod-markwtech/matrices.py	/^theta = np.radians(30)$/;"	v
ticker	experiments/Servo/src/mbed/Servo.cpp	/^    mbed::Ticker       ticker;   \/\/ calls a callback repeatedly with a timeout$/;"	m	class:ServoImpl	typeref:typename:mbed::Ticker	file:
ticks	experiments/Servo/src/Servo.h	/^  volatile unsigned int ticks;$/;"	m	struct:__anonc3bc0c620208	typeref:typename:volatile unsigned int
ticksToUs	experiments/Servo/src/avr/Servo.cpp	/^#define ticksToUs(/;"	d	file:
ticksToUs	experiments/Servo/src/megaavr/Servo.cpp	/^#define ticksToUs(/;"	d	file:
ticksToUs	experiments/Servo/src/sam/Servo.cpp	/^#define ticksToUs(/;"	d	file:
ticksToUs	experiments/Servo/src/samd/Servo.cpp	/^#define ticksToUs(/;"	d	file:
timeout	experiments/Servo/src/mbed/Servo.cpp	/^    mbed::Timeout      timeout;  \/\/ calls a callback once when a timeout expires$/;"	m	class:ServoImpl	typeref:typename:mbed::Timeout	file:
timer0	experiments/Servo/src/megaavr/ServoTimers.h	/^    timer0,$/;"	e	enum:__anon25c82fa80103
timer16_Sequence_t	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anonf594814e0203
timer16_Sequence_t	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anonf594814e0503
timer16_Sequence_t	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anonf594814e0303
timer16_Sequence_t	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer3, _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anonf594814e0403
timer16_Sequence_t	experiments/Servo/src/avr/ServoTimers.h	/^typedef enum { _timer5, _timer1, _timer3, _timer4, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anonf594814e0103
timer16_Sequence_t	experiments/Servo/src/megaavr/ServoTimers.h	/^    _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anon25c82fa80103
timer16_Sequence_t	experiments/Servo/src/nrf52/ServoTimers.h	/^typedef enum { _timer1, _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anond775ead20103
timer16_Sequence_t	experiments/Servo/src/sam/ServoTimers.h	/^typedef enum { _timer1, _timer2, _timer3, _timer4, _timer5, _Nbr_16timers } timer16_Sequence_t ;$/;"	t	typeref:enum:__anon182525260103
timer16_Sequence_t	experiments/Servo/src/samd/ServoTimers.h	/^    _Nbr_16timers } timer16_Sequence_t;$/;"	t	typeref:enum:__anon50e73c4a0103
toString	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    String toString() const { return String(_name+": "+_value+"\\r\\n"); }$/;"	f	class:AsyncWebHeader	typeref:typename:String
toUrl	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& toUrl(void) const { return _toUrl; }$/;"	f	class:AsyncWebRewrite	typeref:typename:const String &
toggle	experiments/Servo/src/mbed/Servo.cpp	/^    void toggle() {$/;"	f	class:ServoImpl	typeref:typename:void	file:
transfer	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^uint8_t Adafruit_SPIDevice::transfer(uint8_t send) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:uint8_t
transfer	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::transfer(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
transfer	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^uint8_t Adafruit_SPIDevice::transfer(uint8_t send) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:uint8_t
transfer	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^void Adafruit_SPIDevice::transfer(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:void
tree	experiments/ESP_Async_WebServer/src/edit.htm	/^  <div id="tree"><\/div>$/;"	I
tripod_mode	Hexapod-markwtech/src/gate_engine.py	/^    def tripod_mode(self):$/;"	m	class:GateEngine
type	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        "type": "git",$/;"	s	object:repository
type	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        "type": "git",$/;"	s	object:repository
type	experiments/ESP_AsyncTCP/library.json	/^    "type": "git",$/;"	s	object:repository
type	experiments/ESP_AsyncTCP/src/tcp_axtls.c	/^  uint8_t type;$/;"	m	struct:tcp_ssl_pcb	typeref:typename:uint8_t	file:
type	experiments/ESP_Async_WebServer/library.json	/^    "type": "git",$/;"	s	object:repository
unlock	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    void unlock() { _lock = false; }$/;"	f	class:AsyncWebSocketMessageBuffer	typeref:typename:void
unlock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  void unlock() const {$/;"	f	class:AsyncWebLock	typeref:typename:void
unref	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^int SyncClient::unref(){$/;"	f	class:SyncClient	typeref:typename:int
uploader	experiments/ESP_Async_WebServer/src/edit.htm	/^  <div id="uploader"><\/div>$/;"	I
url	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^url=https:\/\/github.com\/adafruit\/Adafruit_BusIO$/;"	k
url	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^url=https:\/\/github.com\/adafruit\/Adafruit-PWM-Servo-Driver-Library$/;"	k
url	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/NachtRaveVL",$/;"	s	object:authors.0
url	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/kasperskaarhoj"$/;"	s	object:authors.2
url	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/vitska"$/;"	s	object:authors.1
url	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        "url": "https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino.git"$/;"	s	object:repository
url	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^url=https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino$/;"	k
url	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^url=https:\/\/github.com\/adafruit\/Adafruit_BusIO$/;"	k
url	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^url=https:\/\/github.com\/adafruit\/Adafruit-PWM-Servo-Driver-Library$/;"	k
url	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/NachtRaveVL",$/;"	s	object:authors.0
url	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/kasperskaarhoj"$/;"	s	object:authors.2
url	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^            "url": "https:\/\/github.com\/vitska"$/;"	s	object:authors.1
url	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^        "url": "https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino.git"$/;"	s	object:repository
url	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^url=https:\/\/github.com\/NachtRaveVL\/PCA9685-Arduino$/;"	k
url	experiments/ESP_AsyncTCP/library.json	/^    "url": "https:\/\/github.com\/me-no-dev\/ESPAsyncTCP.git"$/;"	s	object:repository
url	experiments/ESP_AsyncTCP/library.properties	/^url=https:\/\/github.com\/me-no-dev\/ESPAsyncTCP$/;"	k
url	experiments/ESP_Async_WebServer/library.json	/^    "url": "https:\/\/github.com\/me-no-dev\/ESPAsyncWebServer.git"$/;"	s	object:repository
url	experiments/ESP_Async_WebServer/library.properties	/^url=https:\/\/github.com\/me-no-dev\/ESPAsyncWebServer$/;"	k
url	experiments/ESP_Async_WebServer/src/AsyncEventSource.h	/^    const char * url() const { return _url.c_str(); }$/;"	f	class:AsyncEventSource	typeref:typename:const char *
url	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    const char * url() const { return _url.c_str(); }$/;"	f	class:AsyncWebSocket	typeref:typename:const char *
url	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& url() const { return _url; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:const String &
url	experiments/Servo/library.properties	/^url=https:\/\/www.arduino.cc\/reference\/en\/libraries\/servo\/$/;"	k
urlDecode	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^String AsyncWebServerRequest::urlDecode(const String& text) const {$/;"	f	class:AsyncWebServerRequest	typeref:typename:String
usToTicks	experiments/Servo/src/avr/Servo.cpp	/^#define usToTicks(/;"	d	file:
usToTicks	experiments/Servo/src/megaavr/Servo.cpp	/^#define usToTicks(/;"	d	file:
usToTicks	experiments/Servo/src/sam/Servo.cpp	/^#define usToTicks(/;"	d	file:
usToTicks	experiments/Servo/src/samd/Servo.cpp	/^#define usToTicks(/;"	d	file:
v	Turrets/angle-calc.py	/^v = 120  # m\/s$/;"	v
value	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& value() const { return _value; }$/;"	f	class:AsyncWebHeader	typeref:typename:const String &
value	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    const String& value() const { return _value; }$/;"	f	class:AsyncWebParameter	typeref:typename:const String &
value	experiments/ESP_Async_WebServer/src/StringArray.h	/^    T& value(){ return _value; }$/;"	f	class:LinkedListNode	typeref:typename:T &
value	experiments/ESP_Async_WebServer/src/StringArray.h	/^    const T& value() const { return _value; };$/;"	f	class:LinkedListNode	typeref:typename:const T &
vc	Hexapod-markwtech/app-cv2.py	/^vc = cv2.VideoCapture(0) $/;"	v
version	InMoove-Arm/libraries/Adafruit_BusIO/library.properties	/^version=1.14.4$/;"	k
version	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^version=3.0.1$/;"	k
version	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "version": "1.2.15",$/;"	s
version	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^version=1.2.15$/;"	k
version	Kame-Quadpod/libraries/Adafruit_BusIO/library.properties	/^version=1.14.4$/;"	k
version	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/library.properties	/^version=3.0.1$/;"	k
version	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.json	/^    "version": "1.2.15",$/;"	s
version	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/library.properties	/^version=1.2.15$/;"	k
version	experiments/ESP_AsyncTCP/library.json	/^  "version": "1.2.2",$/;"	s
version	experiments/ESP_AsyncTCP/library.properties	/^version=1.2.2$/;"	k
version	experiments/ESP_Async_WebServer/library.json	/^      "version": "^1.1.1",$/;"	s	object:dependencies.1
version	experiments/ESP_Async_WebServer/library.json	/^      "version": "^1.2.2",$/;"	s	object:dependencies.0
version	experiments/ESP_Async_WebServer/library.json	/^  "version": "1.2.3",$/;"	s
version	experiments/ESP_Async_WebServer/library.properties	/^version=1.2.3$/;"	k
version	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    uint8_t version() const { return _version; }$/;"	f	class:AsyncWebServerRequest	typeref:typename:uint8_t
version	experiments/Servo/library.properties	/^version=1.2.1$/;"	k
video_feed	Hexapod-markwtech/app-capture-photo-working.py	/^def video_feed():$/;"	f
video_feed	Hexapod-markwtech/app-cv2-original.py	/^def video_feed():$/;"	f
video_feed	Hexapod-markwtech/app-cv2.py	/^def video_feed(): $/;"	f
video_feed	Hexapod-markwtech/src/app.py	/^def video_feed():$/;"	f
wakeup	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::wakeup() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
wakeup	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::wakeup() {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
walk	Hexapod-markwtech/src/hexapod.py	/^    def walk(self):$/;"	m	class:Hexapod
wave_mode	Hexapod-markwtech/src/gate_engine.py	/^    def wave_mode(self):$/;"	m	class:GateEngine
webSocketSendFrame	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t webSocketSendFrame(AsyncClient *client, bool final, uint8_t opcode, bool mask, uint8_t *d/;"	f	typeref:typename:size_t
webSocketSendFrameWindow	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^size_t webSocketSendFrameWindow(AsyncClient *client){$/;"	f	typeref:typename:size_t
whole	experiments/ESP_AsyncTCP/src/DebugPrintMacros.h	/^  unsigned whole;$/;"	m	struct:_DEBUG_TIME_STAMP	typeref:typename:unsigned
width	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint8_t Adafruit_BusIO_Register::width(void) { return _width; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
width	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^uint8_t Adafruit_BusIO_Register::width(void) { return _width; }$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:uint8_t
write	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint32_t value, uint8_t numbytes) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
write	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
write	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_RegisterBits::write(uint32_t data) {$/;"	f	class:Adafruit_BusIO_RegisterBits	typeref:typename:bool
write	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write(const uint8_t *buffer, size_t len, bool stop,$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
write	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write(const uint8_t *buffer, size_t len,$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
write	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint32_t value, uint8_t numbytes) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
write	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_Register::write(uint8_t *buffer, uint8_t len) {$/;"	f	class:Adafruit_BusIO_Register	typeref:typename:bool
write	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp	/^bool Adafruit_BusIO_RegisterBits::write(uint32_t data) {$/;"	f	class:Adafruit_BusIO_RegisterBits	typeref:typename:bool
write	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write(const uint8_t *buffer, size_t len, bool stop,$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
write	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write(const uint8_t *buffer, size_t len,$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
write	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^size_t AsyncPrinter::write(const uint8_t *data, size_t len){$/;"	f	class:AsyncPrinter	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^size_t AsyncPrinter::write(uint8_t data){$/;"	f	class:AsyncPrinter	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^size_t AsyncClient::write(const char* data) {$/;"	f	class:AsyncClient	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^size_t AsyncClient::write(const char* data, size_t size, uint8_t apiflags) {$/;"	f	class:AsyncClient	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::write(String & data) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::write(const char *data, size_t len) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::write(const char* data) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::write(const uint8_t *data, size_t len) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^size_t AsyncTCPbuffer::write(uint8_t data) {$/;"	f	class:AsyncTCPbuffer	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^size_t SyncClient::write(const uint8_t *data, size_t len){$/;"	f	class:SyncClient	typeref:typename:size_t
write	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^size_t SyncClient::write(uint8_t data){$/;"	f	class:SyncClient	typeref:typename:size_t
write	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^void AsyncEventSourceClient::write(const char * message, size_t len){$/;"	f	class:AsyncEventSourceClient	typeref:typename:void
write	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t write(const uint8_t *buffer, size_t size)$/;"	f	class:ChunkPrint	typeref:typename:size_t
write	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    size_t write(uint8_t c){$/;"	f	class:ChunkPrint	typeref:typename:size_t
write	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncResponseStream::write(const uint8_t *data, size_t len){$/;"	f	class:AsyncResponseStream	typeref:typename:size_t
write	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^size_t AsyncResponseStream::write(uint8_t data){$/;"	f	class:AsyncResponseStream	typeref:typename:size_t
write	experiments/Servo/src/avr/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/mbed/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/megaavr/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/nrf52/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/renesas/Servo.cpp	/^void Servo::write(int angle)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/sam/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/samd/Servo.cpp	/^void Servo::write(int value)$/;"	f	class:Servo	typeref:typename:void
write	experiments/Servo/src/stm32f4/Servo.cpp	/^void Servo::write(int degrees) {$/;"	f	class:Servo	typeref:typename:void
write8	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::write8(uint8_t addr, uint8_t d) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
write8	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::write8(uint8_t addr, uint8_t d) {$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
writeChannelBegin	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelBegin(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
writeChannelBegin	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelBegin(int channel) {$/;"	f	class:PCA9685	typeref:typename:void
writeChannelEnd	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelEnd() {$/;"	f	class:PCA9685	typeref:typename:void
writeChannelEnd	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelEnd() {$/;"	f	class:PCA9685	typeref:typename:void
writeChannelPWM	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelPWM(uint16_t phaseBegin, uint16_t phaseEnd) {$/;"	f	class:PCA9685	typeref:typename:void
writeChannelPWM	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeChannelPWM(uint16_t phaseBegin, uint16_t phaseEnd) {$/;"	f	class:PCA9685	typeref:typename:void
writeMicroseconds	InMoove-Arm/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::writeMicroseconds(uint8_t num,$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
writeMicroseconds	Kame-Quadpod/libraries/Adafruit_PWM_Servo_Driver_Library/Adafruit_PWMServoDriver.cpp	/^void Adafruit_PWMServoDriver::writeMicroseconds(uint8_t num,$/;"	f	class:Adafruit_PWMServoDriver	typeref:typename:void
writeMicroseconds	experiments/Servo/src/avr/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/mbed/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/megaavr/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/nrf52/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/renesas/Servo.cpp	/^void Servo::writeMicroseconds(int us)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/sam/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/samd/Servo.cpp	/^void Servo::writeMicroseconds(int value)$/;"	f	class:Servo	typeref:typename:void
writeMicroseconds	experiments/Servo/src/stm32f4/Servo.cpp	/^void Servo::writeMicroseconds(uint16 pulseWidth) {$/;"	f	class:Servo	typeref:typename:void
writeRegister	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeRegister(byte regAddress, byte value) {$/;"	f	class:PCA9685	typeref:typename:void
writeRegister	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^void PCA9685::writeRegister(byte regAddress, byte value) {$/;"	f	class:PCA9685	typeref:typename:void
write_and_read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_and_read(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
write_and_read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_and_read(uint8_t *buffer, size_t len) {$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
write_then_read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
write_then_read	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
write_then_read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_I2CDevice.cpp	/^bool Adafruit_I2CDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_I2CDevice	typeref:typename:bool
write_then_read	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^bool Adafruit_SPIDevice::write_then_read(const uint8_t *write_buffer,$/;"	f	class:Adafruit_SPIDevice	typeref:typename:bool
x	Hexapod-markwtech/src/coords.py	/^    x: int = 0.0$/;"	v	class:Coords	typeref:typename:int
y	Hexapod-markwtech/src/coords.py	/^    y: int = 0.0$/;"	v	class:Coords	typeref:typename:int
z	Hexapod-markwtech/src/coords.py	/^    z: int = 0.0$/;"	v	class:Coords	typeref:typename:int
{repository-name} Library for Arduino	experiments/Servo/README.adoc	/^= {repository-name} Library for Arduino =$/;"	c
~ACErrorTracker	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.h	/^    ~ACErrorTracker() {}$/;"	f	class:ACErrorTracker
~Adafruit_SPIDevice	InMoove-Arm/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::~Adafruit_SPIDevice() {$/;"	f	class:Adafruit_SPIDevice
~Adafruit_SPIDevice	Kame-Quadpod/libraries/Adafruit_BusIO/Adafruit_SPIDevice.cpp	/^Adafruit_SPIDevice::~Adafruit_SPIDevice() {$/;"	f	class:Adafruit_SPIDevice
~AsyncClient	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncClient::~AsyncClient(){$/;"	f	class:AsyncClient
~AsyncEventSource	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSource::~AsyncEventSource(){$/;"	f	class:AsyncEventSource
~AsyncEventSourceClient	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSourceClient::~AsyncEventSourceClient(){$/;"	f	class:AsyncEventSourceClient
~AsyncEventSourceMessage	experiments/ESP_Async_WebServer/src/AsyncEventSource.cpp	/^AsyncEventSourceMessage::~AsyncEventSourceMessage() {$/;"	f	class:AsyncEventSourceMessage
~AsyncFileResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncFileResponse::~AsyncFileResponse(){$/;"	f	class:AsyncFileResponse
~AsyncJsonResponse	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    ~AsyncJsonResponse() {}$/;"	f	class:AsyncJsonResponse
~AsyncPrinter	experiments/ESP_AsyncTCP/src/AsyncPrinter.cpp	/^AsyncPrinter::~AsyncPrinter(){$/;"	f	class:AsyncPrinter
~AsyncResponseStream	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncResponseStream::~AsyncResponseStream(){$/;"	f	class:AsyncResponseStream
~AsyncServer	experiments/ESP_AsyncTCP/src/ESPAsyncTCP.cpp	/^AsyncServer::~AsyncServer(){$/;"	f	class:AsyncServer
~AsyncTCPbuffer	experiments/ESP_AsyncTCP/src/ESPAsyncTCPbuffer.cpp	/^AsyncTCPbuffer::~AsyncTCPbuffer() {$/;"	f	class:AsyncTCPbuffer
~AsyncWebHandler	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual ~AsyncWebHandler(){}$/;"	f	class:AsyncWebHandler
~AsyncWebHeader	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    ~AsyncWebHeader(){}$/;"	f	class:AsyncWebHeader
~AsyncWebLock	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  ~AsyncWebLock() {$/;"	f	class:AsyncWebLock
~AsyncWebLockGuard	experiments/ESP_Async_WebServer/src/AsyncWebSynchronization.h	/^  ~AsyncWebLockGuard() {$/;"	f	class:AsyncWebLockGuard
~AsyncWebRewrite	experiments/ESP_Async_WebServer/src/ESPAsyncWebServer.h	/^    virtual ~AsyncWebRewrite(){}$/;"	f	class:AsyncWebRewrite
~AsyncWebServer	experiments/ESP_Async_WebServer/src/WebServer.cpp	/^AsyncWebServer::~AsyncWebServer(){$/;"	f	class:AsyncWebServer
~AsyncWebServerRequest	experiments/ESP_Async_WebServer/src/WebRequest.cpp	/^AsyncWebServerRequest::~AsyncWebServerRequest(){$/;"	f	class:AsyncWebServerRequest
~AsyncWebServerResponse	experiments/ESP_Async_WebServer/src/WebResponses.cpp	/^AsyncWebServerResponse::~AsyncWebServerResponse(){$/;"	f	class:AsyncWebServerResponse
~AsyncWebSocket	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocket::~AsyncWebSocket(){}$/;"	f	class:AsyncWebSocket
~AsyncWebSocketBasicMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketBasicMessage::~AsyncWebSocketBasicMessage() {$/;"	f	class:AsyncWebSocketBasicMessage
~AsyncWebSocketClient	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketClient::~AsyncWebSocketClient(){$/;"	f	class:AsyncWebSocketClient
~AsyncWebSocketControl	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^    virtual ~AsyncWebSocketControl(){$/;"	f	class:AsyncWebSocketControl	file:
~AsyncWebSocketMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.h	/^    virtual ~AsyncWebSocketMessage(){}$/;"	f	class:AsyncWebSocketMessage
~AsyncWebSocketMessageBuffer	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMessageBuffer::~AsyncWebSocketMessageBuffer()$/;"	f	class:AsyncWebSocketMessageBuffer
~AsyncWebSocketMultiMessage	experiments/ESP_Async_WebServer/src/AsyncWebSocket.cpp	/^AsyncWebSocketMultiMessage::~AsyncWebSocketMultiMessage() {$/;"	f	class:AsyncWebSocketMultiMessage
~ChunkPrint	experiments/ESP_Async_WebServer/src/AsyncJson.h	/^    virtual ~ChunkPrint(){}$/;"	f	class:ChunkPrint
~LinkedList	experiments/ESP_Async_WebServer/src/StringArray.h	/^    ~LinkedList(){}$/;"	f	class:LinkedList
~LinkedListNode	experiments/ESP_Async_WebServer/src/StringArray.h	/^    ~LinkedListNode(){}$/;"	f	class:LinkedListNode
~PCA9685_ServoEval	InMoove-Arm/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::~PCA9685_ServoEval() {$/;"	f	class:PCA9685_ServoEval
~PCA9685_ServoEval	Kame-Quadpod/libraries/PCA9685_16-Channel_PWM_Driver_Module_Library/src/PCA9685.cpp	/^PCA9685_ServoEval::~PCA9685_ServoEval() {$/;"	f	class:PCA9685_ServoEval
~ServoImpl	experiments/Servo/src/mbed/Servo.cpp	/^    ~ServoImpl() {$/;"	f	class:ServoImpl	file:
~SyncClient	experiments/ESP_AsyncTCP/src/SyncClient.cpp	/^SyncClient::~SyncClient(){$/;"	f	class:SyncClient
