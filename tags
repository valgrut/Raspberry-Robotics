!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jpeska/Repositories/Raspberry-Robotics/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
A	Turrets/angle-calc.py	/^A = ((pow(v,2)*(pow(v,2)-2*g*dy))\/(pow(g,2)*pow(dx,2)))$/;"	v
Examples	Kame-Quadpod/README.md	/^### Examples$/;"	S	chapter:Kame
Examples	Xpider-cute-robot/README.md	/^### Examples$/;"	S	chapter:Kame
FK_2D	Kame-Quadpod/FK_2D.py	/^def FK_2D(theta1, theta2):$/;"	f
FK_3D	Kame-Quadpod/FK_3D.py	/^def FK_3D(theta1, theta2, theta_yaw):$/;"	f
Kame	Kame-Quadpod/README.md	/^# Kame$/;"	c
Kame	Xpider-cute-robot/README.md	/^# Kame$/;"	c
L1	Kame-Quadpod/FK_2D.py	/^L1 = 2$/;"	v
L1	Kame-Quadpod/FK_3D.py	/^L1 = 8$/;"	v
L1	Kame-Quadpod/FK_3D_3.py	/^L1 = 2  # Length from O1 to O2$/;"	v
L1	Kame-Quadpod/FK_3D_3_joints.py	/^L1 = 2  # Length from R to O$/;"	v
L1	Kame-Quadpod/IK1.py	/^L1 = 2  # Length from O1 to O2$/;"	v
L1	Kame-Quadpod/IK2.py	/^L1 = 5  # Length from O1 to O2$/;"	v
L1	Kame-Quadpod/chatgpt4/IK.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
L1	Kame-Quadpod/chatgpt4/IK_leg.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
L1	Kame-Quadpod/chatgpt4/kinematics.py	/^theta, alpha, beta, L1, L2 = 90, 45, 45, 6, 2$/;"	v
L2	Kame-Quadpod/FK_2D.py	/^L2 = 2$/;"	v
L2	Kame-Quadpod/FK_3D.py	/^L2 = 2$/;"	v
L2	Kame-Quadpod/FK_3D_3.py	/^L2 = 3  # Length from O2 to c$/;"	v
L2	Kame-Quadpod/FK_3D_3_joints.py	/^L2 = 3  # Length from O to c$/;"	v
L2	Kame-Quadpod/IK1.py	/^L2 = 3  # Length from O2 to c$/;"	v
L2	Kame-Quadpod/IK2.py	/^L2 = 2  # Length from O2 to c$/;"	v
L2	Kame-Quadpod/chatgpt4/IK.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
L2	Kame-Quadpod/chatgpt4/IK_leg.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
L2	Kame-Quadpod/chatgpt4/kinematics.py	/^theta, alpha, beta, L1, L2 = 90, 45, 45, 6, 2$/;"	v
L3	Kame-Quadpod/FK_3D_3_joints.py	/^L3 = 0  # Since there's zero length between c and end effector$/;"	v
L3	Kame-Quadpod/chatgpt4/IK.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
L3	Kame-Quadpod/chatgpt4/IK_leg.py	/^L1, L2, L3 = 5, 10, 10  # Example segment lengths$/;"	v
Project pages	Kame-Quadpod/README.md	/^### Project pages$/;"	S	chapter:Kame
Project pages	Xpider-cute-robot/README.md	/^### Project pages$/;"	S	chapter:Kame
Projects	README.md	/^### Projects$/;"	S	chapter:Raspberry-Robotics
Raspberry-Robotics	README.md	/^# Raspberry-Robotics$/;"	c
STL list	Kame-Quadpod/README.md	/^#### STL list$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
STL list	Xpider-cute-robot/README.md	/^#### STL list$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
Screws, tools, ...	Kame-Quadpod/README.md	/^#### Screws, tools, ...$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
Screws, tools, ...	Xpider-cute-robot/README.md	/^#### Screws, tools, ...$/;"	t	subsection:Kame""Seznam materialu a soucastek k tisku
Seznam materialu a soucastek k tisku	Kame-Quadpod/README.md	/^### Seznam materialu a soucastek k tisku$/;"	S	chapter:Kame
Seznam materialu a soucastek k tisku	Xpider-cute-robot/README.md	/^### Seznam materialu a soucastek k tisku$/;"	S	chapter:Kame
U_x	Kame-Quadpod/chatgpt4/IK_leg.py	/^U_x, U_y, U_z = forward_kinematics(theta_1, theta_2, theta_3, L1, L2, L3)$/;"	v
U_y	Kame-Quadpod/chatgpt4/IK_leg.py	/^U_x, U_y, U_z = forward_kinematics(theta_1, theta_2, theta_3, L1, L2, L3)$/;"	v
U_z	Kame-Quadpod/chatgpt4/IK_leg.py	/^U_x, U_y, U_z = forward_kinematics(theta_1, theta_2, theta_3, L1, L2, L3)$/;"	v
alpha	Kame-Quadpod/chatgpt4/kinematics.py	/^theta, alpha, beta, L1, L2 = 90, 45, 45, 6, 2$/;"	v
angles	Kame-Quadpod/chatgpt4/IK.py	/^angles = inverse_kinematics(x, y, z, L1, L2, L3)$/;"	v
angles	Kame-Quadpod/chatgpt4/IK_leg.py	/^angles = inverse_kinematics(x, y, z, L1, L2, L3)$/;"	v
ax	Kame-Quadpod/FK_3D.py	/^ax = fig.add_subplot(projection='3d')$/;"	v
beta	Kame-Quadpod/chatgpt4/kinematics.py	/^theta, alpha, beta, L1, L2 = 90, 45, 45, 6, 2$/;"	v
body_height	Kame-Quadpod/chatgpt4/IK_leg.py	/^body_height = 5  # initial joint height$/;"	v
dx	Turrets/angle-calc.py	/^dx = 500  # m$/;"	v
dy	Turrets/angle-calc.py	/^dy = 20  # m - height the target is on$/;"	v
fig	Kame-Quadpod/FK_3D.py	/^fig = plt.figure()$/;"	v
forward_kinematics	Kame-Quadpod/FK_3D_3.py	/^def forward_kinematics(theta1, theta2, theta3, L1, L2):$/;"	f
forward_kinematics	Kame-Quadpod/FK_3D_3_joints.py	/^def forward_kinematics(theta1, theta2, theta3, L1, L2, L3):$/;"	f
forward_kinematics	Kame-Quadpod/chatgpt4/IK_leg.py	/^def forward_kinematics(theta_1, theta_2, theta_3, L1, L2, L3):$/;"	f
forward_kinematics	Kame-Quadpod/chatgpt4/kinematics.py	/^def forward_kinematics(theta, alpha, beta, L1, L2):$/;"	f
g	Turrets/angle-calc.py	/^g = 9.81  # m\/s^2$/;"	v
hands_i	Kame-Quadpod/FK_2D.py	/^hands_i = 20$/;"	v
inverse_kinematics	Kame-Quadpod/IK1.py	/^def inverse_kinematics(x, y, z, L1, L2):$/;"	f
inverse_kinematics	Kame-Quadpod/chatgpt4/IK.py	/^def inverse_kinematics(x, y, z, L1, L2, L3):$/;"	f
inverse_kinematics	Kame-Quadpod/chatgpt4/IK_leg.py	/^def inverse_kinematics(x, y, z, L1, L2, L3):$/;"	f
new_point	Kame-Quadpod/FK_2D.py	/^        new_point = FK_2D(th1, th2)$/;"	v
np	Kame-Quadpod/IK2.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	Kame-Quadpod/chatgpt4/kinematics.py	/^import numpy as np$/;"	I	nameref:module:numpy
p1	Kame-Quadpod/FK_3D.py	/^            p1, p2, p3 = FK_3D(th1, th2, th_yaw)$/;"	v
p1	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 0)$/;"	v
p1	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 20)$/;"	v
p1	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 90)$/;"	v
p2	Kame-Quadpod/FK_3D.py	/^            p1, p2, p3 = FK_3D(th1, th2, th_yaw)$/;"	v
p2	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 0)$/;"	v
p2	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 20)$/;"	v
p2	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 90)$/;"	v
p3	Kame-Quadpod/FK_3D.py	/^            p1, p2, p3 = FK_3D(th1, th2, th_yaw)$/;"	v
p3	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 0)$/;"	v
p3	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 20)$/;"	v
p3	Kame-Quadpod/FK_3D.py	/^p1, p2, p3 = FK_3D(45, 0, 90)$/;"	v
plot_arm_3d	Kame-Quadpod/chatgpt4/kinematics.py	/^def plot_arm_3d(theta, alpha, beta, L1, L2):$/;"	f
plot_leg	Kame-Quadpod/chatgpt4/IK_leg.py	/^def plot_leg(x, y, z, L1, L2, L3):$/;"	f
plot_robot_arm	Kame-Quadpod/IK2.py	/^def plot_robot_arm(theta_R1, theta_O1, theta_O2, L1, L2):$/;"	f
plt	Kame-Quadpod/FK_2D.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	Kame-Quadpod/FK_3D.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	Kame-Quadpod/IK2.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	Kame-Quadpod/chatgpt4/IK.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	Kame-Quadpod/chatgpt4/IK_leg.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	Kame-Quadpod/chatgpt4/kinematics.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
result	Turrets/angle-calc.py	/^result = (pow(v, 2) \/ (g * dx)) - math.sqrt(A - 1)$/;"	v
theta	Kame-Quadpod/chatgpt4/kinematics.py	/^theta, alpha, beta, L1, L2 = 90, 45, 45, 6, 2$/;"	v
theta1	Kame-Quadpod/FK_2D.py	/^theta1 = 0.0*math.pi$/;"	v
theta1	Kame-Quadpod/FK_3D.py	/^theta1 = 0.0*math.pi$/;"	v
theta1	Kame-Quadpod/FK_3D_3.py	/^theta1 = math.radians(0)  # Convert to radians if necessary$/;"	v
theta1	Kame-Quadpod/FK_3D_3_joints.py	/^theta1 = math.radians(0)  # Convert to radians if necessary$/;"	v
theta1	Kame-Quadpod/IK1.py	/^theta1, theta2, theta3 = inverse_kinematics(x, y, z, L1, L2)$/;"	v
theta1	Kame-Quadpod/IK2.py	/^theta1 = math.radians(90)  # z-axis rotator$/;"	v
theta2	Kame-Quadpod/FK_2D.py	/^theta2 = 0.0*math.pi$/;"	v
theta2	Kame-Quadpod/FK_3D.py	/^theta2 = 0.0*math.pi$/;"	v
theta2	Kame-Quadpod/FK_3D_3.py	/^theta2 = math.radians(30)  # Convert to radians if necessary$/;"	v
theta2	Kame-Quadpod/FK_3D_3_joints.py	/^theta2 = math.radians(0)  # Convert to radians if necessary$/;"	v
theta2	Kame-Quadpod/IK1.py	/^theta1, theta2, theta3 = inverse_kinematics(x, y, z, L1, L2)$/;"	v
theta2	Kame-Quadpod/IK2.py	/^theta2 = math.radians(45)  # spodni joint$/;"	v
theta3	Kame-Quadpod/FK_3D.py	/^theta3 = 0.0*math.pi$/;"	v
theta3	Kame-Quadpod/FK_3D_3.py	/^theta3 = math.radians(60)  # Convert to radians if necessary$/;"	v
theta3	Kame-Quadpod/FK_3D_3_joints.py	/^theta3 = math.radians(0)  # Convert to radians if necessary$/;"	v
theta3	Kame-Quadpod/IK1.py	/^theta1, theta2, theta3 = inverse_kinematics(x, y, z, L1, L2)$/;"	v
theta3	Kame-Quadpod/IK2.py	/^theta3 = math.radians(45)   # horni joint$/;"	v
theta_1	Kame-Quadpod/chatgpt4/IK_leg.py	/^theta_1, theta_2, theta_3 = math.radians(56.309), math.radians(-24.7594), math.radians(88.48)  #/;"	v
theta_2	Kame-Quadpod/chatgpt4/IK_leg.py	/^theta_1, theta_2, theta_3 = math.radians(56.309), math.radians(-24.7594), math.radians(88.48)  #/;"	v
theta_3	Kame-Quadpod/chatgpt4/IK_leg.py	/^theta_1, theta_2, theta_3 = math.radians(56.309), math.radians(-24.7594), math.radians(88.48)  #/;"	v
v	Turrets/angle-calc.py	/^v = 120  # m\/s$/;"	v
x	Kame-Quadpod/FK_3D_3.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2)$/;"	v
x	Kame-Quadpod/FK_3D_3_joints.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2, L3)$/;"	v
x	Kame-Quadpod/IK1.py	/^x = 0$/;"	v
x	Kame-Quadpod/chatgpt4/IK.py	/^x, y, z = 10, -10, -15  # Example target foot position$/;"	v
x	Kame-Quadpod/chatgpt4/IK_leg.py	/^x, y, z = 10, 15, 0  # Example target foot position (z=0 since it's the floor level)$/;"	v
x1_points	Kame-Quadpod/FK_2D.py	/^x1_points = []$/;"	v
x1_points	Kame-Quadpod/FK_3D.py	/^x1_points = []$/;"	v
x2_points	Kame-Quadpod/FK_3D.py	/^x2_points = []$/;"	v
x3_points	Kame-Quadpod/FK_3D.py	/^x3_points = []$/;"	v
x_points	Kame-Quadpod/FK_2D.py	/^x_points = []$/;"	v
y	Kame-Quadpod/FK_3D_3.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2)$/;"	v
y	Kame-Quadpod/FK_3D_3_joints.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2, L3)$/;"	v
y	Kame-Quadpod/IK1.py	/^y = 0$/;"	v
y	Kame-Quadpod/chatgpt4/IK.py	/^x, y, z = 10, -10, -15  # Example target foot position$/;"	v
y	Kame-Quadpod/chatgpt4/IK_leg.py	/^x, y, z = 10, 15, 0  # Example target foot position (z=0 since it's the floor level)$/;"	v
y1_points	Kame-Quadpod/FK_2D.py	/^y1_points = []$/;"	v
y1_points	Kame-Quadpod/FK_3D.py	/^y1_points = []$/;"	v
y2_points	Kame-Quadpod/FK_3D.py	/^y2_points = []$/;"	v
y3_points	Kame-Quadpod/FK_3D.py	/^y3_points = []$/;"	v
y_points	Kame-Quadpod/FK_2D.py	/^y_points = []$/;"	v
z	Kame-Quadpod/FK_3D_3.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2)$/;"	v
z	Kame-Quadpod/FK_3D_3_joints.py	/^x, y, z = forward_kinematics(theta1, theta2, theta3, L1, L2, L3)$/;"	v
z	Kame-Quadpod/IK1.py	/^z = 5$/;"	v
z	Kame-Quadpod/chatgpt4/IK.py	/^x, y, z = 10, -10, -15  # Example target foot position$/;"	v
z	Kame-Quadpod/chatgpt4/IK_leg.py	/^x, y, z = 10, 15, 0  # Example target foot position (z=0 since it's the floor level)$/;"	v
z1_points	Kame-Quadpod/FK_3D.py	/^z1_points = []$/;"	v
z2_points	Kame-Quadpod/FK_3D.py	/^z2_points = []$/;"	v
z3_points	Kame-Quadpod/FK_3D.py	/^z3_points = []$/;"	v
